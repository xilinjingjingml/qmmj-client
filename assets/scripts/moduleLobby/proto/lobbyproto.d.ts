import * as $protobuf from "protobufjs";
/** Properties of a mahjong_lc_update_player_marriage_ack. */
export interface Imahjong_lc_update_player_marriage_ack {

    /** mahjong_lc_update_player_marriage_ack ret */
    ret: number;
}

/** Represents a mahjong_lc_update_player_marriage_ack. */
export class mahjong_lc_update_player_marriage_ack implements Imahjong_lc_update_player_marriage_ack {

    /**
     * Constructs a new mahjong_lc_update_player_marriage_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_update_player_marriage_ack);

    /** mahjong_lc_update_player_marriage_ack ret. */
    public ret: number;

    /**
     * Creates a new mahjong_lc_update_player_marriage_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_update_player_marriage_ack instance
     */
    public static create(properties?: Imahjong_lc_update_player_marriage_ack): mahjong_lc_update_player_marriage_ack;

    /**
     * Encodes the specified mahjong_lc_update_player_marriage_ack message. Does not implicitly {@link mahjong_lc_update_player_marriage_ack.verify|verify} messages.
     * @param message mahjong_lc_update_player_marriage_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_update_player_marriage_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_update_player_marriage_ack message, length delimited. Does not implicitly {@link mahjong_lc_update_player_marriage_ack.verify|verify} messages.
     * @param message mahjong_lc_update_player_marriage_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_update_player_marriage_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_update_player_marriage_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_update_player_marriage_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_update_player_marriage_ack;

    /**
     * Decodes a mahjong_lc_update_player_marriage_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_update_player_marriage_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_update_player_marriage_ack;

    /**
     * Verifies a mahjong_lc_update_player_marriage_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_update_player_marriage_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_update_player_marriage_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_update_player_marriage_ack;

    /**
     * Creates a plain object from a mahjong_lc_update_player_marriage_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_update_player_marriage_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_update_player_marriage_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_update_player_marriage_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_merged_daily_task_data_ack. */
export interface Imahjong_lc_get_merged_daily_task_data_ack {

    /** mahjong_lc_get_merged_daily_task_data_ack items */
    items?: (Imahjong_MergedAchieveData[]|null);
}

/** Represents a mahjong_lc_get_merged_daily_task_data_ack. */
export class mahjong_lc_get_merged_daily_task_data_ack implements Imahjong_lc_get_merged_daily_task_data_ack {

    /**
     * Constructs a new mahjong_lc_get_merged_daily_task_data_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_merged_daily_task_data_ack);

    /** mahjong_lc_get_merged_daily_task_data_ack items. */
    public items: Imahjong_MergedAchieveData[];

    /**
     * Creates a new mahjong_lc_get_merged_daily_task_data_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_merged_daily_task_data_ack instance
     */
    public static create(properties?: Imahjong_lc_get_merged_daily_task_data_ack): mahjong_lc_get_merged_daily_task_data_ack;

    /**
     * Encodes the specified mahjong_lc_get_merged_daily_task_data_ack message. Does not implicitly {@link mahjong_lc_get_merged_daily_task_data_ack.verify|verify} messages.
     * @param message mahjong_lc_get_merged_daily_task_data_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_merged_daily_task_data_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_merged_daily_task_data_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_merged_daily_task_data_ack.verify|verify} messages.
     * @param message mahjong_lc_get_merged_daily_task_data_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_merged_daily_task_data_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_merged_daily_task_data_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_merged_daily_task_data_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_merged_daily_task_data_ack;

    /**
     * Decodes a mahjong_lc_get_merged_daily_task_data_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_merged_daily_task_data_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_merged_daily_task_data_ack;

    /**
     * Verifies a mahjong_lc_get_merged_daily_task_data_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_merged_daily_task_data_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_merged_daily_task_data_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_merged_daily_task_data_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_merged_daily_task_data_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_merged_daily_task_data_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_merged_daily_task_data_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_merged_daily_task_data_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_at_achieve_award_ack. */
export interface Imahjong_lc_get_at_achieve_award_ack {

    /** mahjong_lc_get_at_achieve_award_ack ret */
    ret: number;

    /** mahjong_lc_get_at_achieve_award_ack vecAwards */
    vecAwards?: (Imahjong_ATAchieveAward[]|null);
}

/** Represents a mahjong_lc_get_at_achieve_award_ack. */
export class mahjong_lc_get_at_achieve_award_ack implements Imahjong_lc_get_at_achieve_award_ack {

    /**
     * Constructs a new mahjong_lc_get_at_achieve_award_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_at_achieve_award_ack);

    /** mahjong_lc_get_at_achieve_award_ack ret. */
    public ret: number;

    /** mahjong_lc_get_at_achieve_award_ack vecAwards. */
    public vecAwards: Imahjong_ATAchieveAward[];

    /**
     * Creates a new mahjong_lc_get_at_achieve_award_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_at_achieve_award_ack instance
     */
    public static create(properties?: Imahjong_lc_get_at_achieve_award_ack): mahjong_lc_get_at_achieve_award_ack;

    /**
     * Encodes the specified mahjong_lc_get_at_achieve_award_ack message. Does not implicitly {@link mahjong_lc_get_at_achieve_award_ack.verify|verify} messages.
     * @param message mahjong_lc_get_at_achieve_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_at_achieve_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_at_achieve_award_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_at_achieve_award_ack.verify|verify} messages.
     * @param message mahjong_lc_get_at_achieve_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_at_achieve_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_at_achieve_award_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_at_achieve_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_at_achieve_award_ack;

    /**
     * Decodes a mahjong_lc_get_at_achieve_award_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_at_achieve_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_at_achieve_award_ack;

    /**
     * Verifies a mahjong_lc_get_at_achieve_award_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_at_achieve_award_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_at_achieve_award_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_at_achieve_award_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_at_achieve_award_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_at_achieve_award_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_at_achieve_award_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_at_achieve_award_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_end_chat_req. */
export interface Imahjong_cl_end_chat_req {

    /** mahjong_cl_end_chat_req endGuid */
    endGuid: (number|Long);
}

/** Represents a mahjong_cl_end_chat_req. */
export class mahjong_cl_end_chat_req implements Imahjong_cl_end_chat_req {

    /**
     * Constructs a new mahjong_cl_end_chat_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_end_chat_req);

    /** mahjong_cl_end_chat_req endGuid. */
    public endGuid: (number|Long);

    /**
     * Creates a new mahjong_cl_end_chat_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_end_chat_req instance
     */
    public static create(properties?: Imahjong_cl_end_chat_req): mahjong_cl_end_chat_req;

    /**
     * Encodes the specified mahjong_cl_end_chat_req message. Does not implicitly {@link mahjong_cl_end_chat_req.verify|verify} messages.
     * @param message mahjong_cl_end_chat_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_end_chat_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_end_chat_req message, length delimited. Does not implicitly {@link mahjong_cl_end_chat_req.verify|verify} messages.
     * @param message mahjong_cl_end_chat_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_end_chat_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_end_chat_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_end_chat_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_end_chat_req;

    /**
     * Decodes a mahjong_cl_end_chat_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_end_chat_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_end_chat_req;

    /**
     * Verifies a mahjong_cl_end_chat_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_end_chat_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_end_chat_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_end_chat_req;

    /**
     * Creates a plain object from a mahjong_cl_end_chat_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_end_chat_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_end_chat_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_end_chat_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_get_achieve_award_req. */
export interface Imahjong_cb_get_achieve_award_req {

    /** mahjong_cb_get_achieve_award_req index */
    index: number;
}

/** Represents a mahjong_cb_get_achieve_award_req. */
export class mahjong_cb_get_achieve_award_req implements Imahjong_cb_get_achieve_award_req {

    /**
     * Constructs a new mahjong_cb_get_achieve_award_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_get_achieve_award_req);

    /** mahjong_cb_get_achieve_award_req index. */
    public index: number;

    /**
     * Creates a new mahjong_cb_get_achieve_award_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_get_achieve_award_req instance
     */
    public static create(properties?: Imahjong_cb_get_achieve_award_req): mahjong_cb_get_achieve_award_req;

    /**
     * Encodes the specified mahjong_cb_get_achieve_award_req message. Does not implicitly {@link mahjong_cb_get_achieve_award_req.verify|verify} messages.
     * @param message mahjong_cb_get_achieve_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_get_achieve_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_get_achieve_award_req message, length delimited. Does not implicitly {@link mahjong_cb_get_achieve_award_req.verify|verify} messages.
     * @param message mahjong_cb_get_achieve_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_get_achieve_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_get_achieve_award_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_get_achieve_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_get_achieve_award_req;

    /**
     * Decodes a mahjong_cb_get_achieve_award_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_get_achieve_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_get_achieve_award_req;

    /**
     * Verifies a mahjong_cb_get_achieve_award_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_get_achieve_award_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_get_achieve_award_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_get_achieve_award_req;

    /**
     * Creates a plain object from a mahjong_cb_get_achieve_award_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_get_achieve_award_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_get_achieve_award_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_get_achieve_award_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_at_achieve_list_ack. */
export interface Imahjong_lc_get_at_achieve_list_ack {

    /** mahjong_lc_get_at_achieve_list_ack vecItems */
    vecItems?: (Imahjong_ATAchieveData[]|null);
}

/** Represents a mahjong_lc_get_at_achieve_list_ack. */
export class mahjong_lc_get_at_achieve_list_ack implements Imahjong_lc_get_at_achieve_list_ack {

    /**
     * Constructs a new mahjong_lc_get_at_achieve_list_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_at_achieve_list_ack);

    /** mahjong_lc_get_at_achieve_list_ack vecItems. */
    public vecItems: Imahjong_ATAchieveData[];

    /**
     * Creates a new mahjong_lc_get_at_achieve_list_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_at_achieve_list_ack instance
     */
    public static create(properties?: Imahjong_lc_get_at_achieve_list_ack): mahjong_lc_get_at_achieve_list_ack;

    /**
     * Encodes the specified mahjong_lc_get_at_achieve_list_ack message. Does not implicitly {@link mahjong_lc_get_at_achieve_list_ack.verify|verify} messages.
     * @param message mahjong_lc_get_at_achieve_list_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_at_achieve_list_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_at_achieve_list_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_at_achieve_list_ack.verify|verify} messages.
     * @param message mahjong_lc_get_at_achieve_list_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_at_achieve_list_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_at_achieve_list_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_at_achieve_list_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_at_achieve_list_ack;

    /**
     * Decodes a mahjong_lc_get_at_achieve_list_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_at_achieve_list_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_at_achieve_list_ack;

    /**
     * Verifies a mahjong_lc_get_at_achieve_list_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_at_achieve_list_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_at_achieve_list_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_at_achieve_list_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_at_achieve_list_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_at_achieve_list_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_at_achieve_list_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_at_achieve_list_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_common_award_not. */
export interface Imahjong_bc_common_award_not {

    /** mahjong_bc_common_award_not type */
    type: number;

    /** mahjong_bc_common_award_not param_1 */
    param_1: number;

    /** mahjong_bc_common_award_not param_2 */
    param_2: number;

    /** mahjong_bc_common_award_not param_3 */
    param_3: number;

    /** mahjong_bc_common_award_not name */
    name: string;

    /** mahjong_bc_common_award_not desc */
    desc: string;
}

/** Represents a mahjong_bc_common_award_not. */
export class mahjong_bc_common_award_not implements Imahjong_bc_common_award_not {

    /**
     * Constructs a new mahjong_bc_common_award_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_common_award_not);

    /** mahjong_bc_common_award_not type. */
    public type: number;

    /** mahjong_bc_common_award_not param_1. */
    public param_1: number;

    /** mahjong_bc_common_award_not param_2. */
    public param_2: number;

    /** mahjong_bc_common_award_not param_3. */
    public param_3: number;

    /** mahjong_bc_common_award_not name. */
    public name: string;

    /** mahjong_bc_common_award_not desc. */
    public desc: string;

    /**
     * Creates a new mahjong_bc_common_award_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_common_award_not instance
     */
    public static create(properties?: Imahjong_bc_common_award_not): mahjong_bc_common_award_not;

    /**
     * Encodes the specified mahjong_bc_common_award_not message. Does not implicitly {@link mahjong_bc_common_award_not.verify|verify} messages.
     * @param message mahjong_bc_common_award_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_common_award_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_common_award_not message, length delimited. Does not implicitly {@link mahjong_bc_common_award_not.verify|verify} messages.
     * @param message mahjong_bc_common_award_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_common_award_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_common_award_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_common_award_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_common_award_not;

    /**
     * Decodes a mahjong_bc_common_award_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_common_award_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_common_award_not;

    /**
     * Verifies a mahjong_bc_common_award_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_common_award_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_common_award_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_common_award_not;

    /**
     * Creates a plain object from a mahjong_bc_common_award_not message. Also converts values to other types if specified.
     * @param message mahjong_bc_common_award_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_common_award_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_common_award_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_get_luck_draw_data_list_req. */
export interface Imahjong_cb_get_luck_draw_data_list_req {
}

/** Represents a mahjong_cb_get_luck_draw_data_list_req. */
export class mahjong_cb_get_luck_draw_data_list_req implements Imahjong_cb_get_luck_draw_data_list_req {

    /**
     * Constructs a new mahjong_cb_get_luck_draw_data_list_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_get_luck_draw_data_list_req);

    /**
     * Creates a new mahjong_cb_get_luck_draw_data_list_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_get_luck_draw_data_list_req instance
     */
    public static create(properties?: Imahjong_cb_get_luck_draw_data_list_req): mahjong_cb_get_luck_draw_data_list_req;

    /**
     * Encodes the specified mahjong_cb_get_luck_draw_data_list_req message. Does not implicitly {@link mahjong_cb_get_luck_draw_data_list_req.verify|verify} messages.
     * @param message mahjong_cb_get_luck_draw_data_list_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_get_luck_draw_data_list_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_get_luck_draw_data_list_req message, length delimited. Does not implicitly {@link mahjong_cb_get_luck_draw_data_list_req.verify|verify} messages.
     * @param message mahjong_cb_get_luck_draw_data_list_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_get_luck_draw_data_list_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_get_luck_draw_data_list_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_get_luck_draw_data_list_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_get_luck_draw_data_list_req;

    /**
     * Decodes a mahjong_cb_get_luck_draw_data_list_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_get_luck_draw_data_list_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_get_luck_draw_data_list_req;

    /**
     * Verifies a mahjong_cb_get_luck_draw_data_list_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_get_luck_draw_data_list_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_get_luck_draw_data_list_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_get_luck_draw_data_list_req;

    /**
     * Creates a plain object from a mahjong_cb_get_luck_draw_data_list_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_get_luck_draw_data_list_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_get_luck_draw_data_list_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_get_luck_draw_data_list_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_AchieveExtData. */
export interface Imahjong_AchieveExtData {

    /** mahjong_AchieveExtData index */
    index: number;

    /** mahjong_AchieveExtData value */
    value: number;

    /** mahjong_AchieveExtData max */
    max: number;

    /** mahjong_AchieveExtData status */
    status: number;

    /** mahjong_AchieveExtData moneyAward */
    moneyAward: number;

    /** mahjong_AchieveExtData giftAward */
    giftAward: number;

    /** mahjong_AchieveExtData name */
    name: string;

    /** mahjong_AchieveExtData desc */
    desc: string;
}

/** Represents a mahjong_AchieveExtData. */
export class mahjong_AchieveExtData implements Imahjong_AchieveExtData {

    /**
     * Constructs a new mahjong_AchieveExtData.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_AchieveExtData);

    /** mahjong_AchieveExtData index. */
    public index: number;

    /** mahjong_AchieveExtData value. */
    public value: number;

    /** mahjong_AchieveExtData max. */
    public max: number;

    /** mahjong_AchieveExtData status. */
    public status: number;

    /** mahjong_AchieveExtData moneyAward. */
    public moneyAward: number;

    /** mahjong_AchieveExtData giftAward. */
    public giftAward: number;

    /** mahjong_AchieveExtData name. */
    public name: string;

    /** mahjong_AchieveExtData desc. */
    public desc: string;

    /**
     * Creates a new mahjong_AchieveExtData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_AchieveExtData instance
     */
    public static create(properties?: Imahjong_AchieveExtData): mahjong_AchieveExtData;

    /**
     * Encodes the specified mahjong_AchieveExtData message. Does not implicitly {@link mahjong_AchieveExtData.verify|verify} messages.
     * @param message mahjong_AchieveExtData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_AchieveExtData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_AchieveExtData message, length delimited. Does not implicitly {@link mahjong_AchieveExtData.verify|verify} messages.
     * @param message mahjong_AchieveExtData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_AchieveExtData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_AchieveExtData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_AchieveExtData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_AchieveExtData;

    /**
     * Decodes a mahjong_AchieveExtData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_AchieveExtData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_AchieveExtData;

    /**
     * Verifies a mahjong_AchieveExtData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_AchieveExtData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_AchieveExtData
     */
    public static fromObject(object: { [k: string]: any }): mahjong_AchieveExtData;

    /**
     * Creates a plain object from a mahjong_AchieveExtData message. Also converts values to other types if specified.
     * @param message mahjong_AchieveExtData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_AchieveExtData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_AchieveExtData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_online_rank_list_mj_ack. */
export interface Imahjong_lc_get_online_rank_list_mj_ack {

    /** mahjong_lc_get_online_rank_list_mj_ack ret */
    ret: number;

    /** mahjong_lc_get_online_rank_list_mj_ack flag */
    flag: number;

    /** mahjong_lc_get_online_rank_list_mj_ack type */
    type: number;

    /** mahjong_lc_get_online_rank_list_mj_ack rankData */
    rankData?: (Imahjong_OnlineRankItem[]|null);
}

/** Represents a mahjong_lc_get_online_rank_list_mj_ack. */
export class mahjong_lc_get_online_rank_list_mj_ack implements Imahjong_lc_get_online_rank_list_mj_ack {

    /**
     * Constructs a new mahjong_lc_get_online_rank_list_mj_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_online_rank_list_mj_ack);

    /** mahjong_lc_get_online_rank_list_mj_ack ret. */
    public ret: number;

    /** mahjong_lc_get_online_rank_list_mj_ack flag. */
    public flag: number;

    /** mahjong_lc_get_online_rank_list_mj_ack type. */
    public type: number;

    /** mahjong_lc_get_online_rank_list_mj_ack rankData. */
    public rankData: Imahjong_OnlineRankItem[];

    /**
     * Creates a new mahjong_lc_get_online_rank_list_mj_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_online_rank_list_mj_ack instance
     */
    public static create(properties?: Imahjong_lc_get_online_rank_list_mj_ack): mahjong_lc_get_online_rank_list_mj_ack;

    /**
     * Encodes the specified mahjong_lc_get_online_rank_list_mj_ack message. Does not implicitly {@link mahjong_lc_get_online_rank_list_mj_ack.verify|verify} messages.
     * @param message mahjong_lc_get_online_rank_list_mj_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_online_rank_list_mj_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_online_rank_list_mj_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_online_rank_list_mj_ack.verify|verify} messages.
     * @param message mahjong_lc_get_online_rank_list_mj_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_online_rank_list_mj_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_online_rank_list_mj_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_online_rank_list_mj_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_online_rank_list_mj_ack;

    /**
     * Decodes a mahjong_lc_get_online_rank_list_mj_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_online_rank_list_mj_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_online_rank_list_mj_ack;

    /**
     * Verifies a mahjong_lc_get_online_rank_list_mj_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_online_rank_list_mj_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_online_rank_list_mj_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_online_rank_list_mj_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_online_rank_list_mj_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_online_rank_list_mj_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_online_rank_list_mj_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_online_rank_list_mj_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_AccumulateSigninAward. */
export interface Imahjong_AccumulateSigninAward {

    /** mahjong_AccumulateSigninAward today */
    today: number;

    /** mahjong_AccumulateSigninAward accumulateDays */
    accumulateDays: number;

    /** mahjong_AccumulateSigninAward accSigninAward */
    accSigninAward?: (Imahjong_AccumulateSigninAward2[]|null);

    /** mahjong_AccumulateSigninAward conSigninAward */
    conSigninAward?: (Imahjong_ContinuousSigninAward[]|null);
}

/** Represents a mahjong_AccumulateSigninAward. */
export class mahjong_AccumulateSigninAward implements Imahjong_AccumulateSigninAward {

    /**
     * Constructs a new mahjong_AccumulateSigninAward.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_AccumulateSigninAward);

    /** mahjong_AccumulateSigninAward today. */
    public today: number;

    /** mahjong_AccumulateSigninAward accumulateDays. */
    public accumulateDays: number;

    /** mahjong_AccumulateSigninAward accSigninAward. */
    public accSigninAward: Imahjong_AccumulateSigninAward2[];

    /** mahjong_AccumulateSigninAward conSigninAward. */
    public conSigninAward: Imahjong_ContinuousSigninAward[];

    /**
     * Creates a new mahjong_AccumulateSigninAward instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_AccumulateSigninAward instance
     */
    public static create(properties?: Imahjong_AccumulateSigninAward): mahjong_AccumulateSigninAward;

    /**
     * Encodes the specified mahjong_AccumulateSigninAward message. Does not implicitly {@link mahjong_AccumulateSigninAward.verify|verify} messages.
     * @param message mahjong_AccumulateSigninAward message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_AccumulateSigninAward, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_AccumulateSigninAward message, length delimited. Does not implicitly {@link mahjong_AccumulateSigninAward.verify|verify} messages.
     * @param message mahjong_AccumulateSigninAward message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_AccumulateSigninAward, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_AccumulateSigninAward message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_AccumulateSigninAward
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_AccumulateSigninAward;

    /**
     * Decodes a mahjong_AccumulateSigninAward message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_AccumulateSigninAward
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_AccumulateSigninAward;

    /**
     * Verifies a mahjong_AccumulateSigninAward message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_AccumulateSigninAward message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_AccumulateSigninAward
     */
    public static fromObject(object: { [k: string]: any }): mahjong_AccumulateSigninAward;

    /**
     * Creates a plain object from a mahjong_AccumulateSigninAward message. Also converts values to other types if specified.
     * @param message mahjong_AccumulateSigninAward
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_AccumulateSigninAward, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_AccumulateSigninAward to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_user_already_login_days_ack. */
export interface Imahjong_lc_get_user_already_login_days_ack {

    /** mahjong_lc_get_user_already_login_days_ack days */
    days: number;
}

/** Represents a mahjong_lc_get_user_already_login_days_ack. */
export class mahjong_lc_get_user_already_login_days_ack implements Imahjong_lc_get_user_already_login_days_ack {

    /**
     * Constructs a new mahjong_lc_get_user_already_login_days_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_user_already_login_days_ack);

    /** mahjong_lc_get_user_already_login_days_ack days. */
    public days: number;

    /**
     * Creates a new mahjong_lc_get_user_already_login_days_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_user_already_login_days_ack instance
     */
    public static create(properties?: Imahjong_lc_get_user_already_login_days_ack): mahjong_lc_get_user_already_login_days_ack;

    /**
     * Encodes the specified mahjong_lc_get_user_already_login_days_ack message. Does not implicitly {@link mahjong_lc_get_user_already_login_days_ack.verify|verify} messages.
     * @param message mahjong_lc_get_user_already_login_days_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_user_already_login_days_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_user_already_login_days_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_user_already_login_days_ack.verify|verify} messages.
     * @param message mahjong_lc_get_user_already_login_days_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_user_already_login_days_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_user_already_login_days_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_user_already_login_days_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_user_already_login_days_ack;

    /**
     * Decodes a mahjong_lc_get_user_already_login_days_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_user_already_login_days_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_user_already_login_days_ack;

    /**
     * Verifies a mahjong_lc_get_user_already_login_days_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_user_already_login_days_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_user_already_login_days_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_user_already_login_days_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_user_already_login_days_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_user_already_login_days_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_user_already_login_days_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_user_already_login_days_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_ATAchieveAward. */
export interface Imahjong_ATAchieveAward {

    /** mahjong_ATAchieveAward itemIndex */
    itemIndex: number;

    /** mahjong_ATAchieveAward itemNum */
    itemNum: number;
}

/** Represents a mahjong_ATAchieveAward. */
export class mahjong_ATAchieveAward implements Imahjong_ATAchieveAward {

    /**
     * Constructs a new mahjong_ATAchieveAward.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_ATAchieveAward);

    /** mahjong_ATAchieveAward itemIndex. */
    public itemIndex: number;

    /** mahjong_ATAchieveAward itemNum. */
    public itemNum: number;

    /**
     * Creates a new mahjong_ATAchieveAward instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_ATAchieveAward instance
     */
    public static create(properties?: Imahjong_ATAchieveAward): mahjong_ATAchieveAward;

    /**
     * Encodes the specified mahjong_ATAchieveAward message. Does not implicitly {@link mahjong_ATAchieveAward.verify|verify} messages.
     * @param message mahjong_ATAchieveAward message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_ATAchieveAward, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_ATAchieveAward message, length delimited. Does not implicitly {@link mahjong_ATAchieveAward.verify|verify} messages.
     * @param message mahjong_ATAchieveAward message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_ATAchieveAward, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_ATAchieveAward message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_ATAchieveAward
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_ATAchieveAward;

    /**
     * Decodes a mahjong_ATAchieveAward message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_ATAchieveAward
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_ATAchieveAward;

    /**
     * Verifies a mahjong_ATAchieveAward message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_ATAchieveAward message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_ATAchieveAward
     */
    public static fromObject(object: { [k: string]: any }): mahjong_ATAchieveAward;

    /**
     * Creates a plain object from a mahjong_ATAchieveAward message. Also converts values to other types if specified.
     * @param message mahjong_ATAchieveAward
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_ATAchieveAward, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_ATAchieveAward to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_get_mahjong_quick_daily_task_award_req. */
export interface Imahjong_cb_get_mahjong_quick_daily_task_award_req {

    /** mahjong_cb_get_mahjong_quick_daily_task_award_req gameId */
    gameId: number;

    /** mahjong_cb_get_mahjong_quick_daily_task_award_req index */
    index: number;
}

/** Represents a mahjong_cb_get_mahjong_quick_daily_task_award_req. */
export class mahjong_cb_get_mahjong_quick_daily_task_award_req implements Imahjong_cb_get_mahjong_quick_daily_task_award_req {

    /**
     * Constructs a new mahjong_cb_get_mahjong_quick_daily_task_award_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_get_mahjong_quick_daily_task_award_req);

    /** mahjong_cb_get_mahjong_quick_daily_task_award_req gameId. */
    public gameId: number;

    /** mahjong_cb_get_mahjong_quick_daily_task_award_req index. */
    public index: number;

    /**
     * Creates a new mahjong_cb_get_mahjong_quick_daily_task_award_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_get_mahjong_quick_daily_task_award_req instance
     */
    public static create(properties?: Imahjong_cb_get_mahjong_quick_daily_task_award_req): mahjong_cb_get_mahjong_quick_daily_task_award_req;

    /**
     * Encodes the specified mahjong_cb_get_mahjong_quick_daily_task_award_req message. Does not implicitly {@link mahjong_cb_get_mahjong_quick_daily_task_award_req.verify|verify} messages.
     * @param message mahjong_cb_get_mahjong_quick_daily_task_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_get_mahjong_quick_daily_task_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_get_mahjong_quick_daily_task_award_req message, length delimited. Does not implicitly {@link mahjong_cb_get_mahjong_quick_daily_task_award_req.verify|verify} messages.
     * @param message mahjong_cb_get_mahjong_quick_daily_task_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_get_mahjong_quick_daily_task_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_get_mahjong_quick_daily_task_award_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_get_mahjong_quick_daily_task_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_get_mahjong_quick_daily_task_award_req;

    /**
     * Decodes a mahjong_cb_get_mahjong_quick_daily_task_award_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_get_mahjong_quick_daily_task_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_get_mahjong_quick_daily_task_award_req;

    /**
     * Verifies a mahjong_cb_get_mahjong_quick_daily_task_award_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_get_mahjong_quick_daily_task_award_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_get_mahjong_quick_daily_task_award_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_get_mahjong_quick_daily_task_award_req;

    /**
     * Creates a plain object from a mahjong_cb_get_mahjong_quick_daily_task_award_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_get_mahjong_quick_daily_task_award_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_get_mahjong_quick_daily_task_award_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_get_mahjong_quick_daily_task_award_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_do_tip_dila_notf. */
export interface Imahjong_bc_do_tip_dila_notf {

    /** mahjong_bc_do_tip_dila_notf msg */
    msg: string;

    /** mahjong_bc_do_tip_dila_notf tiperGuid */
    tiperGuid: (number|Long);

    /** mahjong_bc_do_tip_dila_notf tipCount */
    tipCount: number;

    /** mahjong_bc_do_tip_dila_notf data */
    data: Imahjong_DilaData;
}

/** Represents a mahjong_bc_do_tip_dila_notf. */
export class mahjong_bc_do_tip_dila_notf implements Imahjong_bc_do_tip_dila_notf {

    /**
     * Constructs a new mahjong_bc_do_tip_dila_notf.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_do_tip_dila_notf);

    /** mahjong_bc_do_tip_dila_notf msg. */
    public msg: string;

    /** mahjong_bc_do_tip_dila_notf tiperGuid. */
    public tiperGuid: (number|Long);

    /** mahjong_bc_do_tip_dila_notf tipCount. */
    public tipCount: number;

    /** mahjong_bc_do_tip_dila_notf data. */
    public data: Imahjong_DilaData;

    /**
     * Creates a new mahjong_bc_do_tip_dila_notf instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_do_tip_dila_notf instance
     */
    public static create(properties?: Imahjong_bc_do_tip_dila_notf): mahjong_bc_do_tip_dila_notf;

    /**
     * Encodes the specified mahjong_bc_do_tip_dila_notf message. Does not implicitly {@link mahjong_bc_do_tip_dila_notf.verify|verify} messages.
     * @param message mahjong_bc_do_tip_dila_notf message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_do_tip_dila_notf, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_do_tip_dila_notf message, length delimited. Does not implicitly {@link mahjong_bc_do_tip_dila_notf.verify|verify} messages.
     * @param message mahjong_bc_do_tip_dila_notf message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_do_tip_dila_notf, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_do_tip_dila_notf message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_do_tip_dila_notf
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_do_tip_dila_notf;

    /**
     * Decodes a mahjong_bc_do_tip_dila_notf message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_do_tip_dila_notf
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_do_tip_dila_notf;

    /**
     * Verifies a mahjong_bc_do_tip_dila_notf message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_do_tip_dila_notf message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_do_tip_dila_notf
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_do_tip_dila_notf;

    /**
     * Creates a plain object from a mahjong_bc_do_tip_dila_notf message. Also converts values to other types if specified.
     * @param message mahjong_bc_do_tip_dila_notf
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_do_tip_dila_notf, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_do_tip_dila_notf to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_give_back_win_money_not. */
export interface Imahjong_lc_give_back_win_money_not {

    /** mahjong_lc_give_back_win_money_not sendGuid */
    sendGuid: (number|Long);

    /** mahjong_lc_give_back_win_money_not recvGuid */
    recvGuid: (number|Long);

    /** mahjong_lc_give_back_win_money_not sendNickName */
    sendNickName: string;

    /** mahjong_lc_give_back_win_money_not payAmount */
    payAmount: (number|Long);
}

/** Represents a mahjong_lc_give_back_win_money_not. */
export class mahjong_lc_give_back_win_money_not implements Imahjong_lc_give_back_win_money_not {

    /**
     * Constructs a new mahjong_lc_give_back_win_money_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_give_back_win_money_not);

    /** mahjong_lc_give_back_win_money_not sendGuid. */
    public sendGuid: (number|Long);

    /** mahjong_lc_give_back_win_money_not recvGuid. */
    public recvGuid: (number|Long);

    /** mahjong_lc_give_back_win_money_not sendNickName. */
    public sendNickName: string;

    /** mahjong_lc_give_back_win_money_not payAmount. */
    public payAmount: (number|Long);

    /**
     * Creates a new mahjong_lc_give_back_win_money_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_give_back_win_money_not instance
     */
    public static create(properties?: Imahjong_lc_give_back_win_money_not): mahjong_lc_give_back_win_money_not;

    /**
     * Encodes the specified mahjong_lc_give_back_win_money_not message. Does not implicitly {@link mahjong_lc_give_back_win_money_not.verify|verify} messages.
     * @param message mahjong_lc_give_back_win_money_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_give_back_win_money_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_give_back_win_money_not message, length delimited. Does not implicitly {@link mahjong_lc_give_back_win_money_not.verify|verify} messages.
     * @param message mahjong_lc_give_back_win_money_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_give_back_win_money_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_give_back_win_money_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_give_back_win_money_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_give_back_win_money_not;

    /**
     * Decodes a mahjong_lc_give_back_win_money_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_give_back_win_money_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_give_back_win_money_not;

    /**
     * Verifies a mahjong_lc_give_back_win_money_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_give_back_win_money_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_give_back_win_money_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_give_back_win_money_not;

    /**
     * Creates a plain object from a mahjong_lc_give_back_win_money_not message. Also converts values to other types if specified.
     * @param message mahjong_lc_give_back_win_money_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_give_back_win_money_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_give_back_win_money_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_send_prop_not. */
export interface Imahjong_bc_send_prop_not {

    /** mahjong_bc_send_prop_not srcPlyGuid */
    srcPlyGuid: (number|Long);

    /** mahjong_bc_send_prop_not dstPlyGuid */
    dstPlyGuid: (number|Long);

    /** mahjong_bc_send_prop_not index */
    index: number;

    /** mahjong_bc_send_prop_not amount */
    amount: number;
}

/** Represents a mahjong_bc_send_prop_not. */
export class mahjong_bc_send_prop_not implements Imahjong_bc_send_prop_not {

    /**
     * Constructs a new mahjong_bc_send_prop_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_send_prop_not);

    /** mahjong_bc_send_prop_not srcPlyGuid. */
    public srcPlyGuid: (number|Long);

    /** mahjong_bc_send_prop_not dstPlyGuid. */
    public dstPlyGuid: (number|Long);

    /** mahjong_bc_send_prop_not index. */
    public index: number;

    /** mahjong_bc_send_prop_not amount. */
    public amount: number;

    /**
     * Creates a new mahjong_bc_send_prop_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_send_prop_not instance
     */
    public static create(properties?: Imahjong_bc_send_prop_not): mahjong_bc_send_prop_not;

    /**
     * Encodes the specified mahjong_bc_send_prop_not message. Does not implicitly {@link mahjong_bc_send_prop_not.verify|verify} messages.
     * @param message mahjong_bc_send_prop_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_send_prop_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_send_prop_not message, length delimited. Does not implicitly {@link mahjong_bc_send_prop_not.verify|verify} messages.
     * @param message mahjong_bc_send_prop_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_send_prop_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_send_prop_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_send_prop_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_send_prop_not;

    /**
     * Decodes a mahjong_bc_send_prop_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_send_prop_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_send_prop_not;

    /**
     * Verifies a mahjong_bc_send_prop_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_send_prop_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_send_prop_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_send_prop_not;

    /**
     * Creates a plain object from a mahjong_bc_send_prop_not message. Also converts values to other types if specified.
     * @param message mahjong_bc_send_prop_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_send_prop_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_send_prop_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_get_player_feel_value_ack. */
export interface Imahjong_bc_get_player_feel_value_ack {

    /** mahjong_bc_get_player_feel_value_ack plyGuid */
    plyGuid: (number|Long);

    /** mahjong_bc_get_player_feel_value_ack plyFeelValue */
    plyFeelValue: number;
}

/** Represents a mahjong_bc_get_player_feel_value_ack. */
export class mahjong_bc_get_player_feel_value_ack implements Imahjong_bc_get_player_feel_value_ack {

    /**
     * Constructs a new mahjong_bc_get_player_feel_value_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_get_player_feel_value_ack);

    /** mahjong_bc_get_player_feel_value_ack plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_bc_get_player_feel_value_ack plyFeelValue. */
    public plyFeelValue: number;

    /**
     * Creates a new mahjong_bc_get_player_feel_value_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_get_player_feel_value_ack instance
     */
    public static create(properties?: Imahjong_bc_get_player_feel_value_ack): mahjong_bc_get_player_feel_value_ack;

    /**
     * Encodes the specified mahjong_bc_get_player_feel_value_ack message. Does not implicitly {@link mahjong_bc_get_player_feel_value_ack.verify|verify} messages.
     * @param message mahjong_bc_get_player_feel_value_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_get_player_feel_value_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_get_player_feel_value_ack message, length delimited. Does not implicitly {@link mahjong_bc_get_player_feel_value_ack.verify|verify} messages.
     * @param message mahjong_bc_get_player_feel_value_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_get_player_feel_value_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_get_player_feel_value_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_get_player_feel_value_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_get_player_feel_value_ack;

    /**
     * Decodes a mahjong_bc_get_player_feel_value_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_get_player_feel_value_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_get_player_feel_value_ack;

    /**
     * Verifies a mahjong_bc_get_player_feel_value_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_get_player_feel_value_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_get_player_feel_value_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_get_player_feel_value_ack;

    /**
     * Creates a plain object from a mahjong_bc_get_player_feel_value_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_get_player_feel_value_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_get_player_feel_value_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_get_player_feel_value_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_get_task_system_ack. */
export interface Imahjong_bc_get_task_system_ack {

    /** mahjong_bc_get_task_system_ack ret */
    ret: number;

    /** mahjong_bc_get_task_system_ack roundItems */
    roundItems?: (Imahjong_RoundAwardData[]|null);
}

/** Represents a mahjong_bc_get_task_system_ack. */
export class mahjong_bc_get_task_system_ack implements Imahjong_bc_get_task_system_ack {

    /**
     * Constructs a new mahjong_bc_get_task_system_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_get_task_system_ack);

    /** mahjong_bc_get_task_system_ack ret. */
    public ret: number;

    /** mahjong_bc_get_task_system_ack roundItems. */
    public roundItems: Imahjong_RoundAwardData[];

    /**
     * Creates a new mahjong_bc_get_task_system_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_get_task_system_ack instance
     */
    public static create(properties?: Imahjong_bc_get_task_system_ack): mahjong_bc_get_task_system_ack;

    /**
     * Encodes the specified mahjong_bc_get_task_system_ack message. Does not implicitly {@link mahjong_bc_get_task_system_ack.verify|verify} messages.
     * @param message mahjong_bc_get_task_system_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_get_task_system_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_get_task_system_ack message, length delimited. Does not implicitly {@link mahjong_bc_get_task_system_ack.verify|verify} messages.
     * @param message mahjong_bc_get_task_system_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_get_task_system_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_get_task_system_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_get_task_system_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_get_task_system_ack;

    /**
     * Decodes a mahjong_bc_get_task_system_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_get_task_system_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_get_task_system_ack;

    /**
     * Verifies a mahjong_bc_get_task_system_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_get_task_system_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_get_task_system_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_get_task_system_ack;

    /**
     * Creates a plain object from a mahjong_bc_get_task_system_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_get_task_system_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_get_task_system_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_get_task_system_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_get_streak_task_req. */
export interface Imahjong_cb_get_streak_task_req {
}

/** Represents a mahjong_cb_get_streak_task_req. */
export class mahjong_cb_get_streak_task_req implements Imahjong_cb_get_streak_task_req {

    /**
     * Constructs a new mahjong_cb_get_streak_task_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_get_streak_task_req);

    /**
     * Creates a new mahjong_cb_get_streak_task_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_get_streak_task_req instance
     */
    public static create(properties?: Imahjong_cb_get_streak_task_req): mahjong_cb_get_streak_task_req;

    /**
     * Encodes the specified mahjong_cb_get_streak_task_req message. Does not implicitly {@link mahjong_cb_get_streak_task_req.verify|verify} messages.
     * @param message mahjong_cb_get_streak_task_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_get_streak_task_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_get_streak_task_req message, length delimited. Does not implicitly {@link mahjong_cb_get_streak_task_req.verify|verify} messages.
     * @param message mahjong_cb_get_streak_task_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_get_streak_task_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_get_streak_task_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_get_streak_task_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_get_streak_task_req;

    /**
     * Decodes a mahjong_cb_get_streak_task_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_get_streak_task_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_get_streak_task_req;

    /**
     * Verifies a mahjong_cb_get_streak_task_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_get_streak_task_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_get_streak_task_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_get_streak_task_req;

    /**
     * Creates a plain object from a mahjong_cb_get_streak_task_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_get_streak_task_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_get_streak_task_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_get_streak_task_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_rp_relief_req. */
export interface Imahjong_cl_get_rp_relief_req {

    /** mahjong_cl_get_rp_relief_req roomType */
    roomType: number;
}

/** Represents a mahjong_cl_get_rp_relief_req. */
export class mahjong_cl_get_rp_relief_req implements Imahjong_cl_get_rp_relief_req {

    /**
     * Constructs a new mahjong_cl_get_rp_relief_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_rp_relief_req);

    /** mahjong_cl_get_rp_relief_req roomType. */
    public roomType: number;

    /**
     * Creates a new mahjong_cl_get_rp_relief_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_rp_relief_req instance
     */
    public static create(properties?: Imahjong_cl_get_rp_relief_req): mahjong_cl_get_rp_relief_req;

    /**
     * Encodes the specified mahjong_cl_get_rp_relief_req message. Does not implicitly {@link mahjong_cl_get_rp_relief_req.verify|verify} messages.
     * @param message mahjong_cl_get_rp_relief_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_rp_relief_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_rp_relief_req message, length delimited. Does not implicitly {@link mahjong_cl_get_rp_relief_req.verify|verify} messages.
     * @param message mahjong_cl_get_rp_relief_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_rp_relief_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_rp_relief_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_rp_relief_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_rp_relief_req;

    /**
     * Decodes a mahjong_cl_get_rp_relief_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_rp_relief_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_rp_relief_req;

    /**
     * Verifies a mahjong_cl_get_rp_relief_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_rp_relief_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_rp_relief_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_rp_relief_req;

    /**
     * Creates a plain object from a mahjong_cl_get_rp_relief_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_rp_relief_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_rp_relief_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_rp_relief_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_leave_table_ack. */
export interface Imahjong_bc_leave_table_ack {

    /** mahjong_bc_leave_table_ack ret */
    ret: number;

    /** mahjong_bc_leave_table_ack plyNickname */
    plyNickname: string;
}

/** Represents a mahjong_bc_leave_table_ack. */
export class mahjong_bc_leave_table_ack implements Imahjong_bc_leave_table_ack {

    /**
     * Constructs a new mahjong_bc_leave_table_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_leave_table_ack);

    /** mahjong_bc_leave_table_ack ret. */
    public ret: number;

    /** mahjong_bc_leave_table_ack plyNickname. */
    public plyNickname: string;

    /**
     * Creates a new mahjong_bc_leave_table_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_leave_table_ack instance
     */
    public static create(properties?: Imahjong_bc_leave_table_ack): mahjong_bc_leave_table_ack;

    /**
     * Encodes the specified mahjong_bc_leave_table_ack message. Does not implicitly {@link mahjong_bc_leave_table_ack.verify|verify} messages.
     * @param message mahjong_bc_leave_table_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_leave_table_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_leave_table_ack message, length delimited. Does not implicitly {@link mahjong_bc_leave_table_ack.verify|verify} messages.
     * @param message mahjong_bc_leave_table_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_leave_table_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_leave_table_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_leave_table_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_leave_table_ack;

    /**
     * Decodes a mahjong_bc_leave_table_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_leave_table_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_leave_table_ack;

    /**
     * Verifies a mahjong_bc_leave_table_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_leave_table_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_leave_table_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_leave_table_ack;

    /**
     * Creates a plain object from a mahjong_bc_leave_table_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_leave_table_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_leave_table_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_leave_table_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_get_assist_info_data_req. */
export interface Imahjong_cb_get_assist_info_data_req {

    /** mahjong_cb_get_assist_info_data_req dstPlyGuid */
    dstPlyGuid: (number|Long);
}

/** Represents a mahjong_cb_get_assist_info_data_req. */
export class mahjong_cb_get_assist_info_data_req implements Imahjong_cb_get_assist_info_data_req {

    /**
     * Constructs a new mahjong_cb_get_assist_info_data_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_get_assist_info_data_req);

    /** mahjong_cb_get_assist_info_data_req dstPlyGuid. */
    public dstPlyGuid: (number|Long);

    /**
     * Creates a new mahjong_cb_get_assist_info_data_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_get_assist_info_data_req instance
     */
    public static create(properties?: Imahjong_cb_get_assist_info_data_req): mahjong_cb_get_assist_info_data_req;

    /**
     * Encodes the specified mahjong_cb_get_assist_info_data_req message. Does not implicitly {@link mahjong_cb_get_assist_info_data_req.verify|verify} messages.
     * @param message mahjong_cb_get_assist_info_data_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_get_assist_info_data_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_get_assist_info_data_req message, length delimited. Does not implicitly {@link mahjong_cb_get_assist_info_data_req.verify|verify} messages.
     * @param message mahjong_cb_get_assist_info_data_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_get_assist_info_data_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_get_assist_info_data_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_get_assist_info_data_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_get_assist_info_data_req;

    /**
     * Decodes a mahjong_cb_get_assist_info_data_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_get_assist_info_data_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_get_assist_info_data_req;

    /**
     * Verifies a mahjong_cb_get_assist_info_data_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_get_assist_info_data_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_get_assist_info_data_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_get_assist_info_data_req;

    /**
     * Creates a plain object from a mahjong_cb_get_assist_info_data_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_get_assist_info_data_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_get_assist_info_data_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_get_assist_info_data_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_get_all_dila_ack. */
export interface Imahjong_bc_get_all_dila_ack {

    /** mahjong_bc_get_all_dila_ack ret */
    ret: number;

    /** mahjong_bc_get_all_dila_ack dataVec */
    dataVec?: (Imahjong_DilaData[]|null);
}

/** Represents a mahjong_bc_get_all_dila_ack. */
export class mahjong_bc_get_all_dila_ack implements Imahjong_bc_get_all_dila_ack {

    /**
     * Constructs a new mahjong_bc_get_all_dila_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_get_all_dila_ack);

    /** mahjong_bc_get_all_dila_ack ret. */
    public ret: number;

    /** mahjong_bc_get_all_dila_ack dataVec. */
    public dataVec: Imahjong_DilaData[];

    /**
     * Creates a new mahjong_bc_get_all_dila_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_get_all_dila_ack instance
     */
    public static create(properties?: Imahjong_bc_get_all_dila_ack): mahjong_bc_get_all_dila_ack;

    /**
     * Encodes the specified mahjong_bc_get_all_dila_ack message. Does not implicitly {@link mahjong_bc_get_all_dila_ack.verify|verify} messages.
     * @param message mahjong_bc_get_all_dila_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_get_all_dila_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_get_all_dila_ack message, length delimited. Does not implicitly {@link mahjong_bc_get_all_dila_ack.verify|verify} messages.
     * @param message mahjong_bc_get_all_dila_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_get_all_dila_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_get_all_dila_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_get_all_dila_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_get_all_dila_ack;

    /**
     * Decodes a mahjong_bc_get_all_dila_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_get_all_dila_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_get_all_dila_ack;

    /**
     * Verifies a mahjong_bc_get_all_dila_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_get_all_dila_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_get_all_dila_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_get_all_dila_ack;

    /**
     * Creates a plain object from a mahjong_bc_get_all_dila_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_get_all_dila_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_get_all_dila_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_get_all_dila_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_get_player_level_ack. */
export interface Imahjong_bc_get_player_level_ack {

    /** mahjong_bc_get_player_level_ack ret */
    ret: number;

    /** mahjong_bc_get_player_level_ack level */
    level: number;
}

/** Represents a mahjong_bc_get_player_level_ack. */
export class mahjong_bc_get_player_level_ack implements Imahjong_bc_get_player_level_ack {

    /**
     * Constructs a new mahjong_bc_get_player_level_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_get_player_level_ack);

    /** mahjong_bc_get_player_level_ack ret. */
    public ret: number;

    /** mahjong_bc_get_player_level_ack level. */
    public level: number;

    /**
     * Creates a new mahjong_bc_get_player_level_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_get_player_level_ack instance
     */
    public static create(properties?: Imahjong_bc_get_player_level_ack): mahjong_bc_get_player_level_ack;

    /**
     * Encodes the specified mahjong_bc_get_player_level_ack message. Does not implicitly {@link mahjong_bc_get_player_level_ack.verify|verify} messages.
     * @param message mahjong_bc_get_player_level_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_get_player_level_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_get_player_level_ack message, length delimited. Does not implicitly {@link mahjong_bc_get_player_level_ack.verify|verify} messages.
     * @param message mahjong_bc_get_player_level_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_get_player_level_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_get_player_level_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_get_player_level_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_get_player_level_ack;

    /**
     * Decodes a mahjong_bc_get_player_level_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_get_player_level_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_get_player_level_ack;

    /**
     * Verifies a mahjong_bc_get_player_level_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_get_player_level_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_get_player_level_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_get_player_level_ack;

    /**
     * Creates a plain object from a mahjong_bc_get_player_level_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_get_player_level_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_get_player_level_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_get_player_level_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_get_achieve_list_req. */
export interface Imahjong_cb_get_achieve_list_req {

    /** mahjong_cb_get_achieve_list_req gameId */
    gameId: number;
}

/** Represents a mahjong_cb_get_achieve_list_req. */
export class mahjong_cb_get_achieve_list_req implements Imahjong_cb_get_achieve_list_req {

    /**
     * Constructs a new mahjong_cb_get_achieve_list_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_get_achieve_list_req);

    /** mahjong_cb_get_achieve_list_req gameId. */
    public gameId: number;

    /**
     * Creates a new mahjong_cb_get_achieve_list_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_get_achieve_list_req instance
     */
    public static create(properties?: Imahjong_cb_get_achieve_list_req): mahjong_cb_get_achieve_list_req;

    /**
     * Encodes the specified mahjong_cb_get_achieve_list_req message. Does not implicitly {@link mahjong_cb_get_achieve_list_req.verify|verify} messages.
     * @param message mahjong_cb_get_achieve_list_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_get_achieve_list_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_get_achieve_list_req message, length delimited. Does not implicitly {@link mahjong_cb_get_achieve_list_req.verify|verify} messages.
     * @param message mahjong_cb_get_achieve_list_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_get_achieve_list_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_get_achieve_list_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_get_achieve_list_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_get_achieve_list_req;

    /**
     * Decodes a mahjong_cb_get_achieve_list_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_get_achieve_list_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_get_achieve_list_req;

    /**
     * Verifies a mahjong_cb_get_achieve_list_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_get_achieve_list_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_get_achieve_list_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_get_achieve_list_req;

    /**
     * Creates a plain object from a mahjong_cb_get_achieve_list_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_get_achieve_list_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_get_achieve_list_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_get_achieve_list_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_season_card_award_req. */
export interface Imahjong_cl_get_season_card_award_req {

    /** mahjong_cl_get_season_card_award_req cardType */
    cardType: number;
}

/** Represents a mahjong_cl_get_season_card_award_req. */
export class mahjong_cl_get_season_card_award_req implements Imahjong_cl_get_season_card_award_req {

    /**
     * Constructs a new mahjong_cl_get_season_card_award_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_season_card_award_req);

    /** mahjong_cl_get_season_card_award_req cardType. */
    public cardType: number;

    /**
     * Creates a new mahjong_cl_get_season_card_award_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_season_card_award_req instance
     */
    public static create(properties?: Imahjong_cl_get_season_card_award_req): mahjong_cl_get_season_card_award_req;

    /**
     * Encodes the specified mahjong_cl_get_season_card_award_req message. Does not implicitly {@link mahjong_cl_get_season_card_award_req.verify|verify} messages.
     * @param message mahjong_cl_get_season_card_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_season_card_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_season_card_award_req message, length delimited. Does not implicitly {@link mahjong_cl_get_season_card_award_req.verify|verify} messages.
     * @param message mahjong_cl_get_season_card_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_season_card_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_season_card_award_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_season_card_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_season_card_award_req;

    /**
     * Decodes a mahjong_cl_get_season_card_award_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_season_card_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_season_card_award_req;

    /**
     * Verifies a mahjong_cl_get_season_card_award_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_season_card_award_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_season_card_award_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_season_card_award_req;

    /**
     * Creates a plain object from a mahjong_cl_get_season_card_award_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_season_card_award_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_season_card_award_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_season_card_award_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_successive_victory_not. */
export interface Imahjong_bc_successive_victory_not {

    /** mahjong_bc_successive_victory_not count */
    count: number;

    /** mahjong_bc_successive_victory_not msg */
    msg: string;
}

/** Represents a mahjong_bc_successive_victory_not. */
export class mahjong_bc_successive_victory_not implements Imahjong_bc_successive_victory_not {

    /**
     * Constructs a new mahjong_bc_successive_victory_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_successive_victory_not);

    /** mahjong_bc_successive_victory_not count. */
    public count: number;

    /** mahjong_bc_successive_victory_not msg. */
    public msg: string;

    /**
     * Creates a new mahjong_bc_successive_victory_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_successive_victory_not instance
     */
    public static create(properties?: Imahjong_bc_successive_victory_not): mahjong_bc_successive_victory_not;

    /**
     * Encodes the specified mahjong_bc_successive_victory_not message. Does not implicitly {@link mahjong_bc_successive_victory_not.verify|verify} messages.
     * @param message mahjong_bc_successive_victory_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_successive_victory_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_successive_victory_not message, length delimited. Does not implicitly {@link mahjong_bc_successive_victory_not.verify|verify} messages.
     * @param message mahjong_bc_successive_victory_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_successive_victory_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_successive_victory_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_successive_victory_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_successive_victory_not;

    /**
     * Decodes a mahjong_bc_successive_victory_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_successive_victory_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_successive_victory_not;

    /**
     * Verifies a mahjong_bc_successive_victory_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_successive_victory_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_successive_victory_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_successive_victory_not;

    /**
     * Creates a plain object from a mahjong_bc_successive_victory_not message. Also converts values to other types if specified.
     * @param message mahjong_bc_successive_victory_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_successive_victory_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_successive_victory_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_trumpet_by_type_ack. */
export interface Imahjong_lc_trumpet_by_type_ack {

    /** mahjong_lc_trumpet_by_type_ack ret */
    ret: number;

    /** mahjong_lc_trumpet_by_type_ack type */
    type: number;

    /** mahjong_lc_trumpet_by_type_ack msg */
    msg: string;
}

/** Represents a mahjong_lc_trumpet_by_type_ack. */
export class mahjong_lc_trumpet_by_type_ack implements Imahjong_lc_trumpet_by_type_ack {

    /**
     * Constructs a new mahjong_lc_trumpet_by_type_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_trumpet_by_type_ack);

    /** mahjong_lc_trumpet_by_type_ack ret. */
    public ret: number;

    /** mahjong_lc_trumpet_by_type_ack type. */
    public type: number;

    /** mahjong_lc_trumpet_by_type_ack msg. */
    public msg: string;

    /**
     * Creates a new mahjong_lc_trumpet_by_type_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_trumpet_by_type_ack instance
     */
    public static create(properties?: Imahjong_lc_trumpet_by_type_ack): mahjong_lc_trumpet_by_type_ack;

    /**
     * Encodes the specified mahjong_lc_trumpet_by_type_ack message. Does not implicitly {@link mahjong_lc_trumpet_by_type_ack.verify|verify} messages.
     * @param message mahjong_lc_trumpet_by_type_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_trumpet_by_type_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_trumpet_by_type_ack message, length delimited. Does not implicitly {@link mahjong_lc_trumpet_by_type_ack.verify|verify} messages.
     * @param message mahjong_lc_trumpet_by_type_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_trumpet_by_type_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_trumpet_by_type_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_trumpet_by_type_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_trumpet_by_type_ack;

    /**
     * Decodes a mahjong_lc_trumpet_by_type_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_trumpet_by_type_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_trumpet_by_type_ack;

    /**
     * Verifies a mahjong_lc_trumpet_by_type_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_trumpet_by_type_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_trumpet_by_type_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_trumpet_by_type_ack;

    /**
     * Creates a plain object from a mahjong_lc_trumpet_by_type_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_trumpet_by_type_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_trumpet_by_type_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_trumpet_by_type_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_specify_item_update_not. */
export interface Imahjong_bc_specify_item_update_not {

    /** mahjong_bc_specify_item_update_not plyGuid */
    plyGuid: (number|Long);

    /** mahjong_bc_specify_item_update_not index */
    index: number;

    /** mahjong_bc_specify_item_update_not num */
    num: number;
}

/** Represents a mahjong_bc_specify_item_update_not. */
export class mahjong_bc_specify_item_update_not implements Imahjong_bc_specify_item_update_not {

    /**
     * Constructs a new mahjong_bc_specify_item_update_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_specify_item_update_not);

    /** mahjong_bc_specify_item_update_not plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_bc_specify_item_update_not index. */
    public index: number;

    /** mahjong_bc_specify_item_update_not num. */
    public num: number;

    /**
     * Creates a new mahjong_bc_specify_item_update_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_specify_item_update_not instance
     */
    public static create(properties?: Imahjong_bc_specify_item_update_not): mahjong_bc_specify_item_update_not;

    /**
     * Encodes the specified mahjong_bc_specify_item_update_not message. Does not implicitly {@link mahjong_bc_specify_item_update_not.verify|verify} messages.
     * @param message mahjong_bc_specify_item_update_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_specify_item_update_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_specify_item_update_not message, length delimited. Does not implicitly {@link mahjong_bc_specify_item_update_not.verify|verify} messages.
     * @param message mahjong_bc_specify_item_update_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_specify_item_update_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_specify_item_update_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_specify_item_update_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_specify_item_update_not;

    /**
     * Decodes a mahjong_bc_specify_item_update_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_specify_item_update_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_specify_item_update_not;

    /**
     * Verifies a mahjong_bc_specify_item_update_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_specify_item_update_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_specify_item_update_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_specify_item_update_not;

    /**
     * Creates a plain object from a mahjong_bc_specify_item_update_not message. Also converts values to other types if specified.
     * @param message mahjong_bc_specify_item_update_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_specify_item_update_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_specify_item_update_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_rank_list_mj_req. */
export interface Imahjong_cl_get_rank_list_mj_req {

    /** mahjong_cl_get_rank_list_mj_req type */
    type: number;
}

/** Represents a mahjong_cl_get_rank_list_mj_req. */
export class mahjong_cl_get_rank_list_mj_req implements Imahjong_cl_get_rank_list_mj_req {

    /**
     * Constructs a new mahjong_cl_get_rank_list_mj_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_rank_list_mj_req);

    /** mahjong_cl_get_rank_list_mj_req type. */
    public type: number;

    /**
     * Creates a new mahjong_cl_get_rank_list_mj_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_rank_list_mj_req instance
     */
    public static create(properties?: Imahjong_cl_get_rank_list_mj_req): mahjong_cl_get_rank_list_mj_req;

    /**
     * Encodes the specified mahjong_cl_get_rank_list_mj_req message. Does not implicitly {@link mahjong_cl_get_rank_list_mj_req.verify|verify} messages.
     * @param message mahjong_cl_get_rank_list_mj_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_rank_list_mj_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_rank_list_mj_req message, length delimited. Does not implicitly {@link mahjong_cl_get_rank_list_mj_req.verify|verify} messages.
     * @param message mahjong_cl_get_rank_list_mj_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_rank_list_mj_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_rank_list_mj_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_rank_list_mj_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_rank_list_mj_req;

    /**
     * Decodes a mahjong_cl_get_rank_list_mj_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_rank_list_mj_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_rank_list_mj_req;

    /**
     * Verifies a mahjong_cl_get_rank_list_mj_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_rank_list_mj_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_rank_list_mj_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_rank_list_mj_req;

    /**
     * Creates a plain object from a mahjong_cl_get_rank_list_mj_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_rank_list_mj_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_rank_list_mj_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_rank_list_mj_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_at_achieve_list_req. */
export interface Imahjong_cl_get_at_achieve_list_req {

    /** mahjong_cl_get_at_achieve_list_req type */
    type: number;
}

/** Represents a mahjong_cl_get_at_achieve_list_req. */
export class mahjong_cl_get_at_achieve_list_req implements Imahjong_cl_get_at_achieve_list_req {

    /**
     * Constructs a new mahjong_cl_get_at_achieve_list_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_at_achieve_list_req);

    /** mahjong_cl_get_at_achieve_list_req type. */
    public type: number;

    /**
     * Creates a new mahjong_cl_get_at_achieve_list_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_at_achieve_list_req instance
     */
    public static create(properties?: Imahjong_cl_get_at_achieve_list_req): mahjong_cl_get_at_achieve_list_req;

    /**
     * Encodes the specified mahjong_cl_get_at_achieve_list_req message. Does not implicitly {@link mahjong_cl_get_at_achieve_list_req.verify|verify} messages.
     * @param message mahjong_cl_get_at_achieve_list_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_at_achieve_list_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_at_achieve_list_req message, length delimited. Does not implicitly {@link mahjong_cl_get_at_achieve_list_req.verify|verify} messages.
     * @param message mahjong_cl_get_at_achieve_list_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_at_achieve_list_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_at_achieve_list_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_at_achieve_list_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_at_achieve_list_req;

    /**
     * Decodes a mahjong_cl_get_at_achieve_list_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_at_achieve_list_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_at_achieve_list_req;

    /**
     * Verifies a mahjong_cl_get_at_achieve_list_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_at_achieve_list_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_at_achieve_list_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_at_achieve_list_req;

    /**
     * Creates a plain object from a mahjong_cl_get_at_achieve_list_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_at_achieve_list_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_at_achieve_list_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_at_achieve_list_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_get_hook_status_req. */
export interface Imahjong_cb_get_hook_status_req {
}

/** Represents a mahjong_cb_get_hook_status_req. */
export class mahjong_cb_get_hook_status_req implements Imahjong_cb_get_hook_status_req {

    /**
     * Constructs a new mahjong_cb_get_hook_status_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_get_hook_status_req);

    /**
     * Creates a new mahjong_cb_get_hook_status_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_get_hook_status_req instance
     */
    public static create(properties?: Imahjong_cb_get_hook_status_req): mahjong_cb_get_hook_status_req;

    /**
     * Encodes the specified mahjong_cb_get_hook_status_req message. Does not implicitly {@link mahjong_cb_get_hook_status_req.verify|verify} messages.
     * @param message mahjong_cb_get_hook_status_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_get_hook_status_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_get_hook_status_req message, length delimited. Does not implicitly {@link mahjong_cb_get_hook_status_req.verify|verify} messages.
     * @param message mahjong_cb_get_hook_status_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_get_hook_status_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_get_hook_status_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_get_hook_status_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_get_hook_status_req;

    /**
     * Decodes a mahjong_cb_get_hook_status_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_get_hook_status_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_get_hook_status_req;

    /**
     * Verifies a mahjong_cb_get_hook_status_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_get_hook_status_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_get_hook_status_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_get_hook_status_req;

    /**
     * Creates a plain object from a mahjong_cb_get_hook_status_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_get_hook_status_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_get_hook_status_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_get_hook_status_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_trumpet_by_type_not. */
export interface Imahjong_lc_trumpet_by_type_not {

    /** mahjong_lc_trumpet_by_type_not type */
    type: number;

    /** mahjong_lc_trumpet_by_type_not gameId */
    gameId: number;

    /** mahjong_lc_trumpet_by_type_not param */
    param: number;

    /** mahjong_lc_trumpet_by_type_not plyGuid */
    plyGuid: (number|Long);

    /** mahjong_lc_trumpet_by_type_not plyNickname */
    plyNickname: string;

    /** mahjong_lc_trumpet_by_type_not message */
    message: string;

    /** mahjong_lc_trumpet_by_type_not image */
    image: string;
}

/** Represents a mahjong_lc_trumpet_by_type_not. */
export class mahjong_lc_trumpet_by_type_not implements Imahjong_lc_trumpet_by_type_not {

    /**
     * Constructs a new mahjong_lc_trumpet_by_type_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_trumpet_by_type_not);

    /** mahjong_lc_trumpet_by_type_not type. */
    public type: number;

    /** mahjong_lc_trumpet_by_type_not gameId. */
    public gameId: number;

    /** mahjong_lc_trumpet_by_type_not param. */
    public param: number;

    /** mahjong_lc_trumpet_by_type_not plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_lc_trumpet_by_type_not plyNickname. */
    public plyNickname: string;

    /** mahjong_lc_trumpet_by_type_not message. */
    public message: string;

    /** mahjong_lc_trumpet_by_type_not image. */
    public image: string;

    /**
     * Creates a new mahjong_lc_trumpet_by_type_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_trumpet_by_type_not instance
     */
    public static create(properties?: Imahjong_lc_trumpet_by_type_not): mahjong_lc_trumpet_by_type_not;

    /**
     * Encodes the specified mahjong_lc_trumpet_by_type_not message. Does not implicitly {@link mahjong_lc_trumpet_by_type_not.verify|verify} messages.
     * @param message mahjong_lc_trumpet_by_type_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_trumpet_by_type_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_trumpet_by_type_not message, length delimited. Does not implicitly {@link mahjong_lc_trumpet_by_type_not.verify|verify} messages.
     * @param message mahjong_lc_trumpet_by_type_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_trumpet_by_type_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_trumpet_by_type_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_trumpet_by_type_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_trumpet_by_type_not;

    /**
     * Decodes a mahjong_lc_trumpet_by_type_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_trumpet_by_type_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_trumpet_by_type_not;

    /**
     * Verifies a mahjong_lc_trumpet_by_type_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_trumpet_by_type_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_trumpet_by_type_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_trumpet_by_type_not;

    /**
     * Creates a plain object from a mahjong_lc_trumpet_by_type_not message. Also converts values to other types if specified.
     * @param message mahjong_lc_trumpet_by_type_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_trumpet_by_type_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_trumpet_by_type_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_TableItemAttr. */
export interface Imahjong_TableItemAttr {

    /** mahjong_TableItemAttr tableId */
    tableId: number;

    /** mahjong_TableItemAttr name */
    name: string;

    /** mahjong_TableItemAttr lock */
    lock: number;

    /** mahjong_TableItemAttr status */
    status: number;

    /** mahjong_TableItemAttr baseScore */
    baseScore: number;

    /** mahjong_TableItemAttr curPlyNum */
    curPlyNum: number;
}

/** Represents a mahjong_TableItemAttr. */
export class mahjong_TableItemAttr implements Imahjong_TableItemAttr {

    /**
     * Constructs a new mahjong_TableItemAttr.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_TableItemAttr);

    /** mahjong_TableItemAttr tableId. */
    public tableId: number;

    /** mahjong_TableItemAttr name. */
    public name: string;

    /** mahjong_TableItemAttr lock. */
    public lock: number;

    /** mahjong_TableItemAttr status. */
    public status: number;

    /** mahjong_TableItemAttr baseScore. */
    public baseScore: number;

    /** mahjong_TableItemAttr curPlyNum. */
    public curPlyNum: number;

    /**
     * Creates a new mahjong_TableItemAttr instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_TableItemAttr instance
     */
    public static create(properties?: Imahjong_TableItemAttr): mahjong_TableItemAttr;

    /**
     * Encodes the specified mahjong_TableItemAttr message. Does not implicitly {@link mahjong_TableItemAttr.verify|verify} messages.
     * @param message mahjong_TableItemAttr message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_TableItemAttr, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_TableItemAttr message, length delimited. Does not implicitly {@link mahjong_TableItemAttr.verify|verify} messages.
     * @param message mahjong_TableItemAttr message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_TableItemAttr, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_TableItemAttr message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_TableItemAttr
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_TableItemAttr;

    /**
     * Decodes a mahjong_TableItemAttr message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_TableItemAttr
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_TableItemAttr;

    /**
     * Verifies a mahjong_TableItemAttr message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_TableItemAttr message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_TableItemAttr
     */
    public static fromObject(object: { [k: string]: any }): mahjong_TableItemAttr;

    /**
     * Creates a plain object from a mahjong_TableItemAttr message. Also converts values to other types if specified.
     * @param message mahjong_TableItemAttr
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_TableItemAttr, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_TableItemAttr to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_rank_list_mj_ack. */
export interface Imahjong_lc_get_rank_list_mj_ack {

    /** mahjong_lc_get_rank_list_mj_ack ret */
    ret: number;

    /** mahjong_lc_get_rank_list_mj_ack type */
    type: number;

    /** mahjong_lc_get_rank_list_mj_ack rankData */
    rankData?: (Imahjong_RankItem[]|null);
}

/** Represents a mahjong_lc_get_rank_list_mj_ack. */
export class mahjong_lc_get_rank_list_mj_ack implements Imahjong_lc_get_rank_list_mj_ack {

    /**
     * Constructs a new mahjong_lc_get_rank_list_mj_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_rank_list_mj_ack);

    /** mahjong_lc_get_rank_list_mj_ack ret. */
    public ret: number;

    /** mahjong_lc_get_rank_list_mj_ack type. */
    public type: number;

    /** mahjong_lc_get_rank_list_mj_ack rankData. */
    public rankData: Imahjong_RankItem[];

    /**
     * Creates a new mahjong_lc_get_rank_list_mj_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_rank_list_mj_ack instance
     */
    public static create(properties?: Imahjong_lc_get_rank_list_mj_ack): mahjong_lc_get_rank_list_mj_ack;

    /**
     * Encodes the specified mahjong_lc_get_rank_list_mj_ack message. Does not implicitly {@link mahjong_lc_get_rank_list_mj_ack.verify|verify} messages.
     * @param message mahjong_lc_get_rank_list_mj_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_rank_list_mj_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_rank_list_mj_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_rank_list_mj_ack.verify|verify} messages.
     * @param message mahjong_lc_get_rank_list_mj_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_rank_list_mj_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_rank_list_mj_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_rank_list_mj_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_rank_list_mj_ack;

    /**
     * Decodes a mahjong_lc_get_rank_list_mj_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_rank_list_mj_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_rank_list_mj_ack;

    /**
     * Verifies a mahjong_lc_get_rank_list_mj_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_rank_list_mj_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_rank_list_mj_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_rank_list_mj_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_rank_list_mj_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_rank_list_mj_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_rank_list_mj_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_rank_list_mj_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_achieve_award_req. */
export interface Imahjong_cl_get_achieve_award_req {

    /** mahjong_cl_get_achieve_award_req index */
    index: number;
}

/** Represents a mahjong_cl_get_achieve_award_req. */
export class mahjong_cl_get_achieve_award_req implements Imahjong_cl_get_achieve_award_req {

    /**
     * Constructs a new mahjong_cl_get_achieve_award_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_achieve_award_req);

    /** mahjong_cl_get_achieve_award_req index. */
    public index: number;

    /**
     * Creates a new mahjong_cl_get_achieve_award_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_achieve_award_req instance
     */
    public static create(properties?: Imahjong_cl_get_achieve_award_req): mahjong_cl_get_achieve_award_req;

    /**
     * Encodes the specified mahjong_cl_get_achieve_award_req message. Does not implicitly {@link mahjong_cl_get_achieve_award_req.verify|verify} messages.
     * @param message mahjong_cl_get_achieve_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_achieve_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_achieve_award_req message, length delimited. Does not implicitly {@link mahjong_cl_get_achieve_award_req.verify|verify} messages.
     * @param message mahjong_cl_get_achieve_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_achieve_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_achieve_award_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_achieve_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_achieve_award_req;

    /**
     * Decodes a mahjong_cl_get_achieve_award_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_achieve_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_achieve_award_req;

    /**
     * Verifies a mahjong_cl_get_achieve_award_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_achieve_award_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_achieve_award_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_achieve_award_req;

    /**
     * Creates a plain object from a mahjong_cl_get_achieve_award_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_achieve_award_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_achieve_award_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_achieve_award_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_relief_times_ack. */
export interface Imahjong_lc_get_relief_times_ack {

    /** mahjong_lc_get_relief_times_ack times */
    times: number;
}

/** Represents a mahjong_lc_get_relief_times_ack. */
export class mahjong_lc_get_relief_times_ack implements Imahjong_lc_get_relief_times_ack {

    /**
     * Constructs a new mahjong_lc_get_relief_times_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_relief_times_ack);

    /** mahjong_lc_get_relief_times_ack times. */
    public times: number;

    /**
     * Creates a new mahjong_lc_get_relief_times_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_relief_times_ack instance
     */
    public static create(properties?: Imahjong_lc_get_relief_times_ack): mahjong_lc_get_relief_times_ack;

    /**
     * Encodes the specified mahjong_lc_get_relief_times_ack message. Does not implicitly {@link mahjong_lc_get_relief_times_ack.verify|verify} messages.
     * @param message mahjong_lc_get_relief_times_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_relief_times_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_relief_times_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_relief_times_ack.verify|verify} messages.
     * @param message mahjong_lc_get_relief_times_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_relief_times_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_relief_times_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_relief_times_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_relief_times_ack;

    /**
     * Decodes a mahjong_lc_get_relief_times_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_relief_times_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_relief_times_ack;

    /**
     * Verifies a mahjong_lc_get_relief_times_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_relief_times_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_relief_times_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_relief_times_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_relief_times_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_relief_times_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_relief_times_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_relief_times_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_LoginAward. */
export interface Imahjong_LoginAward {

    /** mahjong_LoginAward loginDays */
    loginDays: number;

    /** mahjong_LoginAward money */
    money: number;
}

/** Represents a mahjong_LoginAward. */
export class mahjong_LoginAward implements Imahjong_LoginAward {

    /**
     * Constructs a new mahjong_LoginAward.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_LoginAward);

    /** mahjong_LoginAward loginDays. */
    public loginDays: number;

    /** mahjong_LoginAward money. */
    public money: number;

    /**
     * Creates a new mahjong_LoginAward instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_LoginAward instance
     */
    public static create(properties?: Imahjong_LoginAward): mahjong_LoginAward;

    /**
     * Encodes the specified mahjong_LoginAward message. Does not implicitly {@link mahjong_LoginAward.verify|verify} messages.
     * @param message mahjong_LoginAward message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_LoginAward, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_LoginAward message, length delimited. Does not implicitly {@link mahjong_LoginAward.verify|verify} messages.
     * @param message mahjong_LoginAward message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_LoginAward, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_LoginAward message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_LoginAward
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_LoginAward;

    /**
     * Decodes a mahjong_LoginAward message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_LoginAward
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_LoginAward;

    /**
     * Verifies a mahjong_LoginAward message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_LoginAward message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_LoginAward
     */
    public static fromObject(object: { [k: string]: any }): mahjong_LoginAward;

    /**
     * Creates a plain object from a mahjong_LoginAward message. Also converts values to other types if specified.
     * @param message mahjong_LoginAward
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_LoginAward, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_LoginAward to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_user_signin_days_ext_ack. */
export interface Imahjong_lc_get_user_signin_days_ext_ack {

    /** mahjong_lc_get_user_signin_days_ext_ack ret */
    ret: number;

    /** mahjong_lc_get_user_signin_days_ext_ack signinInfo */
    signinInfo: Imahjong_ExtSigninInfo;
}

/** Represents a mahjong_lc_get_user_signin_days_ext_ack. */
export class mahjong_lc_get_user_signin_days_ext_ack implements Imahjong_lc_get_user_signin_days_ext_ack {

    /**
     * Constructs a new mahjong_lc_get_user_signin_days_ext_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_user_signin_days_ext_ack);

    /** mahjong_lc_get_user_signin_days_ext_ack ret. */
    public ret: number;

    /** mahjong_lc_get_user_signin_days_ext_ack signinInfo. */
    public signinInfo: Imahjong_ExtSigninInfo;

    /**
     * Creates a new mahjong_lc_get_user_signin_days_ext_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_user_signin_days_ext_ack instance
     */
    public static create(properties?: Imahjong_lc_get_user_signin_days_ext_ack): mahjong_lc_get_user_signin_days_ext_ack;

    /**
     * Encodes the specified mahjong_lc_get_user_signin_days_ext_ack message. Does not implicitly {@link mahjong_lc_get_user_signin_days_ext_ack.verify|verify} messages.
     * @param message mahjong_lc_get_user_signin_days_ext_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_user_signin_days_ext_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_user_signin_days_ext_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_user_signin_days_ext_ack.verify|verify} messages.
     * @param message mahjong_lc_get_user_signin_days_ext_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_user_signin_days_ext_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_user_signin_days_ext_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_user_signin_days_ext_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_user_signin_days_ext_ack;

    /**
     * Decodes a mahjong_lc_get_user_signin_days_ext_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_user_signin_days_ext_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_user_signin_days_ext_ack;

    /**
     * Verifies a mahjong_lc_get_user_signin_days_ext_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_user_signin_days_ext_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_user_signin_days_ext_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_user_signin_days_ext_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_user_signin_days_ext_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_user_signin_days_ext_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_user_signin_days_ext_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_user_signin_days_ext_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_ItemDesc. */
export interface Imahjong_ItemDesc {

    /** mahjong_ItemDesc index */
    index: number;

    /** mahjong_ItemDesc desc */
    desc: string;

    /** mahjong_ItemDesc fetch */
    fetch: string;
}

/** Represents a mahjong_ItemDesc. */
export class mahjong_ItemDesc implements Imahjong_ItemDesc {

    /**
     * Constructs a new mahjong_ItemDesc.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_ItemDesc);

    /** mahjong_ItemDesc index. */
    public index: number;

    /** mahjong_ItemDesc desc. */
    public desc: string;

    /** mahjong_ItemDesc fetch. */
    public fetch: string;

    /**
     * Creates a new mahjong_ItemDesc instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_ItemDesc instance
     */
    public static create(properties?: Imahjong_ItemDesc): mahjong_ItemDesc;

    /**
     * Encodes the specified mahjong_ItemDesc message. Does not implicitly {@link mahjong_ItemDesc.verify|verify} messages.
     * @param message mahjong_ItemDesc message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_ItemDesc, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_ItemDesc message, length delimited. Does not implicitly {@link mahjong_ItemDesc.verify|verify} messages.
     * @param message mahjong_ItemDesc message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_ItemDesc, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_ItemDesc message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_ItemDesc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_ItemDesc;

    /**
     * Decodes a mahjong_ItemDesc message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_ItemDesc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_ItemDesc;

    /**
     * Verifies a mahjong_ItemDesc message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_ItemDesc message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_ItemDesc
     */
    public static fromObject(object: { [k: string]: any }): mahjong_ItemDesc;

    /**
     * Creates a plain object from a mahjong_ItemDesc message. Also converts values to other types if specified.
     * @param message mahjong_ItemDesc
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_ItemDesc, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_ItemDesc to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_common_message_not. */
export interface Imahjong_bc_common_message_not {

    /** mahjong_bc_common_message_not type */
    type: number;

    /** mahjong_bc_common_message_not message */
    message: string;
}

/** Represents a mahjong_bc_common_message_not. */
export class mahjong_bc_common_message_not implements Imahjong_bc_common_message_not {

    /**
     * Constructs a new mahjong_bc_common_message_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_common_message_not);

    /** mahjong_bc_common_message_not type. */
    public type: number;

    /** mahjong_bc_common_message_not message. */
    public message: string;

    /**
     * Creates a new mahjong_bc_common_message_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_common_message_not instance
     */
    public static create(properties?: Imahjong_bc_common_message_not): mahjong_bc_common_message_not;

    /**
     * Encodes the specified mahjong_bc_common_message_not message. Does not implicitly {@link mahjong_bc_common_message_not.verify|verify} messages.
     * @param message mahjong_bc_common_message_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_common_message_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_common_message_not message, length delimited. Does not implicitly {@link mahjong_bc_common_message_not.verify|verify} messages.
     * @param message mahjong_bc_common_message_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_common_message_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_common_message_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_common_message_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_common_message_not;

    /**
     * Decodes a mahjong_bc_common_message_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_common_message_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_common_message_not;

    /**
     * Verifies a mahjong_bc_common_message_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_common_message_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_common_message_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_common_message_not;

    /**
     * Creates a plain object from a mahjong_bc_common_message_not message. Also converts values to other types if specified.
     * @param message mahjong_bc_common_message_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_common_message_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_common_message_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_update_extra_relief_status_req. */
export interface Imahjong_cl_update_extra_relief_status_req {

    /** mahjong_cl_update_extra_relief_status_req id */
    id: number;

    /** mahjong_cl_update_extra_relief_status_req status */
    status: number;
}

/** Represents a mahjong_cl_update_extra_relief_status_req. */
export class mahjong_cl_update_extra_relief_status_req implements Imahjong_cl_update_extra_relief_status_req {

    /**
     * Constructs a new mahjong_cl_update_extra_relief_status_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_update_extra_relief_status_req);

    /** mahjong_cl_update_extra_relief_status_req id. */
    public id: number;

    /** mahjong_cl_update_extra_relief_status_req status. */
    public status: number;

    /**
     * Creates a new mahjong_cl_update_extra_relief_status_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_update_extra_relief_status_req instance
     */
    public static create(properties?: Imahjong_cl_update_extra_relief_status_req): mahjong_cl_update_extra_relief_status_req;

    /**
     * Encodes the specified mahjong_cl_update_extra_relief_status_req message. Does not implicitly {@link mahjong_cl_update_extra_relief_status_req.verify|verify} messages.
     * @param message mahjong_cl_update_extra_relief_status_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_update_extra_relief_status_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_update_extra_relief_status_req message, length delimited. Does not implicitly {@link mahjong_cl_update_extra_relief_status_req.verify|verify} messages.
     * @param message mahjong_cl_update_extra_relief_status_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_update_extra_relief_status_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_update_extra_relief_status_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_update_extra_relief_status_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_update_extra_relief_status_req;

    /**
     * Decodes a mahjong_cl_update_extra_relief_status_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_update_extra_relief_status_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_update_extra_relief_status_req;

    /**
     * Verifies a mahjong_cl_update_extra_relief_status_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_update_extra_relief_status_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_update_extra_relief_status_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_update_extra_relief_status_req;

    /**
     * Creates a plain object from a mahjong_cl_update_extra_relief_status_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_update_extra_relief_status_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_update_extra_relief_status_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_update_extra_relief_status_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_use_protocol_mahjong_ack. */
export interface Imahjong_lc_use_protocol_mahjong_ack {
}

/** Represents a mahjong_lc_use_protocol_mahjong_ack. */
export class mahjong_lc_use_protocol_mahjong_ack implements Imahjong_lc_use_protocol_mahjong_ack {

    /**
     * Constructs a new mahjong_lc_use_protocol_mahjong_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_use_protocol_mahjong_ack);

    /**
     * Creates a new mahjong_lc_use_protocol_mahjong_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_use_protocol_mahjong_ack instance
     */
    public static create(properties?: Imahjong_lc_use_protocol_mahjong_ack): mahjong_lc_use_protocol_mahjong_ack;

    /**
     * Encodes the specified mahjong_lc_use_protocol_mahjong_ack message. Does not implicitly {@link mahjong_lc_use_protocol_mahjong_ack.verify|verify} messages.
     * @param message mahjong_lc_use_protocol_mahjong_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_use_protocol_mahjong_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_use_protocol_mahjong_ack message, length delimited. Does not implicitly {@link mahjong_lc_use_protocol_mahjong_ack.verify|verify} messages.
     * @param message mahjong_lc_use_protocol_mahjong_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_use_protocol_mahjong_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_use_protocol_mahjong_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_use_protocol_mahjong_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_use_protocol_mahjong_ack;

    /**
     * Decodes a mahjong_lc_use_protocol_mahjong_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_use_protocol_mahjong_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_use_protocol_mahjong_ack;

    /**
     * Verifies a mahjong_lc_use_protocol_mahjong_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_use_protocol_mahjong_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_use_protocol_mahjong_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_use_protocol_mahjong_ack;

    /**
     * Creates a plain object from a mahjong_lc_use_protocol_mahjong_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_use_protocol_mahjong_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_use_protocol_mahjong_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_use_protocol_mahjong_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_modify_password_safe_req. */
export interface Imahjong_cl_modify_password_safe_req {

    /** mahjong_cl_modify_password_safe_req plyGuid */
    plyGuid: (number|Long);

    /** mahjong_cl_modify_password_safe_req oldPassword */
    oldPassword: string;

    /** mahjong_cl_modify_password_safe_req newPassword */
    newPassword: string;
}

/** Represents a mahjong_cl_modify_password_safe_req. */
export class mahjong_cl_modify_password_safe_req implements Imahjong_cl_modify_password_safe_req {

    /**
     * Constructs a new mahjong_cl_modify_password_safe_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_modify_password_safe_req);

    /** mahjong_cl_modify_password_safe_req plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_cl_modify_password_safe_req oldPassword. */
    public oldPassword: string;

    /** mahjong_cl_modify_password_safe_req newPassword. */
    public newPassword: string;

    /**
     * Creates a new mahjong_cl_modify_password_safe_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_modify_password_safe_req instance
     */
    public static create(properties?: Imahjong_cl_modify_password_safe_req): mahjong_cl_modify_password_safe_req;

    /**
     * Encodes the specified mahjong_cl_modify_password_safe_req message. Does not implicitly {@link mahjong_cl_modify_password_safe_req.verify|verify} messages.
     * @param message mahjong_cl_modify_password_safe_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_modify_password_safe_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_modify_password_safe_req message, length delimited. Does not implicitly {@link mahjong_cl_modify_password_safe_req.verify|verify} messages.
     * @param message mahjong_cl_modify_password_safe_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_modify_password_safe_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_modify_password_safe_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_modify_password_safe_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_modify_password_safe_req;

    /**
     * Decodes a mahjong_cl_modify_password_safe_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_modify_password_safe_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_modify_password_safe_req;

    /**
     * Verifies a mahjong_cl_modify_password_safe_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_modify_password_safe_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_modify_password_safe_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_modify_password_safe_req;

    /**
     * Creates a plain object from a mahjong_cl_modify_password_safe_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_modify_password_safe_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_modify_password_safe_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_modify_password_safe_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_serverdata_by_serverid_ack. */
export interface Imahjong_lc_get_serverdata_by_serverid_ack {

    /** mahjong_lc_get_serverdata_by_serverid_ack ret */
    ret: number;

    /** mahjong_lc_get_serverdata_by_serverid_ack serverData */
    serverData: Imahjong_ServerData2;
}

/** Represents a mahjong_lc_get_serverdata_by_serverid_ack. */
export class mahjong_lc_get_serverdata_by_serverid_ack implements Imahjong_lc_get_serverdata_by_serverid_ack {

    /**
     * Constructs a new mahjong_lc_get_serverdata_by_serverid_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_serverdata_by_serverid_ack);

    /** mahjong_lc_get_serverdata_by_serverid_ack ret. */
    public ret: number;

    /** mahjong_lc_get_serverdata_by_serverid_ack serverData. */
    public serverData: Imahjong_ServerData2;

    /**
     * Creates a new mahjong_lc_get_serverdata_by_serverid_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_serverdata_by_serverid_ack instance
     */
    public static create(properties?: Imahjong_lc_get_serverdata_by_serverid_ack): mahjong_lc_get_serverdata_by_serverid_ack;

    /**
     * Encodes the specified mahjong_lc_get_serverdata_by_serverid_ack message. Does not implicitly {@link mahjong_lc_get_serverdata_by_serverid_ack.verify|verify} messages.
     * @param message mahjong_lc_get_serverdata_by_serverid_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_serverdata_by_serverid_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_serverdata_by_serverid_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_serverdata_by_serverid_ack.verify|verify} messages.
     * @param message mahjong_lc_get_serverdata_by_serverid_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_serverdata_by_serverid_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_serverdata_by_serverid_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_serverdata_by_serverid_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_serverdata_by_serverid_ack;

    /**
     * Decodes a mahjong_lc_get_serverdata_by_serverid_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_serverdata_by_serverid_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_serverdata_by_serverid_ack;

    /**
     * Verifies a mahjong_lc_get_serverdata_by_serverid_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_serverdata_by_serverid_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_serverdata_by_serverid_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_serverdata_by_serverid_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_serverdata_by_serverid_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_serverdata_by_serverid_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_serverdata_by_serverid_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_serverdata_by_serverid_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_server_data_not2. */
export interface Imahjong_lc_server_data_not2 {

    /** mahjong_lc_server_data_not2 serverDatas */
    serverDatas?: (Imahjong_ServerData2[]|null);
}

/** Represents a mahjong_lc_server_data_not2. */
export class mahjong_lc_server_data_not2 implements Imahjong_lc_server_data_not2 {

    /**
     * Constructs a new mahjong_lc_server_data_not2.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_server_data_not2);

    /** mahjong_lc_server_data_not2 serverDatas. */
    public serverDatas: Imahjong_ServerData2[];

    /**
     * Creates a new mahjong_lc_server_data_not2 instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_server_data_not2 instance
     */
    public static create(properties?: Imahjong_lc_server_data_not2): mahjong_lc_server_data_not2;

    /**
     * Encodes the specified mahjong_lc_server_data_not2 message. Does not implicitly {@link mahjong_lc_server_data_not2.verify|verify} messages.
     * @param message mahjong_lc_server_data_not2 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_server_data_not2, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_server_data_not2 message, length delimited. Does not implicitly {@link mahjong_lc_server_data_not2.verify|verify} messages.
     * @param message mahjong_lc_server_data_not2 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_server_data_not2, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_server_data_not2 message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_server_data_not2
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_server_data_not2;

    /**
     * Decodes a mahjong_lc_server_data_not2 message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_server_data_not2
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_server_data_not2;

    /**
     * Verifies a mahjong_lc_server_data_not2 message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_server_data_not2 message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_server_data_not2
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_server_data_not2;

    /**
     * Creates a plain object from a mahjong_lc_server_data_not2 message. Also converts values to other types if specified.
     * @param message mahjong_lc_server_data_not2
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_server_data_not2, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_server_data_not2 to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_merged_achieve_list_data_req. */
export interface Imahjong_cl_get_merged_achieve_list_data_req {

    /** mahjong_cl_get_merged_achieve_list_data_req gameId */
    gameId?: (number[]|null);

    /** mahjong_cl_get_merged_achieve_list_data_req scmjFlag */
    scmjFlag: number;
}

/** Represents a mahjong_cl_get_merged_achieve_list_data_req. */
export class mahjong_cl_get_merged_achieve_list_data_req implements Imahjong_cl_get_merged_achieve_list_data_req {

    /**
     * Constructs a new mahjong_cl_get_merged_achieve_list_data_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_merged_achieve_list_data_req);

    /** mahjong_cl_get_merged_achieve_list_data_req gameId. */
    public gameId: number[];

    /** mahjong_cl_get_merged_achieve_list_data_req scmjFlag. */
    public scmjFlag: number;

    /**
     * Creates a new mahjong_cl_get_merged_achieve_list_data_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_merged_achieve_list_data_req instance
     */
    public static create(properties?: Imahjong_cl_get_merged_achieve_list_data_req): mahjong_cl_get_merged_achieve_list_data_req;

    /**
     * Encodes the specified mahjong_cl_get_merged_achieve_list_data_req message. Does not implicitly {@link mahjong_cl_get_merged_achieve_list_data_req.verify|verify} messages.
     * @param message mahjong_cl_get_merged_achieve_list_data_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_merged_achieve_list_data_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_merged_achieve_list_data_req message, length delimited. Does not implicitly {@link mahjong_cl_get_merged_achieve_list_data_req.verify|verify} messages.
     * @param message mahjong_cl_get_merged_achieve_list_data_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_merged_achieve_list_data_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_merged_achieve_list_data_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_merged_achieve_list_data_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_merged_achieve_list_data_req;

    /**
     * Decodes a mahjong_cl_get_merged_achieve_list_data_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_merged_achieve_list_data_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_merged_achieve_list_data_req;

    /**
     * Verifies a mahjong_cl_get_merged_achieve_list_data_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_merged_achieve_list_data_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_merged_achieve_list_data_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_merged_achieve_list_data_req;

    /**
     * Creates a plain object from a mahjong_cl_get_merged_achieve_list_data_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_merged_achieve_list_data_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_merged_achieve_list_data_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_merged_achieve_list_data_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_broadcast_message_not. */
export interface Imahjong_lc_broadcast_message_not {

    /** mahjong_lc_broadcast_message_not gameId */
    gameId: number;

    /** mahjong_lc_broadcast_message_not pn */
    pn: string;

    /** mahjong_lc_broadcast_message_not msg */
    msg: string;
}

/** Represents a mahjong_lc_broadcast_message_not. */
export class mahjong_lc_broadcast_message_not implements Imahjong_lc_broadcast_message_not {

    /**
     * Constructs a new mahjong_lc_broadcast_message_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_broadcast_message_not);

    /** mahjong_lc_broadcast_message_not gameId. */
    public gameId: number;

    /** mahjong_lc_broadcast_message_not pn. */
    public pn: string;

    /** mahjong_lc_broadcast_message_not msg. */
    public msg: string;

    /**
     * Creates a new mahjong_lc_broadcast_message_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_broadcast_message_not instance
     */
    public static create(properties?: Imahjong_lc_broadcast_message_not): mahjong_lc_broadcast_message_not;

    /**
     * Encodes the specified mahjong_lc_broadcast_message_not message. Does not implicitly {@link mahjong_lc_broadcast_message_not.verify|verify} messages.
     * @param message mahjong_lc_broadcast_message_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_broadcast_message_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_broadcast_message_not message, length delimited. Does not implicitly {@link mahjong_lc_broadcast_message_not.verify|verify} messages.
     * @param message mahjong_lc_broadcast_message_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_broadcast_message_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_broadcast_message_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_broadcast_message_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_broadcast_message_not;

    /**
     * Decodes a mahjong_lc_broadcast_message_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_broadcast_message_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_broadcast_message_not;

    /**
     * Verifies a mahjong_lc_broadcast_message_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_broadcast_message_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_broadcast_message_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_broadcast_message_not;

    /**
     * Creates a plain object from a mahjong_lc_broadcast_message_not message. Also converts values to other types if specified.
     * @param message mahjong_lc_broadcast_message_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_broadcast_message_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_broadcast_message_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_dynamic_award_rank_ack. */
export interface Imahjong_lc_get_dynamic_award_rank_ack {

    /** mahjong_lc_get_dynamic_award_rank_ack ret */
    ret: number;
}

/** Represents a mahjong_lc_get_dynamic_award_rank_ack. */
export class mahjong_lc_get_dynamic_award_rank_ack implements Imahjong_lc_get_dynamic_award_rank_ack {

    /**
     * Constructs a new mahjong_lc_get_dynamic_award_rank_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_dynamic_award_rank_ack);

    /** mahjong_lc_get_dynamic_award_rank_ack ret. */
    public ret: number;

    /**
     * Creates a new mahjong_lc_get_dynamic_award_rank_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_dynamic_award_rank_ack instance
     */
    public static create(properties?: Imahjong_lc_get_dynamic_award_rank_ack): mahjong_lc_get_dynamic_award_rank_ack;

    /**
     * Encodes the specified mahjong_lc_get_dynamic_award_rank_ack message. Does not implicitly {@link mahjong_lc_get_dynamic_award_rank_ack.verify|verify} messages.
     * @param message mahjong_lc_get_dynamic_award_rank_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_dynamic_award_rank_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_dynamic_award_rank_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_dynamic_award_rank_ack.verify|verify} messages.
     * @param message mahjong_lc_get_dynamic_award_rank_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_dynamic_award_rank_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_dynamic_award_rank_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_dynamic_award_rank_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_dynamic_award_rank_ack;

    /**
     * Decodes a mahjong_lc_get_dynamic_award_rank_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_dynamic_award_rank_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_dynamic_award_rank_ack;

    /**
     * Verifies a mahjong_lc_get_dynamic_award_rank_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_dynamic_award_rank_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_dynamic_award_rank_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_dynamic_award_rank_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_dynamic_award_rank_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_dynamic_award_rank_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_dynamic_award_rank_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_dynamic_award_rank_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_verify_ticket_req. */
export interface Imahjong_cl_verify_ticket_req {

    /** mahjong_cl_verify_ticket_req plyGuid */
    plyGuid: (number|Long);

    /** mahjong_cl_verify_ticket_req plyNickname */
    plyNickname: string;

    /** mahjong_cl_verify_ticket_req plyTicket */
    plyTicket: string;

    /** mahjong_cl_verify_ticket_req gameId */
    gameId: number;

    /** mahjong_cl_verify_ticket_req version */
    version: number;

    /** mahjong_cl_verify_ticket_req extParam */
    extParam: string;

    /** mahjong_cl_verify_ticket_req sex */
    sex: number;

    /** mahjong_cl_verify_ticket_req packetName */
    packetName: string;
}

/** Represents a mahjong_cl_verify_ticket_req. */
export class mahjong_cl_verify_ticket_req implements Imahjong_cl_verify_ticket_req {

    /**
     * Constructs a new mahjong_cl_verify_ticket_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_verify_ticket_req);

    /** mahjong_cl_verify_ticket_req plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_cl_verify_ticket_req plyNickname. */
    public plyNickname: string;

    /** mahjong_cl_verify_ticket_req plyTicket. */
    public plyTicket: string;

    /** mahjong_cl_verify_ticket_req gameId. */
    public gameId: number;

    /** mahjong_cl_verify_ticket_req version. */
    public version: number;

    /** mahjong_cl_verify_ticket_req extParam. */
    public extParam: string;

    /** mahjong_cl_verify_ticket_req sex. */
    public sex: number;

    /** mahjong_cl_verify_ticket_req packetName. */
    public packetName: string;

    /**
     * Creates a new mahjong_cl_verify_ticket_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_verify_ticket_req instance
     */
    public static create(properties?: Imahjong_cl_verify_ticket_req): mahjong_cl_verify_ticket_req;

    /**
     * Encodes the specified mahjong_cl_verify_ticket_req message. Does not implicitly {@link mahjong_cl_verify_ticket_req.verify|verify} messages.
     * @param message mahjong_cl_verify_ticket_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_verify_ticket_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_verify_ticket_req message, length delimited. Does not implicitly {@link mahjong_cl_verify_ticket_req.verify|verify} messages.
     * @param message mahjong_cl_verify_ticket_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_verify_ticket_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_verify_ticket_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_verify_ticket_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_verify_ticket_req;

    /**
     * Decodes a mahjong_cl_verify_ticket_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_verify_ticket_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_verify_ticket_req;

    /**
     * Verifies a mahjong_cl_verify_ticket_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_verify_ticket_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_verify_ticket_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_verify_ticket_req;

    /**
     * Creates a plain object from a mahjong_cl_verify_ticket_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_verify_ticket_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_verify_ticket_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_verify_ticket_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_season_card_award_ack. */
export interface Imahjong_lc_get_season_card_award_ack {

    /** mahjong_lc_get_season_card_award_ack ret */
    ret: number;

    /** mahjong_lc_get_season_card_award_ack cardType */
    cardType: number;

    /** mahjong_lc_get_season_card_award_ack awardInfo */
    awardInfo?: (Imahjong_SeasonCardAwardInfo[]|null);
}

/** Represents a mahjong_lc_get_season_card_award_ack. */
export class mahjong_lc_get_season_card_award_ack implements Imahjong_lc_get_season_card_award_ack {

    /**
     * Constructs a new mahjong_lc_get_season_card_award_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_season_card_award_ack);

    /** mahjong_lc_get_season_card_award_ack ret. */
    public ret: number;

    /** mahjong_lc_get_season_card_award_ack cardType. */
    public cardType: number;

    /** mahjong_lc_get_season_card_award_ack awardInfo. */
    public awardInfo: Imahjong_SeasonCardAwardInfo[];

    /**
     * Creates a new mahjong_lc_get_season_card_award_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_season_card_award_ack instance
     */
    public static create(properties?: Imahjong_lc_get_season_card_award_ack): mahjong_lc_get_season_card_award_ack;

    /**
     * Encodes the specified mahjong_lc_get_season_card_award_ack message. Does not implicitly {@link mahjong_lc_get_season_card_award_ack.verify|verify} messages.
     * @param message mahjong_lc_get_season_card_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_season_card_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_season_card_award_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_season_card_award_ack.verify|verify} messages.
     * @param message mahjong_lc_get_season_card_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_season_card_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_season_card_award_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_season_card_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_season_card_award_ack;

    /**
     * Decodes a mahjong_lc_get_season_card_award_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_season_card_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_season_card_award_ack;

    /**
     * Verifies a mahjong_lc_get_season_card_award_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_season_card_award_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_season_card_award_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_season_card_award_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_season_card_award_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_season_card_award_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_season_card_award_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_season_card_award_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_card_road_data_ack. */
export interface Imahjong_lc_get_card_road_data_ack {

    /** mahjong_lc_get_card_road_data_ack ret */
    ret: number;
}

/** Represents a mahjong_lc_get_card_road_data_ack. */
export class mahjong_lc_get_card_road_data_ack implements Imahjong_lc_get_card_road_data_ack {

    /**
     * Constructs a new mahjong_lc_get_card_road_data_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_card_road_data_ack);

    /** mahjong_lc_get_card_road_data_ack ret. */
    public ret: number;

    /**
     * Creates a new mahjong_lc_get_card_road_data_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_card_road_data_ack instance
     */
    public static create(properties?: Imahjong_lc_get_card_road_data_ack): mahjong_lc_get_card_road_data_ack;

    /**
     * Encodes the specified mahjong_lc_get_card_road_data_ack message. Does not implicitly {@link mahjong_lc_get_card_road_data_ack.verify|verify} messages.
     * @param message mahjong_lc_get_card_road_data_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_card_road_data_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_card_road_data_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_card_road_data_ack.verify|verify} messages.
     * @param message mahjong_lc_get_card_road_data_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_card_road_data_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_card_road_data_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_card_road_data_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_card_road_data_ack;

    /**
     * Decodes a mahjong_lc_get_card_road_data_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_card_road_data_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_card_road_data_ack;

    /**
     * Verifies a mahjong_lc_get_card_road_data_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_card_road_data_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_card_road_data_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_card_road_data_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_card_road_data_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_card_road_data_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_card_road_data_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_card_road_data_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_join_table_req. */
export interface Imahjong_cb_join_table_req {

    /** mahjong_cb_join_table_req tableId */
    tableId: number;

    /** mahjong_cb_join_table_req password */
    password: string;

    /** mahjong_cb_join_table_req clubUid */
    clubUid: number;
}

/** Represents a mahjong_cb_join_table_req. */
export class mahjong_cb_join_table_req implements Imahjong_cb_join_table_req {

    /**
     * Constructs a new mahjong_cb_join_table_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_join_table_req);

    /** mahjong_cb_join_table_req tableId. */
    public tableId: number;

    /** mahjong_cb_join_table_req password. */
    public password: string;

    /** mahjong_cb_join_table_req clubUid. */
    public clubUid: number;

    /**
     * Creates a new mahjong_cb_join_table_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_join_table_req instance
     */
    public static create(properties?: Imahjong_cb_join_table_req): mahjong_cb_join_table_req;

    /**
     * Encodes the specified mahjong_cb_join_table_req message. Does not implicitly {@link mahjong_cb_join_table_req.verify|verify} messages.
     * @param message mahjong_cb_join_table_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_join_table_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_join_table_req message, length delimited. Does not implicitly {@link mahjong_cb_join_table_req.verify|verify} messages.
     * @param message mahjong_cb_join_table_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_join_table_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_join_table_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_join_table_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_join_table_req;

    /**
     * Decodes a mahjong_cb_join_table_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_join_table_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_join_table_req;

    /**
     * Verifies a mahjong_cb_join_table_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_join_table_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_join_table_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_join_table_req;

    /**
     * Creates a plain object from a mahjong_cb_join_table_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_join_table_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_join_table_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_join_table_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_user_signin_award_ext_req. */
export interface Imahjong_cl_get_user_signin_award_ext_req {

    /** mahjong_cl_get_user_signin_award_ext_req day */
    day: number;
}

/** Represents a mahjong_cl_get_user_signin_award_ext_req. */
export class mahjong_cl_get_user_signin_award_ext_req implements Imahjong_cl_get_user_signin_award_ext_req {

    /**
     * Constructs a new mahjong_cl_get_user_signin_award_ext_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_user_signin_award_ext_req);

    /** mahjong_cl_get_user_signin_award_ext_req day. */
    public day: number;

    /**
     * Creates a new mahjong_cl_get_user_signin_award_ext_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_user_signin_award_ext_req instance
     */
    public static create(properties?: Imahjong_cl_get_user_signin_award_ext_req): mahjong_cl_get_user_signin_award_ext_req;

    /**
     * Encodes the specified mahjong_cl_get_user_signin_award_ext_req message. Does not implicitly {@link mahjong_cl_get_user_signin_award_ext_req.verify|verify} messages.
     * @param message mahjong_cl_get_user_signin_award_ext_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_user_signin_award_ext_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_user_signin_award_ext_req message, length delimited. Does not implicitly {@link mahjong_cl_get_user_signin_award_ext_req.verify|verify} messages.
     * @param message mahjong_cl_get_user_signin_award_ext_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_user_signin_award_ext_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_user_signin_award_ext_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_user_signin_award_ext_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_user_signin_award_ext_req;

    /**
     * Decodes a mahjong_cl_get_user_signin_award_ext_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_user_signin_award_ext_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_user_signin_award_ext_req;

    /**
     * Verifies a mahjong_cl_get_user_signin_award_ext_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_user_signin_award_ext_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_user_signin_award_ext_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_user_signin_award_ext_req;

    /**
     * Creates a plain object from a mahjong_cl_get_user_signin_award_ext_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_user_signin_award_ext_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_user_signin_award_ext_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_user_signin_award_ext_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_achieve_ext_list_ack. */
export interface Imahjong_lc_get_achieve_ext_list_ack {

    /** mahjong_lc_get_achieve_ext_list_ack items */
    items?: (Imahjong_AchieveExtData[]|null);
}

/** Represents a mahjong_lc_get_achieve_ext_list_ack. */
export class mahjong_lc_get_achieve_ext_list_ack implements Imahjong_lc_get_achieve_ext_list_ack {

    /**
     * Constructs a new mahjong_lc_get_achieve_ext_list_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_achieve_ext_list_ack);

    /** mahjong_lc_get_achieve_ext_list_ack items. */
    public items: Imahjong_AchieveExtData[];

    /**
     * Creates a new mahjong_lc_get_achieve_ext_list_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_achieve_ext_list_ack instance
     */
    public static create(properties?: Imahjong_lc_get_achieve_ext_list_ack): mahjong_lc_get_achieve_ext_list_ack;

    /**
     * Encodes the specified mahjong_lc_get_achieve_ext_list_ack message. Does not implicitly {@link mahjong_lc_get_achieve_ext_list_ack.verify|verify} messages.
     * @param message mahjong_lc_get_achieve_ext_list_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_achieve_ext_list_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_achieve_ext_list_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_achieve_ext_list_ack.verify|verify} messages.
     * @param message mahjong_lc_get_achieve_ext_list_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_achieve_ext_list_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_achieve_ext_list_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_achieve_ext_list_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_achieve_ext_list_ack;

    /**
     * Decodes a mahjong_lc_get_achieve_ext_list_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_achieve_ext_list_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_achieve_ext_list_ack;

    /**
     * Verifies a mahjong_lc_get_achieve_ext_list_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_achieve_ext_list_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_achieve_ext_list_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_achieve_ext_list_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_achieve_ext_list_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_achieve_ext_list_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_achieve_ext_list_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_achieve_ext_list_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_give_gift_req. */
export interface Imahjong_cb_give_gift_req {

    /** mahjong_cb_give_gift_req dstPlyGuid */
    dstPlyGuid: (number|Long);

    /** mahjong_cb_give_gift_req amount */
    amount: number;
}

/** Represents a mahjong_cb_give_gift_req. */
export class mahjong_cb_give_gift_req implements Imahjong_cb_give_gift_req {

    /**
     * Constructs a new mahjong_cb_give_gift_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_give_gift_req);

    /** mahjong_cb_give_gift_req dstPlyGuid. */
    public dstPlyGuid: (number|Long);

    /** mahjong_cb_give_gift_req amount. */
    public amount: number;

    /**
     * Creates a new mahjong_cb_give_gift_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_give_gift_req instance
     */
    public static create(properties?: Imahjong_cb_give_gift_req): mahjong_cb_give_gift_req;

    /**
     * Encodes the specified mahjong_cb_give_gift_req message. Does not implicitly {@link mahjong_cb_give_gift_req.verify|verify} messages.
     * @param message mahjong_cb_give_gift_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_give_gift_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_give_gift_req message, length delimited. Does not implicitly {@link mahjong_cb_give_gift_req.verify|verify} messages.
     * @param message mahjong_cb_give_gift_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_give_gift_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_give_gift_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_give_gift_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_give_gift_req;

    /**
     * Decodes a mahjong_cb_give_gift_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_give_gift_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_give_gift_req;

    /**
     * Verifies a mahjong_cb_give_gift_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_give_gift_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_give_gift_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_give_gift_req;

    /**
     * Creates a plain object from a mahjong_cb_give_gift_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_give_gift_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_give_gift_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_give_gift_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_get_all_dila_req. */
export interface Imahjong_cb_get_all_dila_req {
}

/** Represents a mahjong_cb_get_all_dila_req. */
export class mahjong_cb_get_all_dila_req implements Imahjong_cb_get_all_dila_req {

    /**
     * Constructs a new mahjong_cb_get_all_dila_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_get_all_dila_req);

    /**
     * Creates a new mahjong_cb_get_all_dila_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_get_all_dila_req instance
     */
    public static create(properties?: Imahjong_cb_get_all_dila_req): mahjong_cb_get_all_dila_req;

    /**
     * Encodes the specified mahjong_cb_get_all_dila_req message. Does not implicitly {@link mahjong_cb_get_all_dila_req.verify|verify} messages.
     * @param message mahjong_cb_get_all_dila_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_get_all_dila_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_get_all_dila_req message, length delimited. Does not implicitly {@link mahjong_cb_get_all_dila_req.verify|verify} messages.
     * @param message mahjong_cb_get_all_dila_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_get_all_dila_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_get_all_dila_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_get_all_dila_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_get_all_dila_req;

    /**
     * Decodes a mahjong_cb_get_all_dila_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_get_all_dila_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_get_all_dila_req;

    /**
     * Verifies a mahjong_cb_get_all_dila_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_get_all_dila_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_get_all_dila_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_get_all_dila_req;

    /**
     * Creates a plain object from a mahjong_cb_get_all_dila_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_get_all_dila_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_get_all_dila_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_get_all_dila_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_get_hook_status_ack. */
export interface Imahjong_bc_get_hook_status_ack {

    /** mahjong_bc_get_hook_status_ack ret */
    ret: number;
}

/** Represents a mahjong_bc_get_hook_status_ack. */
export class mahjong_bc_get_hook_status_ack implements Imahjong_bc_get_hook_status_ack {

    /**
     * Constructs a new mahjong_bc_get_hook_status_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_get_hook_status_ack);

    /** mahjong_bc_get_hook_status_ack ret. */
    public ret: number;

    /**
     * Creates a new mahjong_bc_get_hook_status_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_get_hook_status_ack instance
     */
    public static create(properties?: Imahjong_bc_get_hook_status_ack): mahjong_bc_get_hook_status_ack;

    /**
     * Encodes the specified mahjong_bc_get_hook_status_ack message. Does not implicitly {@link mahjong_bc_get_hook_status_ack.verify|verify} messages.
     * @param message mahjong_bc_get_hook_status_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_get_hook_status_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_get_hook_status_ack message, length delimited. Does not implicitly {@link mahjong_bc_get_hook_status_ack.verify|verify} messages.
     * @param message mahjong_bc_get_hook_status_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_get_hook_status_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_get_hook_status_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_get_hook_status_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_get_hook_status_ack;

    /**
     * Decodes a mahjong_bc_get_hook_status_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_get_hook_status_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_get_hook_status_ack;

    /**
     * Verifies a mahjong_bc_get_hook_status_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_get_hook_status_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_get_hook_status_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_get_hook_status_ack;

    /**
     * Creates a plain object from a mahjong_bc_get_hook_status_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_get_hook_status_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_get_hook_status_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_get_hook_status_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_player_signature_ack. */
export interface Imahjong_lc_player_signature_ack {

    /** mahjong_lc_player_signature_ack ret */
    ret: number;

    /** mahjong_lc_player_signature_ack plyGuid */
    plyGuid: (number|Long);

    /** mahjong_lc_player_signature_ack signature */
    signature: string;
}

/** Represents a mahjong_lc_player_signature_ack. */
export class mahjong_lc_player_signature_ack implements Imahjong_lc_player_signature_ack {

    /**
     * Constructs a new mahjong_lc_player_signature_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_player_signature_ack);

    /** mahjong_lc_player_signature_ack ret. */
    public ret: number;

    /** mahjong_lc_player_signature_ack plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_lc_player_signature_ack signature. */
    public signature: string;

    /**
     * Creates a new mahjong_lc_player_signature_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_player_signature_ack instance
     */
    public static create(properties?: Imahjong_lc_player_signature_ack): mahjong_lc_player_signature_ack;

    /**
     * Encodes the specified mahjong_lc_player_signature_ack message. Does not implicitly {@link mahjong_lc_player_signature_ack.verify|verify} messages.
     * @param message mahjong_lc_player_signature_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_player_signature_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_player_signature_ack message, length delimited. Does not implicitly {@link mahjong_lc_player_signature_ack.verify|verify} messages.
     * @param message mahjong_lc_player_signature_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_player_signature_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_player_signature_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_player_signature_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_player_signature_ack;

    /**
     * Decodes a mahjong_lc_player_signature_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_player_signature_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_player_signature_ack;

    /**
     * Verifies a mahjong_lc_player_signature_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_player_signature_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_player_signature_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_player_signature_ack;

    /**
     * Creates a plain object from a mahjong_lc_player_signature_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_player_signature_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_player_signature_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_player_signature_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_update_extra_relief_status_ack. */
export interface Imahjong_lc_update_extra_relief_status_ack {

    /** mahjong_lc_update_extra_relief_status_ack ret */
    ret: number;

    /** mahjong_lc_update_extra_relief_status_ack id */
    id: number;

    /** mahjong_lc_update_extra_relief_status_ack status */
    status: number;
}

/** Represents a mahjong_lc_update_extra_relief_status_ack. */
export class mahjong_lc_update_extra_relief_status_ack implements Imahjong_lc_update_extra_relief_status_ack {

    /**
     * Constructs a new mahjong_lc_update_extra_relief_status_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_update_extra_relief_status_ack);

    /** mahjong_lc_update_extra_relief_status_ack ret. */
    public ret: number;

    /** mahjong_lc_update_extra_relief_status_ack id. */
    public id: number;

    /** mahjong_lc_update_extra_relief_status_ack status. */
    public status: number;

    /**
     * Creates a new mahjong_lc_update_extra_relief_status_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_update_extra_relief_status_ack instance
     */
    public static create(properties?: Imahjong_lc_update_extra_relief_status_ack): mahjong_lc_update_extra_relief_status_ack;

    /**
     * Encodes the specified mahjong_lc_update_extra_relief_status_ack message. Does not implicitly {@link mahjong_lc_update_extra_relief_status_ack.verify|verify} messages.
     * @param message mahjong_lc_update_extra_relief_status_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_update_extra_relief_status_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_update_extra_relief_status_ack message, length delimited. Does not implicitly {@link mahjong_lc_update_extra_relief_status_ack.verify|verify} messages.
     * @param message mahjong_lc_update_extra_relief_status_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_update_extra_relief_status_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_update_extra_relief_status_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_update_extra_relief_status_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_update_extra_relief_status_ack;

    /**
     * Decodes a mahjong_lc_update_extra_relief_status_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_update_extra_relief_status_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_update_extra_relief_status_ack;

    /**
     * Verifies a mahjong_lc_update_extra_relief_status_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_update_extra_relief_status_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_update_extra_relief_status_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_update_extra_relief_status_ack;

    /**
     * Creates a plain object from a mahjong_lc_update_extra_relief_status_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_update_extra_relief_status_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_update_extra_relief_status_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_update_extra_relief_status_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_continuous_game_award_req. */
export interface Imahjong_cl_get_continuous_game_award_req {
}

/** Represents a mahjong_cl_get_continuous_game_award_req. */
export class mahjong_cl_get_continuous_game_award_req implements Imahjong_cl_get_continuous_game_award_req {

    /**
     * Constructs a new mahjong_cl_get_continuous_game_award_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_continuous_game_award_req);

    /**
     * Creates a new mahjong_cl_get_continuous_game_award_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_continuous_game_award_req instance
     */
    public static create(properties?: Imahjong_cl_get_continuous_game_award_req): mahjong_cl_get_continuous_game_award_req;

    /**
     * Encodes the specified mahjong_cl_get_continuous_game_award_req message. Does not implicitly {@link mahjong_cl_get_continuous_game_award_req.verify|verify} messages.
     * @param message mahjong_cl_get_continuous_game_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_continuous_game_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_continuous_game_award_req message, length delimited. Does not implicitly {@link mahjong_cl_get_continuous_game_award_req.verify|verify} messages.
     * @param message mahjong_cl_get_continuous_game_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_continuous_game_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_continuous_game_award_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_continuous_game_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_continuous_game_award_req;

    /**
     * Decodes a mahjong_cl_get_continuous_game_award_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_continuous_game_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_continuous_game_award_req;

    /**
     * Verifies a mahjong_cl_get_continuous_game_award_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_continuous_game_award_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_continuous_game_award_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_continuous_game_award_req;

    /**
     * Creates a plain object from a mahjong_cl_get_continuous_game_award_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_continuous_game_award_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_continuous_game_award_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_continuous_game_award_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_UID_SCORES. */
export interface Imahjong_UID_SCORES {

    /** mahjong_UID_SCORES uid */
    uid: (number|Long);

    /** mahjong_UID_SCORES scores */
    scores: (number|Long);
}

/** Represents a mahjong_UID_SCORES. */
export class mahjong_UID_SCORES implements Imahjong_UID_SCORES {

    /**
     * Constructs a new mahjong_UID_SCORES.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_UID_SCORES);

    /** mahjong_UID_SCORES uid. */
    public uid: (number|Long);

    /** mahjong_UID_SCORES scores. */
    public scores: (number|Long);

    /**
     * Creates a new mahjong_UID_SCORES instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_UID_SCORES instance
     */
    public static create(properties?: Imahjong_UID_SCORES): mahjong_UID_SCORES;

    /**
     * Encodes the specified mahjong_UID_SCORES message. Does not implicitly {@link mahjong_UID_SCORES.verify|verify} messages.
     * @param message mahjong_UID_SCORES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_UID_SCORES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_UID_SCORES message, length delimited. Does not implicitly {@link mahjong_UID_SCORES.verify|verify} messages.
     * @param message mahjong_UID_SCORES message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_UID_SCORES, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_UID_SCORES message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_UID_SCORES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_UID_SCORES;

    /**
     * Decodes a mahjong_UID_SCORES message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_UID_SCORES
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_UID_SCORES;

    /**
     * Verifies a mahjong_UID_SCORES message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_UID_SCORES message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_UID_SCORES
     */
    public static fromObject(object: { [k: string]: any }): mahjong_UID_SCORES;

    /**
     * Creates a plain object from a mahjong_UID_SCORES message. Also converts values to other types if specified.
     * @param message mahjong_UID_SCORES
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_UID_SCORES, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_UID_SCORES to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_Friendlist. */
export interface Imahjong_Friendlist {

    /** mahjong_Friendlist plyGuid */
    plyGuid: (number|Long);

    /** mahjong_Friendlist frdGuid */
    frdGuid: (number|Long);
}

/** Represents a mahjong_Friendlist. */
export class mahjong_Friendlist implements Imahjong_Friendlist {

    /**
     * Constructs a new mahjong_Friendlist.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_Friendlist);

    /** mahjong_Friendlist plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_Friendlist frdGuid. */
    public frdGuid: (number|Long);

    /**
     * Creates a new mahjong_Friendlist instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_Friendlist instance
     */
    public static create(properties?: Imahjong_Friendlist): mahjong_Friendlist;

    /**
     * Encodes the specified mahjong_Friendlist message. Does not implicitly {@link mahjong_Friendlist.verify|verify} messages.
     * @param message mahjong_Friendlist message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_Friendlist, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_Friendlist message, length delimited. Does not implicitly {@link mahjong_Friendlist.verify|verify} messages.
     * @param message mahjong_Friendlist message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_Friendlist, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_Friendlist message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_Friendlist
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_Friendlist;

    /**
     * Decodes a mahjong_Friendlist message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_Friendlist
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_Friendlist;

    /**
     * Verifies a mahjong_Friendlist message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_Friendlist message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_Friendlist
     */
    public static fromObject(object: { [k: string]: any }): mahjong_Friendlist;

    /**
     * Creates a plain object from a mahjong_Friendlist message. Also converts values to other types if specified.
     * @param message mahjong_Friendlist
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_Friendlist, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_Friendlist to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_get_luck_draw_ack. */
export interface Imahjong_bc_get_luck_draw_ack {

    /** mahjong_bc_get_luck_draw_ack ret */
    ret: number;

    /** mahjong_bc_get_luck_draw_ack items */
    items?: (Imahjong_LuckDrawItemData[]|null);
}

/** Represents a mahjong_bc_get_luck_draw_ack. */
export class mahjong_bc_get_luck_draw_ack implements Imahjong_bc_get_luck_draw_ack {

    /**
     * Constructs a new mahjong_bc_get_luck_draw_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_get_luck_draw_ack);

    /** mahjong_bc_get_luck_draw_ack ret. */
    public ret: number;

    /** mahjong_bc_get_luck_draw_ack items. */
    public items: Imahjong_LuckDrawItemData[];

    /**
     * Creates a new mahjong_bc_get_luck_draw_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_get_luck_draw_ack instance
     */
    public static create(properties?: Imahjong_bc_get_luck_draw_ack): mahjong_bc_get_luck_draw_ack;

    /**
     * Encodes the specified mahjong_bc_get_luck_draw_ack message. Does not implicitly {@link mahjong_bc_get_luck_draw_ack.verify|verify} messages.
     * @param message mahjong_bc_get_luck_draw_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_get_luck_draw_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_get_luck_draw_ack message, length delimited. Does not implicitly {@link mahjong_bc_get_luck_draw_ack.verify|verify} messages.
     * @param message mahjong_bc_get_luck_draw_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_get_luck_draw_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_get_luck_draw_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_get_luck_draw_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_get_luck_draw_ack;

    /**
     * Decodes a mahjong_bc_get_luck_draw_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_get_luck_draw_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_get_luck_draw_ack;

    /**
     * Verifies a mahjong_bc_get_luck_draw_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_get_luck_draw_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_get_luck_draw_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_get_luck_draw_ack;

    /**
     * Creates a plain object from a mahjong_bc_get_luck_draw_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_get_luck_draw_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_get_luck_draw_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_get_luck_draw_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_total_game_round_req. */
export interface Imahjong_cl_get_total_game_round_req {
}

/** Represents a mahjong_cl_get_total_game_round_req. */
export class mahjong_cl_get_total_game_round_req implements Imahjong_cl_get_total_game_round_req {

    /**
     * Constructs a new mahjong_cl_get_total_game_round_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_total_game_round_req);

    /**
     * Creates a new mahjong_cl_get_total_game_round_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_total_game_round_req instance
     */
    public static create(properties?: Imahjong_cl_get_total_game_round_req): mahjong_cl_get_total_game_round_req;

    /**
     * Encodes the specified mahjong_cl_get_total_game_round_req message. Does not implicitly {@link mahjong_cl_get_total_game_round_req.verify|verify} messages.
     * @param message mahjong_cl_get_total_game_round_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_total_game_round_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_total_game_round_req message, length delimited. Does not implicitly {@link mahjong_cl_get_total_game_round_req.verify|verify} messages.
     * @param message mahjong_cl_get_total_game_round_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_total_game_round_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_total_game_round_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_total_game_round_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_total_game_round_req;

    /**
     * Decodes a mahjong_cl_get_total_game_round_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_total_game_round_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_total_game_round_req;

    /**
     * Verifies a mahjong_cl_get_total_game_round_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_total_game_round_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_total_game_round_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_total_game_round_req;

    /**
     * Creates a plain object from a mahjong_cl_get_total_game_round_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_total_game_round_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_total_game_round_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_total_game_round_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_trumpet_ack. */
export interface Imahjong_lc_trumpet_ack {

    /** mahjong_lc_trumpet_ack ret */
    ret: number;

    /** mahjong_lc_trumpet_ack num */
    num: number;

    /** mahjong_lc_trumpet_ack msg */
    msg: string;
}

/** Represents a mahjong_lc_trumpet_ack. */
export class mahjong_lc_trumpet_ack implements Imahjong_lc_trumpet_ack {

    /**
     * Constructs a new mahjong_lc_trumpet_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_trumpet_ack);

    /** mahjong_lc_trumpet_ack ret. */
    public ret: number;

    /** mahjong_lc_trumpet_ack num. */
    public num: number;

    /** mahjong_lc_trumpet_ack msg. */
    public msg: string;

    /**
     * Creates a new mahjong_lc_trumpet_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_trumpet_ack instance
     */
    public static create(properties?: Imahjong_lc_trumpet_ack): mahjong_lc_trumpet_ack;

    /**
     * Encodes the specified mahjong_lc_trumpet_ack message. Does not implicitly {@link mahjong_lc_trumpet_ack.verify|verify} messages.
     * @param message mahjong_lc_trumpet_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_trumpet_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_trumpet_ack message, length delimited. Does not implicitly {@link mahjong_lc_trumpet_ack.verify|verify} messages.
     * @param message mahjong_lc_trumpet_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_trumpet_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_trumpet_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_trumpet_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_trumpet_ack;

    /**
     * Decodes a mahjong_lc_trumpet_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_trumpet_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_trumpet_ack;

    /**
     * Verifies a mahjong_lc_trumpet_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_trumpet_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_trumpet_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_trumpet_ack;

    /**
     * Creates a plain object from a mahjong_lc_trumpet_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_trumpet_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_trumpet_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_trumpet_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_extra_relief_award_req. */
export interface Imahjong_cl_get_extra_relief_award_req {

    /** mahjong_cl_get_extra_relief_award_req id */
    id: number;
}

/** Represents a mahjong_cl_get_extra_relief_award_req. */
export class mahjong_cl_get_extra_relief_award_req implements Imahjong_cl_get_extra_relief_award_req {

    /**
     * Constructs a new mahjong_cl_get_extra_relief_award_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_extra_relief_award_req);

    /** mahjong_cl_get_extra_relief_award_req id. */
    public id: number;

    /**
     * Creates a new mahjong_cl_get_extra_relief_award_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_extra_relief_award_req instance
     */
    public static create(properties?: Imahjong_cl_get_extra_relief_award_req): mahjong_cl_get_extra_relief_award_req;

    /**
     * Encodes the specified mahjong_cl_get_extra_relief_award_req message. Does not implicitly {@link mahjong_cl_get_extra_relief_award_req.verify|verify} messages.
     * @param message mahjong_cl_get_extra_relief_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_extra_relief_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_extra_relief_award_req message, length delimited. Does not implicitly {@link mahjong_cl_get_extra_relief_award_req.verify|verify} messages.
     * @param message mahjong_cl_get_extra_relief_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_extra_relief_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_extra_relief_award_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_extra_relief_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_extra_relief_award_req;

    /**
     * Decodes a mahjong_cl_get_extra_relief_award_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_extra_relief_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_extra_relief_award_req;

    /**
     * Verifies a mahjong_cl_get_extra_relief_award_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_extra_relief_award_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_extra_relief_award_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_extra_relief_award_req;

    /**
     * Creates a plain object from a mahjong_cl_get_extra_relief_award_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_extra_relief_award_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_extra_relief_award_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_extra_relief_award_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_valid_identify_info_req. */
export interface Imahjong_cl_valid_identify_info_req {

    /** mahjong_cl_valid_identify_info_req identifyCard */
    identifyCard: string;

    /** mahjong_cl_valid_identify_info_req name */
    name: string;
}

/** Represents a mahjong_cl_valid_identify_info_req. */
export class mahjong_cl_valid_identify_info_req implements Imahjong_cl_valid_identify_info_req {

    /**
     * Constructs a new mahjong_cl_valid_identify_info_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_valid_identify_info_req);

    /** mahjong_cl_valid_identify_info_req identifyCard. */
    public identifyCard: string;

    /** mahjong_cl_valid_identify_info_req name. */
    public name: string;

    /**
     * Creates a new mahjong_cl_valid_identify_info_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_valid_identify_info_req instance
     */
    public static create(properties?: Imahjong_cl_valid_identify_info_req): mahjong_cl_valid_identify_info_req;

    /**
     * Encodes the specified mahjong_cl_valid_identify_info_req message. Does not implicitly {@link mahjong_cl_valid_identify_info_req.verify|verify} messages.
     * @param message mahjong_cl_valid_identify_info_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_valid_identify_info_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_valid_identify_info_req message, length delimited. Does not implicitly {@link mahjong_cl_valid_identify_info_req.verify|verify} messages.
     * @param message mahjong_cl_valid_identify_info_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_valid_identify_info_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_valid_identify_info_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_valid_identify_info_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_valid_identify_info_req;

    /**
     * Decodes a mahjong_cl_valid_identify_info_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_valid_identify_info_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_valid_identify_info_req;

    /**
     * Verifies a mahjong_cl_valid_identify_info_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_valid_identify_info_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_valid_identify_info_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_valid_identify_info_req;

    /**
     * Creates a plain object from a mahjong_cl_valid_identify_info_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_valid_identify_info_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_valid_identify_info_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_valid_identify_info_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_mail_info_ack. */
export interface Imahjong_lc_get_mail_info_ack {

    /** mahjong_lc_get_mail_info_ack ret */
    ret: number;

    /** mahjong_lc_get_mail_info_ack errMsg */
    errMsg: string;

    /** mahjong_lc_get_mail_info_ack mailInfo */
    mailInfo?: (Imahjong_MailInfo[]|null);
}

/** Represents a mahjong_lc_get_mail_info_ack. */
export class mahjong_lc_get_mail_info_ack implements Imahjong_lc_get_mail_info_ack {

    /**
     * Constructs a new mahjong_lc_get_mail_info_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_mail_info_ack);

    /** mahjong_lc_get_mail_info_ack ret. */
    public ret: number;

    /** mahjong_lc_get_mail_info_ack errMsg. */
    public errMsg: string;

    /** mahjong_lc_get_mail_info_ack mailInfo. */
    public mailInfo: Imahjong_MailInfo[];

    /**
     * Creates a new mahjong_lc_get_mail_info_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_mail_info_ack instance
     */
    public static create(properties?: Imahjong_lc_get_mail_info_ack): mahjong_lc_get_mail_info_ack;

    /**
     * Encodes the specified mahjong_lc_get_mail_info_ack message. Does not implicitly {@link mahjong_lc_get_mail_info_ack.verify|verify} messages.
     * @param message mahjong_lc_get_mail_info_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_mail_info_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_mail_info_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_mail_info_ack.verify|verify} messages.
     * @param message mahjong_lc_get_mail_info_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_mail_info_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_mail_info_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_mail_info_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_mail_info_ack;

    /**
     * Decodes a mahjong_lc_get_mail_info_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_mail_info_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_mail_info_ack;

    /**
     * Verifies a mahjong_lc_get_mail_info_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_mail_info_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_mail_info_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_mail_info_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_mail_info_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_mail_info_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_mail_info_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_mail_info_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_ready_not. */
export interface Imahjong_bc_ready_not {

    /** mahjong_bc_ready_not plyGuid */
    plyGuid: (number|Long);
}

/** Represents a mahjong_bc_ready_not. */
export class mahjong_bc_ready_not implements Imahjong_bc_ready_not {

    /**
     * Constructs a new mahjong_bc_ready_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_ready_not);

    /** mahjong_bc_ready_not plyGuid. */
    public plyGuid: (number|Long);

    /**
     * Creates a new mahjong_bc_ready_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_ready_not instance
     */
    public static create(properties?: Imahjong_bc_ready_not): mahjong_bc_ready_not;

    /**
     * Encodes the specified mahjong_bc_ready_not message. Does not implicitly {@link mahjong_bc_ready_not.verify|verify} messages.
     * @param message mahjong_bc_ready_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_ready_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_ready_not message, length delimited. Does not implicitly {@link mahjong_bc_ready_not.verify|verify} messages.
     * @param message mahjong_bc_ready_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_ready_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_ready_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_ready_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_ready_not;

    /**
     * Decodes a mahjong_bc_ready_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_ready_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_ready_not;

    /**
     * Verifies a mahjong_bc_ready_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_ready_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_ready_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_ready_not;

    /**
     * Creates a plain object from a mahjong_bc_ready_not message. Also converts values to other types if specified.
     * @param message mahjong_bc_ready_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_ready_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_ready_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_login_ack20121227. */
export interface Imahjong_bc_login_ack20121227 {

    /** mahjong_bc_login_ack20121227 ret */
    ret: number;

    /** mahjong_bc_login_ack20121227 plyBaseData */
    plyBaseData: Imahjong_PlyBaseData20121227;

    /** mahjong_bc_login_ack20121227 plyStatus */
    plyStatus: Imahjong_PlayerStatus20121227;
}

/** Represents a mahjong_bc_login_ack20121227. */
export class mahjong_bc_login_ack20121227 implements Imahjong_bc_login_ack20121227 {

    /**
     * Constructs a new mahjong_bc_login_ack20121227.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_login_ack20121227);

    /** mahjong_bc_login_ack20121227 ret. */
    public ret: number;

    /** mahjong_bc_login_ack20121227 plyBaseData. */
    public plyBaseData: Imahjong_PlyBaseData20121227;

    /** mahjong_bc_login_ack20121227 plyStatus. */
    public plyStatus: Imahjong_PlayerStatus20121227;

    /**
     * Creates a new mahjong_bc_login_ack20121227 instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_login_ack20121227 instance
     */
    public static create(properties?: Imahjong_bc_login_ack20121227): mahjong_bc_login_ack20121227;

    /**
     * Encodes the specified mahjong_bc_login_ack20121227 message. Does not implicitly {@link mahjong_bc_login_ack20121227.verify|verify} messages.
     * @param message mahjong_bc_login_ack20121227 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_login_ack20121227, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_login_ack20121227 message, length delimited. Does not implicitly {@link mahjong_bc_login_ack20121227.verify|verify} messages.
     * @param message mahjong_bc_login_ack20121227 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_login_ack20121227, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_login_ack20121227 message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_login_ack20121227
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_login_ack20121227;

    /**
     * Decodes a mahjong_bc_login_ack20121227 message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_login_ack20121227
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_login_ack20121227;

    /**
     * Verifies a mahjong_bc_login_ack20121227 message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_login_ack20121227 message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_login_ack20121227
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_login_ack20121227;

    /**
     * Creates a plain object from a mahjong_bc_login_ack20121227 message. Also converts values to other types if specified.
     * @param message mahjong_bc_login_ack20121227
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_login_ack20121227, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_login_ack20121227 to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_AchieveData2. */
export interface Imahjong_AchieveData2 {

    /** mahjong_AchieveData2 index */
    index: number;

    /** mahjong_AchieveData2 value */
    value: number;

    /** mahjong_AchieveData2 max */
    max: number;

    /** mahjong_AchieveData2 status */
    status: number;

    /** mahjong_AchieveData2 moneyAward */
    moneyAward: number;

    /** mahjong_AchieveData2 giftAward */
    giftAward: number;

    /** mahjong_AchieveData2 prop_1Award */
    prop_1Award: number;

    /** mahjong_AchieveData2 prop_2Award */
    prop_2Award: number;

    /** mahjong_AchieveData2 prop_3Award */
    prop_3Award: number;

    /** mahjong_AchieveData2 prop_4Award */
    prop_4Award: number;

    /** mahjong_AchieveData2 prop_5Award */
    prop_5Award: number;

    /** mahjong_AchieveData2 name */
    name: string;

    /** mahjong_AchieveData2 desc */
    desc: string;
}

/** Represents a mahjong_AchieveData2. */
export class mahjong_AchieveData2 implements Imahjong_AchieveData2 {

    /**
     * Constructs a new mahjong_AchieveData2.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_AchieveData2);

    /** mahjong_AchieveData2 index. */
    public index: number;

    /** mahjong_AchieveData2 value. */
    public value: number;

    /** mahjong_AchieveData2 max. */
    public max: number;

    /** mahjong_AchieveData2 status. */
    public status: number;

    /** mahjong_AchieveData2 moneyAward. */
    public moneyAward: number;

    /** mahjong_AchieveData2 giftAward. */
    public giftAward: number;

    /** mahjong_AchieveData2 prop_1Award. */
    public prop_1Award: number;

    /** mahjong_AchieveData2 prop_2Award. */
    public prop_2Award: number;

    /** mahjong_AchieveData2 prop_3Award. */
    public prop_3Award: number;

    /** mahjong_AchieveData2 prop_4Award. */
    public prop_4Award: number;

    /** mahjong_AchieveData2 prop_5Award. */
    public prop_5Award: number;

    /** mahjong_AchieveData2 name. */
    public name: string;

    /** mahjong_AchieveData2 desc. */
    public desc: string;

    /**
     * Creates a new mahjong_AchieveData2 instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_AchieveData2 instance
     */
    public static create(properties?: Imahjong_AchieveData2): mahjong_AchieveData2;

    /**
     * Encodes the specified mahjong_AchieveData2 message. Does not implicitly {@link mahjong_AchieveData2.verify|verify} messages.
     * @param message mahjong_AchieveData2 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_AchieveData2, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_AchieveData2 message, length delimited. Does not implicitly {@link mahjong_AchieveData2.verify|verify} messages.
     * @param message mahjong_AchieveData2 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_AchieveData2, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_AchieveData2 message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_AchieveData2
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_AchieveData2;

    /**
     * Decodes a mahjong_AchieveData2 message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_AchieveData2
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_AchieveData2;

    /**
     * Verifies a mahjong_AchieveData2 message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_AchieveData2 message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_AchieveData2
     */
    public static fromObject(object: { [k: string]: any }): mahjong_AchieveData2;

    /**
     * Creates a plain object from a mahjong_AchieveData2 message. Also converts values to other types if specified.
     * @param message mahjong_AchieveData2
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_AchieveData2, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_AchieveData2 to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_send_friend_msg_ack. */
export interface Imahjong_lc_send_friend_msg_ack {

    /** mahjong_lc_send_friend_msg_ack ret */
    ret: number;

    /** mahjong_lc_send_friend_msg_ack content */
    content?: (Imahjong_FriendMsg[]|null);
}

/** Represents a mahjong_lc_send_friend_msg_ack. */
export class mahjong_lc_send_friend_msg_ack implements Imahjong_lc_send_friend_msg_ack {

    /**
     * Constructs a new mahjong_lc_send_friend_msg_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_send_friend_msg_ack);

    /** mahjong_lc_send_friend_msg_ack ret. */
    public ret: number;

    /** mahjong_lc_send_friend_msg_ack content. */
    public content: Imahjong_FriendMsg[];

    /**
     * Creates a new mahjong_lc_send_friend_msg_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_send_friend_msg_ack instance
     */
    public static create(properties?: Imahjong_lc_send_friend_msg_ack): mahjong_lc_send_friend_msg_ack;

    /**
     * Encodes the specified mahjong_lc_send_friend_msg_ack message. Does not implicitly {@link mahjong_lc_send_friend_msg_ack.verify|verify} messages.
     * @param message mahjong_lc_send_friend_msg_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_send_friend_msg_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_send_friend_msg_ack message, length delimited. Does not implicitly {@link mahjong_lc_send_friend_msg_ack.verify|verify} messages.
     * @param message mahjong_lc_send_friend_msg_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_send_friend_msg_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_send_friend_msg_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_send_friend_msg_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_send_friend_msg_ack;

    /**
     * Decodes a mahjong_lc_send_friend_msg_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_send_friend_msg_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_send_friend_msg_ack;

    /**
     * Verifies a mahjong_lc_send_friend_msg_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_send_friend_msg_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_send_friend_msg_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_send_friend_msg_ack;

    /**
     * Creates a plain object from a mahjong_lc_send_friend_msg_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_send_friend_msg_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_send_friend_msg_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_send_friend_msg_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_miniGame_by_id_ack. */
export interface Imahjong_lc_get_miniGame_by_id_ack {

    /** mahjong_lc_get_miniGame_by_id_ack result */
    result: number;

    /** mahjong_lc_get_miniGame_by_id_ack serverDatas */
    serverDatas?: (Imahjong_ServerData2[]|null);
}

/** Represents a mahjong_lc_get_miniGame_by_id_ack. */
export class mahjong_lc_get_miniGame_by_id_ack implements Imahjong_lc_get_miniGame_by_id_ack {

    /**
     * Constructs a new mahjong_lc_get_miniGame_by_id_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_miniGame_by_id_ack);

    /** mahjong_lc_get_miniGame_by_id_ack result. */
    public result: number;

    /** mahjong_lc_get_miniGame_by_id_ack serverDatas. */
    public serverDatas: Imahjong_ServerData2[];

    /**
     * Creates a new mahjong_lc_get_miniGame_by_id_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_miniGame_by_id_ack instance
     */
    public static create(properties?: Imahjong_lc_get_miniGame_by_id_ack): mahjong_lc_get_miniGame_by_id_ack;

    /**
     * Encodes the specified mahjong_lc_get_miniGame_by_id_ack message. Does not implicitly {@link mahjong_lc_get_miniGame_by_id_ack.verify|verify} messages.
     * @param message mahjong_lc_get_miniGame_by_id_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_miniGame_by_id_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_miniGame_by_id_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_miniGame_by_id_ack.verify|verify} messages.
     * @param message mahjong_lc_get_miniGame_by_id_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_miniGame_by_id_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_miniGame_by_id_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_miniGame_by_id_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_miniGame_by_id_ack;

    /**
     * Decodes a mahjong_lc_get_miniGame_by_id_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_miniGame_by_id_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_miniGame_by_id_ack;

    /**
     * Verifies a mahjong_lc_get_miniGame_by_id_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_miniGame_by_id_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_miniGame_by_id_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_miniGame_by_id_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_miniGame_by_id_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_miniGame_by_id_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_miniGame_by_id_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_miniGame_by_id_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_round_award_items_not. */
export interface Imahjong_bc_round_award_items_not {

    /** mahjong_bc_round_award_items_not round */
    round: number;

    /** mahjong_bc_round_award_items_not items */
    items?: (Imahjong_RoundAwardItem[]|null);
}

/** Represents a mahjong_bc_round_award_items_not. */
export class mahjong_bc_round_award_items_not implements Imahjong_bc_round_award_items_not {

    /**
     * Constructs a new mahjong_bc_round_award_items_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_round_award_items_not);

    /** mahjong_bc_round_award_items_not round. */
    public round: number;

    /** mahjong_bc_round_award_items_not items. */
    public items: Imahjong_RoundAwardItem[];

    /**
     * Creates a new mahjong_bc_round_award_items_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_round_award_items_not instance
     */
    public static create(properties?: Imahjong_bc_round_award_items_not): mahjong_bc_round_award_items_not;

    /**
     * Encodes the specified mahjong_bc_round_award_items_not message. Does not implicitly {@link mahjong_bc_round_award_items_not.verify|verify} messages.
     * @param message mahjong_bc_round_award_items_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_round_award_items_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_round_award_items_not message, length delimited. Does not implicitly {@link mahjong_bc_round_award_items_not.verify|verify} messages.
     * @param message mahjong_bc_round_award_items_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_round_award_items_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_round_award_items_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_round_award_items_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_round_award_items_not;

    /**
     * Decodes a mahjong_bc_round_award_items_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_round_award_items_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_round_award_items_not;

    /**
     * Verifies a mahjong_bc_round_award_items_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_round_award_items_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_round_award_items_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_round_award_items_not;

    /**
     * Creates a plain object from a mahjong_bc_round_award_items_not message. Also converts values to other types if specified.
     * @param message mahjong_bc_round_award_items_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_round_award_items_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_round_award_items_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_zzyk_status_ack. */
export interface Imahjong_lc_get_zzyk_status_ack {

    /** mahjong_lc_get_zzyk_status_ack remainingDays */
    remainingDays: number;

    /** mahjong_lc_get_zzyk_status_ack ret */
    ret: number;

    /** mahjong_lc_get_zzyk_status_ack money */
    money: number;

    /** mahjong_lc_get_zzyk_status_ack flag */
    flag: number;
}

/** Represents a mahjong_lc_get_zzyk_status_ack. */
export class mahjong_lc_get_zzyk_status_ack implements Imahjong_lc_get_zzyk_status_ack {

    /**
     * Constructs a new mahjong_lc_get_zzyk_status_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_zzyk_status_ack);

    /** mahjong_lc_get_zzyk_status_ack remainingDays. */
    public remainingDays: number;

    /** mahjong_lc_get_zzyk_status_ack ret. */
    public ret: number;

    /** mahjong_lc_get_zzyk_status_ack money. */
    public money: number;

    /** mahjong_lc_get_zzyk_status_ack flag. */
    public flag: number;

    /**
     * Creates a new mahjong_lc_get_zzyk_status_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_zzyk_status_ack instance
     */
    public static create(properties?: Imahjong_lc_get_zzyk_status_ack): mahjong_lc_get_zzyk_status_ack;

    /**
     * Encodes the specified mahjong_lc_get_zzyk_status_ack message. Does not implicitly {@link mahjong_lc_get_zzyk_status_ack.verify|verify} messages.
     * @param message mahjong_lc_get_zzyk_status_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_zzyk_status_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_zzyk_status_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_zzyk_status_ack.verify|verify} messages.
     * @param message mahjong_lc_get_zzyk_status_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_zzyk_status_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_zzyk_status_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_zzyk_status_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_zzyk_status_ack;

    /**
     * Decodes a mahjong_lc_get_zzyk_status_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_zzyk_status_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_zzyk_status_ack;

    /**
     * Verifies a mahjong_lc_get_zzyk_status_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_zzyk_status_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_zzyk_status_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_zzyk_status_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_zzyk_status_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_zzyk_status_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_zzyk_status_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_zzyk_status_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_item_config_not. */
export interface Imahjong_lc_item_config_not {

    /** mahjong_lc_item_config_not itemList */
    itemList?: (number[]|null);

    /** mahjong_lc_item_config_not itemDescs */
    itemDescs?: (Imahjong_ItemDesc[]|null);
}

/** Represents a mahjong_lc_item_config_not. */
export class mahjong_lc_item_config_not implements Imahjong_lc_item_config_not {

    /**
     * Constructs a new mahjong_lc_item_config_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_item_config_not);

    /** mahjong_lc_item_config_not itemList. */
    public itemList: number[];

    /** mahjong_lc_item_config_not itemDescs. */
    public itemDescs: Imahjong_ItemDesc[];

    /**
     * Creates a new mahjong_lc_item_config_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_item_config_not instance
     */
    public static create(properties?: Imahjong_lc_item_config_not): mahjong_lc_item_config_not;

    /**
     * Encodes the specified mahjong_lc_item_config_not message. Does not implicitly {@link mahjong_lc_item_config_not.verify|verify} messages.
     * @param message mahjong_lc_item_config_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_item_config_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_item_config_not message, length delimited. Does not implicitly {@link mahjong_lc_item_config_not.verify|verify} messages.
     * @param message mahjong_lc_item_config_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_item_config_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_item_config_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_item_config_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_item_config_not;

    /**
     * Decodes a mahjong_lc_item_config_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_item_config_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_item_config_not;

    /**
     * Verifies a mahjong_lc_item_config_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_item_config_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_item_config_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_item_config_not;

    /**
     * Creates a plain object from a mahjong_lc_item_config_not message. Also converts values to other types if specified.
     * @param message mahjong_lc_item_config_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_item_config_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_item_config_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_set_user_signin_days_ack. */
export interface Imahjong_lc_set_user_signin_days_ack {

    /** mahjong_lc_set_user_signin_days_ack ret */
    ret: number;

    /** mahjong_lc_set_user_signin_days_ack day */
    day: number;

    /** mahjong_lc_set_user_signin_days_ack totalday */
    totalday: number;

    /** mahjong_lc_set_user_signin_days_ack money */
    money: number;
}

/** Represents a mahjong_lc_set_user_signin_days_ack. */
export class mahjong_lc_set_user_signin_days_ack implements Imahjong_lc_set_user_signin_days_ack {

    /**
     * Constructs a new mahjong_lc_set_user_signin_days_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_set_user_signin_days_ack);

    /** mahjong_lc_set_user_signin_days_ack ret. */
    public ret: number;

    /** mahjong_lc_set_user_signin_days_ack day. */
    public day: number;

    /** mahjong_lc_set_user_signin_days_ack totalday. */
    public totalday: number;

    /** mahjong_lc_set_user_signin_days_ack money. */
    public money: number;

    /**
     * Creates a new mahjong_lc_set_user_signin_days_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_set_user_signin_days_ack instance
     */
    public static create(properties?: Imahjong_lc_set_user_signin_days_ack): mahjong_lc_set_user_signin_days_ack;

    /**
     * Encodes the specified mahjong_lc_set_user_signin_days_ack message. Does not implicitly {@link mahjong_lc_set_user_signin_days_ack.verify|verify} messages.
     * @param message mahjong_lc_set_user_signin_days_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_set_user_signin_days_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_set_user_signin_days_ack message, length delimited. Does not implicitly {@link mahjong_lc_set_user_signin_days_ack.verify|verify} messages.
     * @param message mahjong_lc_set_user_signin_days_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_set_user_signin_days_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_set_user_signin_days_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_set_user_signin_days_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_set_user_signin_days_ack;

    /**
     * Decodes a mahjong_lc_set_user_signin_days_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_set_user_signin_days_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_set_user_signin_days_ack;

    /**
     * Verifies a mahjong_lc_set_user_signin_days_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_set_user_signin_days_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_set_user_signin_days_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_set_user_signin_days_ack;

    /**
     * Creates a plain object from a mahjong_lc_set_user_signin_days_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_set_user_signin_days_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_set_user_signin_days_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_set_user_signin_days_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_RoundAward. */
export interface Imahjong_RoundAward {

    /** mahjong_RoundAward roundAward */
    roundAward?: (Imahjong_RoundAwardItem[]|null);
}

/** Represents a mahjong_RoundAward. */
export class mahjong_RoundAward implements Imahjong_RoundAward {

    /**
     * Constructs a new mahjong_RoundAward.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_RoundAward);

    /** mahjong_RoundAward roundAward. */
    public roundAward: Imahjong_RoundAwardItem[];

    /**
     * Creates a new mahjong_RoundAward instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_RoundAward instance
     */
    public static create(properties?: Imahjong_RoundAward): mahjong_RoundAward;

    /**
     * Encodes the specified mahjong_RoundAward message. Does not implicitly {@link mahjong_RoundAward.verify|verify} messages.
     * @param message mahjong_RoundAward message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_RoundAward, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_RoundAward message, length delimited. Does not implicitly {@link mahjong_RoundAward.verify|verify} messages.
     * @param message mahjong_RoundAward message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_RoundAward, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_RoundAward message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_RoundAward
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_RoundAward;

    /**
     * Decodes a mahjong_RoundAward message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_RoundAward
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_RoundAward;

    /**
     * Verifies a mahjong_RoundAward message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_RoundAward message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_RoundAward
     */
    public static fromObject(object: { [k: string]: any }): mahjong_RoundAward;

    /**
     * Creates a plain object from a mahjong_RoundAward message. Also converts values to other types if specified.
     * @param message mahjong_RoundAward
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_RoundAward, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_RoundAward to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_leave_table_req. */
export interface Imahjong_cb_leave_table_req {
}

/** Represents a mahjong_cb_leave_table_req. */
export class mahjong_cb_leave_table_req implements Imahjong_cb_leave_table_req {

    /**
     * Constructs a new mahjong_cb_leave_table_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_leave_table_req);

    /**
     * Creates a new mahjong_cb_leave_table_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_leave_table_req instance
     */
    public static create(properties?: Imahjong_cb_leave_table_req): mahjong_cb_leave_table_req;

    /**
     * Encodes the specified mahjong_cb_leave_table_req message. Does not implicitly {@link mahjong_cb_leave_table_req.verify|verify} messages.
     * @param message mahjong_cb_leave_table_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_leave_table_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_leave_table_req message, length delimited. Does not implicitly {@link mahjong_cb_leave_table_req.verify|verify} messages.
     * @param message mahjong_cb_leave_table_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_leave_table_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_leave_table_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_leave_table_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_leave_table_req;

    /**
     * Decodes a mahjong_cb_leave_table_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_leave_table_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_leave_table_req;

    /**
     * Verifies a mahjong_cb_leave_table_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_leave_table_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_leave_table_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_leave_table_req;

    /**
     * Creates a plain object from a mahjong_cb_leave_table_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_leave_table_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_leave_table_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_leave_table_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_game_config_req. */
export interface Imahjong_cl_get_game_config_req {
}

/** Represents a mahjong_cl_get_game_config_req. */
export class mahjong_cl_get_game_config_req implements Imahjong_cl_get_game_config_req {

    /**
     * Constructs a new mahjong_cl_get_game_config_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_game_config_req);

    /**
     * Creates a new mahjong_cl_get_game_config_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_game_config_req instance
     */
    public static create(properties?: Imahjong_cl_get_game_config_req): mahjong_cl_get_game_config_req;

    /**
     * Encodes the specified mahjong_cl_get_game_config_req message. Does not implicitly {@link mahjong_cl_get_game_config_req.verify|verify} messages.
     * @param message mahjong_cl_get_game_config_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_game_config_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_game_config_req message, length delimited. Does not implicitly {@link mahjong_cl_get_game_config_req.verify|verify} messages.
     * @param message mahjong_cl_get_game_config_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_game_config_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_game_config_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_game_config_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_game_config_req;

    /**
     * Decodes a mahjong_cl_get_game_config_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_game_config_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_game_config_req;

    /**
     * Verifies a mahjong_cl_get_game_config_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_game_config_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_game_config_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_game_config_req;

    /**
     * Creates a plain object from a mahjong_cl_get_game_config_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_game_config_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_game_config_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_game_config_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_ExtSigninAward2. */
export interface Imahjong_ExtSigninAward2 {

    /** mahjong_ExtSigninAward2 today */
    today: number;

    /** mahjong_ExtSigninAward2 signinAward */
    signinAward?: (Imahjong_ExtSigninAward[]|null);
}

/** Represents a mahjong_ExtSigninAward2. */
export class mahjong_ExtSigninAward2 implements Imahjong_ExtSigninAward2 {

    /**
     * Constructs a new mahjong_ExtSigninAward2.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_ExtSigninAward2);

    /** mahjong_ExtSigninAward2 today. */
    public today: number;

    /** mahjong_ExtSigninAward2 signinAward. */
    public signinAward: Imahjong_ExtSigninAward[];

    /**
     * Creates a new mahjong_ExtSigninAward2 instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_ExtSigninAward2 instance
     */
    public static create(properties?: Imahjong_ExtSigninAward2): mahjong_ExtSigninAward2;

    /**
     * Encodes the specified mahjong_ExtSigninAward2 message. Does not implicitly {@link mahjong_ExtSigninAward2.verify|verify} messages.
     * @param message mahjong_ExtSigninAward2 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_ExtSigninAward2, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_ExtSigninAward2 message, length delimited. Does not implicitly {@link mahjong_ExtSigninAward2.verify|verify} messages.
     * @param message mahjong_ExtSigninAward2 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_ExtSigninAward2, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_ExtSigninAward2 message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_ExtSigninAward2
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_ExtSigninAward2;

    /**
     * Decodes a mahjong_ExtSigninAward2 message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_ExtSigninAward2
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_ExtSigninAward2;

    /**
     * Verifies a mahjong_ExtSigninAward2 message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_ExtSigninAward2 message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_ExtSigninAward2
     */
    public static fromObject(object: { [k: string]: any }): mahjong_ExtSigninAward2;

    /**
     * Creates a plain object from a mahjong_ExtSigninAward2 message. Also converts values to other types if specified.
     * @param message mahjong_ExtSigninAward2
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_ExtSigninAward2, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_ExtSigninAward2 to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_game_config_ack. */
export interface Imahjong_lc_get_game_config_ack {

    /** mahjong_lc_get_game_config_ack gameItems */
    gameItems?: (Imahjong_GameConfig[]|null);
}

/** Represents a mahjong_lc_get_game_config_ack. */
export class mahjong_lc_get_game_config_ack implements Imahjong_lc_get_game_config_ack {

    /**
     * Constructs a new mahjong_lc_get_game_config_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_game_config_ack);

    /** mahjong_lc_get_game_config_ack gameItems. */
    public gameItems: Imahjong_GameConfig[];

    /**
     * Creates a new mahjong_lc_get_game_config_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_game_config_ack instance
     */
    public static create(properties?: Imahjong_lc_get_game_config_ack): mahjong_lc_get_game_config_ack;

    /**
     * Encodes the specified mahjong_lc_get_game_config_ack message. Does not implicitly {@link mahjong_lc_get_game_config_ack.verify|verify} messages.
     * @param message mahjong_lc_get_game_config_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_game_config_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_game_config_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_game_config_ack.verify|verify} messages.
     * @param message mahjong_lc_get_game_config_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_game_config_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_game_config_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_game_config_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_game_config_ack;

    /**
     * Decodes a mahjong_lc_get_game_config_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_game_config_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_game_config_ack;

    /**
     * Verifies a mahjong_lc_get_game_config_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_game_config_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_game_config_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_game_config_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_game_config_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_game_config_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_game_config_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_game_config_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_player_level_req. */
export interface Imahjong_cl_get_player_level_req {
}

/** Represents a mahjong_cl_get_player_level_req. */
export class mahjong_cl_get_player_level_req implements Imahjong_cl_get_player_level_req {

    /**
     * Constructs a new mahjong_cl_get_player_level_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_player_level_req);

    /**
     * Creates a new mahjong_cl_get_player_level_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_player_level_req instance
     */
    public static create(properties?: Imahjong_cl_get_player_level_req): mahjong_cl_get_player_level_req;

    /**
     * Encodes the specified mahjong_cl_get_player_level_req message. Does not implicitly {@link mahjong_cl_get_player_level_req.verify|verify} messages.
     * @param message mahjong_cl_get_player_level_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_player_level_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_player_level_req message, length delimited. Does not implicitly {@link mahjong_cl_get_player_level_req.verify|verify} messages.
     * @param message mahjong_cl_get_player_level_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_player_level_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_player_level_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_player_level_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_player_level_req;

    /**
     * Decodes a mahjong_cl_get_player_level_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_player_level_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_player_level_req;

    /**
     * Verifies a mahjong_cl_get_player_level_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_player_level_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_player_level_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_player_level_req;

    /**
     * Creates a plain object from a mahjong_cl_get_player_level_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_player_level_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_player_level_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_player_level_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_get_daily_task_award_req. */
export interface Imahjong_cb_get_daily_task_award_req {

    /** mahjong_cb_get_daily_task_award_req index */
    index: number;
}

/** Represents a mahjong_cb_get_daily_task_award_req. */
export class mahjong_cb_get_daily_task_award_req implements Imahjong_cb_get_daily_task_award_req {

    /**
     * Constructs a new mahjong_cb_get_daily_task_award_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_get_daily_task_award_req);

    /** mahjong_cb_get_daily_task_award_req index. */
    public index: number;

    /**
     * Creates a new mahjong_cb_get_daily_task_award_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_get_daily_task_award_req instance
     */
    public static create(properties?: Imahjong_cb_get_daily_task_award_req): mahjong_cb_get_daily_task_award_req;

    /**
     * Encodes the specified mahjong_cb_get_daily_task_award_req message. Does not implicitly {@link mahjong_cb_get_daily_task_award_req.verify|verify} messages.
     * @param message mahjong_cb_get_daily_task_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_get_daily_task_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_get_daily_task_award_req message, length delimited. Does not implicitly {@link mahjong_cb_get_daily_task_award_req.verify|verify} messages.
     * @param message mahjong_cb_get_daily_task_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_get_daily_task_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_get_daily_task_award_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_get_daily_task_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_get_daily_task_award_req;

    /**
     * Decodes a mahjong_cb_get_daily_task_award_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_get_daily_task_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_get_daily_task_award_req;

    /**
     * Verifies a mahjong_cb_get_daily_task_award_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_get_daily_task_award_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_get_daily_task_award_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_get_daily_task_award_req;

    /**
     * Creates a plain object from a mahjong_cb_get_daily_task_award_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_get_daily_task_award_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_get_daily_task_award_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_get_daily_task_award_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_merged_achieve_award_ack. */
export interface Imahjong_lc_get_merged_achieve_award_ack {

    /** mahjong_lc_get_merged_achieve_award_ack ret */
    ret: number;

    /** mahjong_lc_get_merged_achieve_award_ack money */
    money: number;

    /** mahjong_lc_get_merged_achieve_award_ack gift */
    gift: number;

    /** mahjong_lc_get_merged_achieve_award_ack award_0 */
    award_0: number;

    /** mahjong_lc_get_merged_achieve_award_ack award_1 */
    award_1: number;

    /** mahjong_lc_get_merged_achieve_award_ack award_2 */
    award_2: number;

    /** mahjong_lc_get_merged_achieve_award_ack award_3 */
    award_3: number;

    /** mahjong_lc_get_merged_achieve_award_ack award_4 */
    award_4: number;
}

/** Represents a mahjong_lc_get_merged_achieve_award_ack. */
export class mahjong_lc_get_merged_achieve_award_ack implements Imahjong_lc_get_merged_achieve_award_ack {

    /**
     * Constructs a new mahjong_lc_get_merged_achieve_award_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_merged_achieve_award_ack);

    /** mahjong_lc_get_merged_achieve_award_ack ret. */
    public ret: number;

    /** mahjong_lc_get_merged_achieve_award_ack money. */
    public money: number;

    /** mahjong_lc_get_merged_achieve_award_ack gift. */
    public gift: number;

    /** mahjong_lc_get_merged_achieve_award_ack award_0. */
    public award_0: number;

    /** mahjong_lc_get_merged_achieve_award_ack award_1. */
    public award_1: number;

    /** mahjong_lc_get_merged_achieve_award_ack award_2. */
    public award_2: number;

    /** mahjong_lc_get_merged_achieve_award_ack award_3. */
    public award_3: number;

    /** mahjong_lc_get_merged_achieve_award_ack award_4. */
    public award_4: number;

    /**
     * Creates a new mahjong_lc_get_merged_achieve_award_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_merged_achieve_award_ack instance
     */
    public static create(properties?: Imahjong_lc_get_merged_achieve_award_ack): mahjong_lc_get_merged_achieve_award_ack;

    /**
     * Encodes the specified mahjong_lc_get_merged_achieve_award_ack message. Does not implicitly {@link mahjong_lc_get_merged_achieve_award_ack.verify|verify} messages.
     * @param message mahjong_lc_get_merged_achieve_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_merged_achieve_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_merged_achieve_award_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_merged_achieve_award_ack.verify|verify} messages.
     * @param message mahjong_lc_get_merged_achieve_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_merged_achieve_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_merged_achieve_award_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_merged_achieve_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_merged_achieve_award_ack;

    /**
     * Decodes a mahjong_lc_get_merged_achieve_award_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_merged_achieve_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_merged_achieve_award_ack;

    /**
     * Verifies a mahjong_lc_get_merged_achieve_award_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_merged_achieve_award_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_merged_achieve_award_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_merged_achieve_award_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_merged_achieve_award_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_merged_achieve_award_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_merged_achieve_award_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_merged_achieve_award_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_login_req. */
export interface Imahjong_cb_login_req {

    /** mahjong_cb_login_req plyGuid */
    plyGuid: (number|Long);

    /** mahjong_cb_login_req plyTicket */
    plyTicket: string;

    /** mahjong_cb_login_req version */
    version: number;

    /** mahjong_cb_login_req extParam */
    extParam: string;

    /** mahjong_cb_login_req mainGameId */
    mainGameId: number;

    /** mahjong_cb_login_req gameGroup */
    gameGroup: number;
}

/** Represents a mahjong_cb_login_req. */
export class mahjong_cb_login_req implements Imahjong_cb_login_req {

    /**
     * Constructs a new mahjong_cb_login_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_login_req);

    /** mahjong_cb_login_req plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_cb_login_req plyTicket. */
    public plyTicket: string;

    /** mahjong_cb_login_req version. */
    public version: number;

    /** mahjong_cb_login_req extParam. */
    public extParam: string;

    /** mahjong_cb_login_req mainGameId. */
    public mainGameId: number;

    /** mahjong_cb_login_req gameGroup. */
    public gameGroup: number;

    /**
     * Creates a new mahjong_cb_login_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_login_req instance
     */
    public static create(properties?: Imahjong_cb_login_req): mahjong_cb_login_req;

    /**
     * Encodes the specified mahjong_cb_login_req message. Does not implicitly {@link mahjong_cb_login_req.verify|verify} messages.
     * @param message mahjong_cb_login_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_login_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_login_req message, length delimited. Does not implicitly {@link mahjong_cb_login_req.verify|verify} messages.
     * @param message mahjong_cb_login_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_login_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_login_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_login_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_login_req;

    /**
     * Decodes a mahjong_cb_login_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_login_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_login_req;

    /**
     * Verifies a mahjong_cb_login_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_login_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_login_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_login_req;

    /**
     * Creates a plain object from a mahjong_cb_login_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_login_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_login_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_login_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_serverdata_by_serverid_req. */
export interface Imahjong_cl_get_serverdata_by_serverid_req {

    /** mahjong_cl_get_serverdata_by_serverid_req gameId */
    gameId: number;

    /** mahjong_cl_get_serverdata_by_serverid_req serverId */
    serverId: number;
}

/** Represents a mahjong_cl_get_serverdata_by_serverid_req. */
export class mahjong_cl_get_serverdata_by_serverid_req implements Imahjong_cl_get_serverdata_by_serverid_req {

    /**
     * Constructs a new mahjong_cl_get_serverdata_by_serverid_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_serverdata_by_serverid_req);

    /** mahjong_cl_get_serverdata_by_serverid_req gameId. */
    public gameId: number;

    /** mahjong_cl_get_serverdata_by_serverid_req serverId. */
    public serverId: number;

    /**
     * Creates a new mahjong_cl_get_serverdata_by_serverid_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_serverdata_by_serverid_req instance
     */
    public static create(properties?: Imahjong_cl_get_serverdata_by_serverid_req): mahjong_cl_get_serverdata_by_serverid_req;

    /**
     * Encodes the specified mahjong_cl_get_serverdata_by_serverid_req message. Does not implicitly {@link mahjong_cl_get_serverdata_by_serverid_req.verify|verify} messages.
     * @param message mahjong_cl_get_serverdata_by_serverid_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_serverdata_by_serverid_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_serverdata_by_serverid_req message, length delimited. Does not implicitly {@link mahjong_cl_get_serverdata_by_serverid_req.verify|verify} messages.
     * @param message mahjong_cl_get_serverdata_by_serverid_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_serverdata_by_serverid_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_serverdata_by_serverid_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_serverdata_by_serverid_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_serverdata_by_serverid_req;

    /**
     * Decodes a mahjong_cl_get_serverdata_by_serverid_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_serverdata_by_serverid_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_serverdata_by_serverid_req;

    /**
     * Verifies a mahjong_cl_get_serverdata_by_serverid_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_serverdata_by_serverid_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_serverdata_by_serverid_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_serverdata_by_serverid_req;

    /**
     * Creates a plain object from a mahjong_cl_get_serverdata_by_serverid_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_serverdata_by_serverid_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_serverdata_by_serverid_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_serverdata_by_serverid_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_rank_list_ack. */
export interface Imahjong_lc_get_rank_list_ack {

    /** mahjong_lc_get_rank_list_ack rankList */
    rankList?: (Imahjong_RankItem[]|null);

    /** mahjong_lc_get_rank_list_ack type */
    type: number;
}

/** Represents a mahjong_lc_get_rank_list_ack. */
export class mahjong_lc_get_rank_list_ack implements Imahjong_lc_get_rank_list_ack {

    /**
     * Constructs a new mahjong_lc_get_rank_list_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_rank_list_ack);

    /** mahjong_lc_get_rank_list_ack rankList. */
    public rankList: Imahjong_RankItem[];

    /** mahjong_lc_get_rank_list_ack type. */
    public type: number;

    /**
     * Creates a new mahjong_lc_get_rank_list_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_rank_list_ack instance
     */
    public static create(properties?: Imahjong_lc_get_rank_list_ack): mahjong_lc_get_rank_list_ack;

    /**
     * Encodes the specified mahjong_lc_get_rank_list_ack message. Does not implicitly {@link mahjong_lc_get_rank_list_ack.verify|verify} messages.
     * @param message mahjong_lc_get_rank_list_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_rank_list_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_rank_list_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_rank_list_ack.verify|verify} messages.
     * @param message mahjong_lc_get_rank_list_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_rank_list_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_rank_list_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_rank_list_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_rank_list_ack;

    /**
     * Decodes a mahjong_lc_get_rank_list_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_rank_list_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_rank_list_ack;

    /**
     * Verifies a mahjong_lc_get_rank_list_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_rank_list_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_rank_list_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_rank_list_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_rank_list_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_rank_list_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_rank_list_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_rank_list_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_use_protocol_mahjong_req. */
export interface Imahjong_cb_use_protocol_mahjong_req {
}

/** Represents a mahjong_cb_use_protocol_mahjong_req. */
export class mahjong_cb_use_protocol_mahjong_req implements Imahjong_cb_use_protocol_mahjong_req {

    /**
     * Constructs a new mahjong_cb_use_protocol_mahjong_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_use_protocol_mahjong_req);

    /**
     * Creates a new mahjong_cb_use_protocol_mahjong_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_use_protocol_mahjong_req instance
     */
    public static create(properties?: Imahjong_cb_use_protocol_mahjong_req): mahjong_cb_use_protocol_mahjong_req;

    /**
     * Encodes the specified mahjong_cb_use_protocol_mahjong_req message. Does not implicitly {@link mahjong_cb_use_protocol_mahjong_req.verify|verify} messages.
     * @param message mahjong_cb_use_protocol_mahjong_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_use_protocol_mahjong_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_use_protocol_mahjong_req message, length delimited. Does not implicitly {@link mahjong_cb_use_protocol_mahjong_req.verify|verify} messages.
     * @param message mahjong_cb_use_protocol_mahjong_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_use_protocol_mahjong_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_use_protocol_mahjong_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_use_protocol_mahjong_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_use_protocol_mahjong_req;

    /**
     * Decodes a mahjong_cb_use_protocol_mahjong_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_use_protocol_mahjong_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_use_protocol_mahjong_req;

    /**
     * Verifies a mahjong_cb_use_protocol_mahjong_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_use_protocol_mahjong_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_use_protocol_mahjong_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_use_protocol_mahjong_req;

    /**
     * Creates a plain object from a mahjong_cb_use_protocol_mahjong_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_use_protocol_mahjong_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_use_protocol_mahjong_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_use_protocol_mahjong_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_PROP_ITEM_DATA. */
export interface Imahjong_PROP_ITEM_DATA {

    /** mahjong_PROP_ITEM_DATA index */
    index: number;

    /** mahjong_PROP_ITEM_DATA num */
    num: number;
}

/** Represents a mahjong_PROP_ITEM_DATA. */
export class mahjong_PROP_ITEM_DATA implements Imahjong_PROP_ITEM_DATA {

    /**
     * Constructs a new mahjong_PROP_ITEM_DATA.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_PROP_ITEM_DATA);

    /** mahjong_PROP_ITEM_DATA index. */
    public index: number;

    /** mahjong_PROP_ITEM_DATA num. */
    public num: number;

    /**
     * Creates a new mahjong_PROP_ITEM_DATA instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_PROP_ITEM_DATA instance
     */
    public static create(properties?: Imahjong_PROP_ITEM_DATA): mahjong_PROP_ITEM_DATA;

    /**
     * Encodes the specified mahjong_PROP_ITEM_DATA message. Does not implicitly {@link mahjong_PROP_ITEM_DATA.verify|verify} messages.
     * @param message mahjong_PROP_ITEM_DATA message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_PROP_ITEM_DATA, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_PROP_ITEM_DATA message, length delimited. Does not implicitly {@link mahjong_PROP_ITEM_DATA.verify|verify} messages.
     * @param message mahjong_PROP_ITEM_DATA message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_PROP_ITEM_DATA, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_PROP_ITEM_DATA message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_PROP_ITEM_DATA
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_PROP_ITEM_DATA;

    /**
     * Decodes a mahjong_PROP_ITEM_DATA message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_PROP_ITEM_DATA
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_PROP_ITEM_DATA;

    /**
     * Verifies a mahjong_PROP_ITEM_DATA message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_PROP_ITEM_DATA message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_PROP_ITEM_DATA
     */
    public static fromObject(object: { [k: string]: any }): mahjong_PROP_ITEM_DATA;

    /**
     * Creates a plain object from a mahjong_PROP_ITEM_DATA message. Also converts values to other types if specified.
     * @param message mahjong_PROP_ITEM_DATA
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_PROP_ITEM_DATA, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_PROP_ITEM_DATA to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_user_signin_award_req. */
export interface Imahjong_cl_get_user_signin_award_req {

    /** mahjong_cl_get_user_signin_award_req day */
    day: number;
}

/** Represents a mahjong_cl_get_user_signin_award_req. */
export class mahjong_cl_get_user_signin_award_req implements Imahjong_cl_get_user_signin_award_req {

    /**
     * Constructs a new mahjong_cl_get_user_signin_award_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_user_signin_award_req);

    /** mahjong_cl_get_user_signin_award_req day. */
    public day: number;

    /**
     * Creates a new mahjong_cl_get_user_signin_award_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_user_signin_award_req instance
     */
    public static create(properties?: Imahjong_cl_get_user_signin_award_req): mahjong_cl_get_user_signin_award_req;

    /**
     * Encodes the specified mahjong_cl_get_user_signin_award_req message. Does not implicitly {@link mahjong_cl_get_user_signin_award_req.verify|verify} messages.
     * @param message mahjong_cl_get_user_signin_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_user_signin_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_user_signin_award_req message, length delimited. Does not implicitly {@link mahjong_cl_get_user_signin_award_req.verify|verify} messages.
     * @param message mahjong_cl_get_user_signin_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_user_signin_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_user_signin_award_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_user_signin_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_user_signin_award_req;

    /**
     * Decodes a mahjong_cl_get_user_signin_award_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_user_signin_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_user_signin_award_req;

    /**
     * Verifies a mahjong_cl_get_user_signin_award_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_user_signin_award_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_user_signin_award_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_user_signin_award_req;

    /**
     * Creates a plain object from a mahjong_cl_get_user_signin_award_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_user_signin_award_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_user_signin_award_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_user_signin_award_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_item_update_not. */
export interface Imahjong_bc_item_update_not {

    /** mahjong_bc_item_update_not index */
    index: number;

    /** mahjong_bc_item_update_not num */
    num: number;
}

/** Represents a mahjong_bc_item_update_not. */
export class mahjong_bc_item_update_not implements Imahjong_bc_item_update_not {

    /**
     * Constructs a new mahjong_bc_item_update_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_item_update_not);

    /** mahjong_bc_item_update_not index. */
    public index: number;

    /** mahjong_bc_item_update_not num. */
    public num: number;

    /**
     * Creates a new mahjong_bc_item_update_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_item_update_not instance
     */
    public static create(properties?: Imahjong_bc_item_update_not): mahjong_bc_item_update_not;

    /**
     * Encodes the specified mahjong_bc_item_update_not message. Does not implicitly {@link mahjong_bc_item_update_not.verify|verify} messages.
     * @param message mahjong_bc_item_update_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_item_update_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_item_update_not message, length delimited. Does not implicitly {@link mahjong_bc_item_update_not.verify|verify} messages.
     * @param message mahjong_bc_item_update_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_item_update_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_item_update_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_item_update_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_item_update_not;

    /**
     * Decodes a mahjong_bc_item_update_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_item_update_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_item_update_not;

    /**
     * Verifies a mahjong_bc_item_update_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_item_update_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_item_update_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_item_update_not;

    /**
     * Creates a plain object from a mahjong_bc_item_update_not message. Also converts values to other types if specified.
     * @param message mahjong_bc_item_update_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_item_update_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_item_update_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_achieve_list_req. */
export interface Imahjong_cl_get_achieve_list_req {
}

/** Represents a mahjong_cl_get_achieve_list_req. */
export class mahjong_cl_get_achieve_list_req implements Imahjong_cl_get_achieve_list_req {

    /**
     * Constructs a new mahjong_cl_get_achieve_list_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_achieve_list_req);

    /**
     * Creates a new mahjong_cl_get_achieve_list_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_achieve_list_req instance
     */
    public static create(properties?: Imahjong_cl_get_achieve_list_req): mahjong_cl_get_achieve_list_req;

    /**
     * Encodes the specified mahjong_cl_get_achieve_list_req message. Does not implicitly {@link mahjong_cl_get_achieve_list_req.verify|verify} messages.
     * @param message mahjong_cl_get_achieve_list_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_achieve_list_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_achieve_list_req message, length delimited. Does not implicitly {@link mahjong_cl_get_achieve_list_req.verify|verify} messages.
     * @param message mahjong_cl_get_achieve_list_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_achieve_list_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_achieve_list_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_achieve_list_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_achieve_list_req;

    /**
     * Decodes a mahjong_cl_get_achieve_list_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_achieve_list_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_achieve_list_req;

    /**
     * Verifies a mahjong_cl_get_achieve_list_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_achieve_list_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_achieve_list_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_achieve_list_req;

    /**
     * Creates a plain object from a mahjong_cl_get_achieve_list_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_achieve_list_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_achieve_list_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_achieve_list_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_server_status_not. */
export interface Imahjong_lc_get_server_status_not {

    /** mahjong_lc_get_server_status_not serverStatus */
    serverStatus?: (Imahjong_ServerStatus[]|null);
}

/** Represents a mahjong_lc_get_server_status_not. */
export class mahjong_lc_get_server_status_not implements Imahjong_lc_get_server_status_not {

    /**
     * Constructs a new mahjong_lc_get_server_status_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_server_status_not);

    /** mahjong_lc_get_server_status_not serverStatus. */
    public serverStatus: Imahjong_ServerStatus[];

    /**
     * Creates a new mahjong_lc_get_server_status_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_server_status_not instance
     */
    public static create(properties?: Imahjong_lc_get_server_status_not): mahjong_lc_get_server_status_not;

    /**
     * Encodes the specified mahjong_lc_get_server_status_not message. Does not implicitly {@link mahjong_lc_get_server_status_not.verify|verify} messages.
     * @param message mahjong_lc_get_server_status_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_server_status_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_server_status_not message, length delimited. Does not implicitly {@link mahjong_lc_get_server_status_not.verify|verify} messages.
     * @param message mahjong_lc_get_server_status_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_server_status_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_server_status_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_server_status_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_server_status_not;

    /**
     * Decodes a mahjong_lc_get_server_status_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_server_status_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_server_status_not;

    /**
     * Verifies a mahjong_lc_get_server_status_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_server_status_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_server_status_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_server_status_not;

    /**
     * Creates a plain object from a mahjong_lc_get_server_status_not message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_server_status_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_server_status_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_server_status_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_ROOM_LIMIT_INFO. */
export interface Imahjong_ROOM_LIMIT_INFO {

    /** mahjong_ROOM_LIMIT_INFO mainGameId */
    mainGameId: number;

    /** mahjong_ROOM_LIMIT_INFO serverType */
    serverType: number;

    /** mahjong_ROOM_LIMIT_INFO startDate */
    startDate: number;

    /** mahjong_ROOM_LIMIT_INFO endDate */
    endDate: number;

    /** mahjong_ROOM_LIMIT_INFO startTime */
    startTime: number;

    /** mahjong_ROOM_LIMIT_INFO endTime */
    endTime: number;

    /** mahjong_ROOM_LIMIT_INFO limitNum */
    limitNum: number;
}

/** Represents a mahjong_ROOM_LIMIT_INFO. */
export class mahjong_ROOM_LIMIT_INFO implements Imahjong_ROOM_LIMIT_INFO {

    /**
     * Constructs a new mahjong_ROOM_LIMIT_INFO.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_ROOM_LIMIT_INFO);

    /** mahjong_ROOM_LIMIT_INFO mainGameId. */
    public mainGameId: number;

    /** mahjong_ROOM_LIMIT_INFO serverType. */
    public serverType: number;

    /** mahjong_ROOM_LIMIT_INFO startDate. */
    public startDate: number;

    /** mahjong_ROOM_LIMIT_INFO endDate. */
    public endDate: number;

    /** mahjong_ROOM_LIMIT_INFO startTime. */
    public startTime: number;

    /** mahjong_ROOM_LIMIT_INFO endTime. */
    public endTime: number;

    /** mahjong_ROOM_LIMIT_INFO limitNum. */
    public limitNum: number;

    /**
     * Creates a new mahjong_ROOM_LIMIT_INFO instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_ROOM_LIMIT_INFO instance
     */
    public static create(properties?: Imahjong_ROOM_LIMIT_INFO): mahjong_ROOM_LIMIT_INFO;

    /**
     * Encodes the specified mahjong_ROOM_LIMIT_INFO message. Does not implicitly {@link mahjong_ROOM_LIMIT_INFO.verify|verify} messages.
     * @param message mahjong_ROOM_LIMIT_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_ROOM_LIMIT_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_ROOM_LIMIT_INFO message, length delimited. Does not implicitly {@link mahjong_ROOM_LIMIT_INFO.verify|verify} messages.
     * @param message mahjong_ROOM_LIMIT_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_ROOM_LIMIT_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_ROOM_LIMIT_INFO message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_ROOM_LIMIT_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_ROOM_LIMIT_INFO;

    /**
     * Decodes a mahjong_ROOM_LIMIT_INFO message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_ROOM_LIMIT_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_ROOM_LIMIT_INFO;

    /**
     * Verifies a mahjong_ROOM_LIMIT_INFO message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_ROOM_LIMIT_INFO message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_ROOM_LIMIT_INFO
     */
    public static fromObject(object: { [k: string]: any }): mahjong_ROOM_LIMIT_INFO;

    /**
     * Creates a plain object from a mahjong_ROOM_LIMIT_INFO message. Also converts values to other types if specified.
     * @param message mahjong_ROOM_LIMIT_INFO
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_ROOM_LIMIT_INFO, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_ROOM_LIMIT_INFO to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_friend_list_ack20121227. */
export interface Imahjong_lc_get_friend_list_ack20121227 {

    /** mahjong_lc_get_friend_list_ack20121227 friends */
    friends?: (Imahjong_FriendData20121227[]|null);
}

/** Represents a mahjong_lc_get_friend_list_ack20121227. */
export class mahjong_lc_get_friend_list_ack20121227 implements Imahjong_lc_get_friend_list_ack20121227 {

    /**
     * Constructs a new mahjong_lc_get_friend_list_ack20121227.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_friend_list_ack20121227);

    /** mahjong_lc_get_friend_list_ack20121227 friends. */
    public friends: Imahjong_FriendData20121227[];

    /**
     * Creates a new mahjong_lc_get_friend_list_ack20121227 instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_friend_list_ack20121227 instance
     */
    public static create(properties?: Imahjong_lc_get_friend_list_ack20121227): mahjong_lc_get_friend_list_ack20121227;

    /**
     * Encodes the specified mahjong_lc_get_friend_list_ack20121227 message. Does not implicitly {@link mahjong_lc_get_friend_list_ack20121227.verify|verify} messages.
     * @param message mahjong_lc_get_friend_list_ack20121227 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_friend_list_ack20121227, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_friend_list_ack20121227 message, length delimited. Does not implicitly {@link mahjong_lc_get_friend_list_ack20121227.verify|verify} messages.
     * @param message mahjong_lc_get_friend_list_ack20121227 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_friend_list_ack20121227, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_friend_list_ack20121227 message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_friend_list_ack20121227
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_friend_list_ack20121227;

    /**
     * Decodes a mahjong_lc_get_friend_list_ack20121227 message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_friend_list_ack20121227
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_friend_list_ack20121227;

    /**
     * Verifies a mahjong_lc_get_friend_list_ack20121227 message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_friend_list_ack20121227 message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_friend_list_ack20121227
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_friend_list_ack20121227;

    /**
     * Creates a plain object from a mahjong_lc_get_friend_list_ack20121227 message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_friend_list_ack20121227
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_friend_list_ack20121227, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_friend_list_ack20121227 to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_user_good_card_req. */
export interface Imahjong_cl_get_user_good_card_req {

    /** mahjong_cl_get_user_good_card_req num */
    num: number;
}

/** Represents a mahjong_cl_get_user_good_card_req. */
export class mahjong_cl_get_user_good_card_req implements Imahjong_cl_get_user_good_card_req {

    /**
     * Constructs a new mahjong_cl_get_user_good_card_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_user_good_card_req);

    /** mahjong_cl_get_user_good_card_req num. */
    public num: number;

    /**
     * Creates a new mahjong_cl_get_user_good_card_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_user_good_card_req instance
     */
    public static create(properties?: Imahjong_cl_get_user_good_card_req): mahjong_cl_get_user_good_card_req;

    /**
     * Encodes the specified mahjong_cl_get_user_good_card_req message. Does not implicitly {@link mahjong_cl_get_user_good_card_req.verify|verify} messages.
     * @param message mahjong_cl_get_user_good_card_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_user_good_card_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_user_good_card_req message, length delimited. Does not implicitly {@link mahjong_cl_get_user_good_card_req.verify|verify} messages.
     * @param message mahjong_cl_get_user_good_card_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_user_good_card_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_user_good_card_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_user_good_card_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_user_good_card_req;

    /**
     * Decodes a mahjong_cl_get_user_good_card_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_user_good_card_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_user_good_card_req;

    /**
     * Verifies a mahjong_cl_get_user_good_card_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_user_good_card_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_user_good_card_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_user_good_card_req;

    /**
     * Creates a plain object from a mahjong_cl_get_user_good_card_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_user_good_card_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_user_good_card_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_user_good_card_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_login_ack. */
export interface Imahjong_bc_login_ack {

    /** mahjong_bc_login_ack ret */
    ret: number;

    /** mahjong_bc_login_ack plyBaseData */
    plyBaseData: Imahjong_PlyBaseData;

    /** mahjong_bc_login_ack plyStatus */
    plyStatus: Imahjong_PlayerStatus;

    /** mahjong_bc_login_ack errorMsg */
    errorMsg: string;
}

/** Represents a mahjong_bc_login_ack. */
export class mahjong_bc_login_ack implements Imahjong_bc_login_ack {

    /**
     * Constructs a new mahjong_bc_login_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_login_ack);

    /** mahjong_bc_login_ack ret. */
    public ret: number;

    /** mahjong_bc_login_ack plyBaseData. */
    public plyBaseData: Imahjong_PlyBaseData;

    /** mahjong_bc_login_ack plyStatus. */
    public plyStatus: Imahjong_PlayerStatus;

    /** mahjong_bc_login_ack errorMsg. */
    public errorMsg: string;

    /**
     * Creates a new mahjong_bc_login_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_login_ack instance
     */
    public static create(properties?: Imahjong_bc_login_ack): mahjong_bc_login_ack;

    /**
     * Encodes the specified mahjong_bc_login_ack message. Does not implicitly {@link mahjong_bc_login_ack.verify|verify} messages.
     * @param message mahjong_bc_login_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_login_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_login_ack message, length delimited. Does not implicitly {@link mahjong_bc_login_ack.verify|verify} messages.
     * @param message mahjong_bc_login_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_login_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_login_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_login_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_login_ack;

    /**
     * Decodes a mahjong_bc_login_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_login_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_login_ack;

    /**
     * Verifies a mahjong_bc_login_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_login_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_login_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_login_ack;

    /**
     * Creates a plain object from a mahjong_bc_login_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_login_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_login_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_login_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_get_task_award_ack. */
export interface Imahjong_bc_get_task_award_ack {

    /** mahjong_bc_get_task_award_ack ret */
    ret: number;

    /** mahjong_bc_get_task_award_ack taskType */
    taskType: number;

    /** mahjong_bc_get_task_award_ack lastTaskIndex */
    lastTaskIndex: number;

    /** mahjong_bc_get_task_award_ack curVal */
    curVal: number;

    /** mahjong_bc_get_task_award_ack configRound */
    configRound: number;

    /** mahjong_bc_get_task_award_ack luckDrawTimes */
    luckDrawTimes: number;
}

/** Represents a mahjong_bc_get_task_award_ack. */
export class mahjong_bc_get_task_award_ack implements Imahjong_bc_get_task_award_ack {

    /**
     * Constructs a new mahjong_bc_get_task_award_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_get_task_award_ack);

    /** mahjong_bc_get_task_award_ack ret. */
    public ret: number;

    /** mahjong_bc_get_task_award_ack taskType. */
    public taskType: number;

    /** mahjong_bc_get_task_award_ack lastTaskIndex. */
    public lastTaskIndex: number;

    /** mahjong_bc_get_task_award_ack curVal. */
    public curVal: number;

    /** mahjong_bc_get_task_award_ack configRound. */
    public configRound: number;

    /** mahjong_bc_get_task_award_ack luckDrawTimes. */
    public luckDrawTimes: number;

    /**
     * Creates a new mahjong_bc_get_task_award_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_get_task_award_ack instance
     */
    public static create(properties?: Imahjong_bc_get_task_award_ack): mahjong_bc_get_task_award_ack;

    /**
     * Encodes the specified mahjong_bc_get_task_award_ack message. Does not implicitly {@link mahjong_bc_get_task_award_ack.verify|verify} messages.
     * @param message mahjong_bc_get_task_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_get_task_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_get_task_award_ack message, length delimited. Does not implicitly {@link mahjong_bc_get_task_award_ack.verify|verify} messages.
     * @param message mahjong_bc_get_task_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_get_task_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_get_task_award_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_get_task_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_get_task_award_ack;

    /**
     * Decodes a mahjong_bc_get_task_award_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_get_task_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_get_task_award_ack;

    /**
     * Verifies a mahjong_bc_get_task_award_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_get_task_award_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_get_task_award_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_get_task_award_ack;

    /**
     * Creates a plain object from a mahjong_bc_get_task_award_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_get_task_award_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_get_task_award_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_get_task_award_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_get_mahjong_quick_daily_task_data_ack. */
export interface Imahjong_bc_get_mahjong_quick_daily_task_data_ack {

    /** mahjong_bc_get_mahjong_quick_daily_task_data_ack items */
    items?: (Imahjong_MergedAchieveData[]|null);
}

/** Represents a mahjong_bc_get_mahjong_quick_daily_task_data_ack. */
export class mahjong_bc_get_mahjong_quick_daily_task_data_ack implements Imahjong_bc_get_mahjong_quick_daily_task_data_ack {

    /**
     * Constructs a new mahjong_bc_get_mahjong_quick_daily_task_data_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_get_mahjong_quick_daily_task_data_ack);

    /** mahjong_bc_get_mahjong_quick_daily_task_data_ack items. */
    public items: Imahjong_MergedAchieveData[];

    /**
     * Creates a new mahjong_bc_get_mahjong_quick_daily_task_data_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_get_mahjong_quick_daily_task_data_ack instance
     */
    public static create(properties?: Imahjong_bc_get_mahjong_quick_daily_task_data_ack): mahjong_bc_get_mahjong_quick_daily_task_data_ack;

    /**
     * Encodes the specified mahjong_bc_get_mahjong_quick_daily_task_data_ack message. Does not implicitly {@link mahjong_bc_get_mahjong_quick_daily_task_data_ack.verify|verify} messages.
     * @param message mahjong_bc_get_mahjong_quick_daily_task_data_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_get_mahjong_quick_daily_task_data_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_get_mahjong_quick_daily_task_data_ack message, length delimited. Does not implicitly {@link mahjong_bc_get_mahjong_quick_daily_task_data_ack.verify|verify} messages.
     * @param message mahjong_bc_get_mahjong_quick_daily_task_data_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_get_mahjong_quick_daily_task_data_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_get_mahjong_quick_daily_task_data_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_get_mahjong_quick_daily_task_data_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_get_mahjong_quick_daily_task_data_ack;

    /**
     * Decodes a mahjong_bc_get_mahjong_quick_daily_task_data_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_get_mahjong_quick_daily_task_data_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_get_mahjong_quick_daily_task_data_ack;

    /**
     * Verifies a mahjong_bc_get_mahjong_quick_daily_task_data_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_get_mahjong_quick_daily_task_data_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_get_mahjong_quick_daily_task_data_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_get_mahjong_quick_daily_task_data_ack;

    /**
     * Creates a plain object from a mahjong_bc_get_mahjong_quick_daily_task_data_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_get_mahjong_quick_daily_task_data_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_get_mahjong_quick_daily_task_data_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_get_mahjong_quick_daily_task_data_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_FriendData. */
export interface Imahjong_FriendData {

    /** mahjong_FriendData plyGuid */
    plyGuid: (number|Long);

    /** mahjong_FriendData plyNickname */
    plyNickname: string;

    /** mahjong_FriendData plyMoney */
    plyMoney: (number|Long);

    /** mahjong_FriendData plyVipLev */
    plyVipLev: number;

    /** mahjong_FriendData plyUnreadMsgNum */
    plyUnreadMsgNum: number;

    /** mahjong_FriendData plyType */
    plyType: number;
}

/** Represents a mahjong_FriendData. */
export class mahjong_FriendData implements Imahjong_FriendData {

    /**
     * Constructs a new mahjong_FriendData.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_FriendData);

    /** mahjong_FriendData plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_FriendData plyNickname. */
    public plyNickname: string;

    /** mahjong_FriendData plyMoney. */
    public plyMoney: (number|Long);

    /** mahjong_FriendData plyVipLev. */
    public plyVipLev: number;

    /** mahjong_FriendData plyUnreadMsgNum. */
    public plyUnreadMsgNum: number;

    /** mahjong_FriendData plyType. */
    public plyType: number;

    /**
     * Creates a new mahjong_FriendData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_FriendData instance
     */
    public static create(properties?: Imahjong_FriendData): mahjong_FriendData;

    /**
     * Encodes the specified mahjong_FriendData message. Does not implicitly {@link mahjong_FriendData.verify|verify} messages.
     * @param message mahjong_FriendData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_FriendData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_FriendData message, length delimited. Does not implicitly {@link mahjong_FriendData.verify|verify} messages.
     * @param message mahjong_FriendData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_FriendData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_FriendData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_FriendData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_FriendData;

    /**
     * Decodes a mahjong_FriendData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_FriendData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_FriendData;

    /**
     * Verifies a mahjong_FriendData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_FriendData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_FriendData
     */
    public static fromObject(object: { [k: string]: any }): mahjong_FriendData;

    /**
     * Creates a plain object from a mahjong_FriendData message. Also converts values to other types if specified.
     * @param message mahjong_FriendData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_FriendData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_FriendData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_continuous_landing_get_reward_ack. */
export interface Imahjong_lc_continuous_landing_get_reward_ack {

    /** mahjong_lc_continuous_landing_get_reward_ack ret */
    ret: number;

    /** mahjong_lc_continuous_landing_get_reward_ack index */
    index: number;

    /** mahjong_lc_continuous_landing_get_reward_ack value */
    value: (number|Long);
}

/** Represents a mahjong_lc_continuous_landing_get_reward_ack. */
export class mahjong_lc_continuous_landing_get_reward_ack implements Imahjong_lc_continuous_landing_get_reward_ack {

    /**
     * Constructs a new mahjong_lc_continuous_landing_get_reward_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_continuous_landing_get_reward_ack);

    /** mahjong_lc_continuous_landing_get_reward_ack ret. */
    public ret: number;

    /** mahjong_lc_continuous_landing_get_reward_ack index. */
    public index: number;

    /** mahjong_lc_continuous_landing_get_reward_ack value. */
    public value: (number|Long);

    /**
     * Creates a new mahjong_lc_continuous_landing_get_reward_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_continuous_landing_get_reward_ack instance
     */
    public static create(properties?: Imahjong_lc_continuous_landing_get_reward_ack): mahjong_lc_continuous_landing_get_reward_ack;

    /**
     * Encodes the specified mahjong_lc_continuous_landing_get_reward_ack message. Does not implicitly {@link mahjong_lc_continuous_landing_get_reward_ack.verify|verify} messages.
     * @param message mahjong_lc_continuous_landing_get_reward_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_continuous_landing_get_reward_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_continuous_landing_get_reward_ack message, length delimited. Does not implicitly {@link mahjong_lc_continuous_landing_get_reward_ack.verify|verify} messages.
     * @param message mahjong_lc_continuous_landing_get_reward_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_continuous_landing_get_reward_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_continuous_landing_get_reward_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_continuous_landing_get_reward_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_continuous_landing_get_reward_ack;

    /**
     * Decodes a mahjong_lc_continuous_landing_get_reward_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_continuous_landing_get_reward_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_continuous_landing_get_reward_ack;

    /**
     * Verifies a mahjong_lc_continuous_landing_get_reward_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_continuous_landing_get_reward_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_continuous_landing_get_reward_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_continuous_landing_get_reward_ack;

    /**
     * Creates a plain object from a mahjong_lc_continuous_landing_get_reward_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_continuous_landing_get_reward_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_continuous_landing_get_reward_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_continuous_landing_get_reward_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_assist_info_data_req. */
export interface Imahjong_cl_get_assist_info_data_req {

    /** mahjong_cl_get_assist_info_data_req gameId */
    gameId: number;
}

/** Represents a mahjong_cl_get_assist_info_data_req. */
export class mahjong_cl_get_assist_info_data_req implements Imahjong_cl_get_assist_info_data_req {

    /**
     * Constructs a new mahjong_cl_get_assist_info_data_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_assist_info_data_req);

    /** mahjong_cl_get_assist_info_data_req gameId. */
    public gameId: number;

    /**
     * Creates a new mahjong_cl_get_assist_info_data_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_assist_info_data_req instance
     */
    public static create(properties?: Imahjong_cl_get_assist_info_data_req): mahjong_cl_get_assist_info_data_req;

    /**
     * Encodes the specified mahjong_cl_get_assist_info_data_req message. Does not implicitly {@link mahjong_cl_get_assist_info_data_req.verify|verify} messages.
     * @param message mahjong_cl_get_assist_info_data_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_assist_info_data_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_assist_info_data_req message, length delimited. Does not implicitly {@link mahjong_cl_get_assist_info_data_req.verify|verify} messages.
     * @param message mahjong_cl_get_assist_info_data_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_assist_info_data_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_assist_info_data_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_assist_info_data_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_assist_info_data_req;

    /**
     * Decodes a mahjong_cl_get_assist_info_data_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_assist_info_data_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_assist_info_data_req;

    /**
     * Verifies a mahjong_cl_get_assist_info_data_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_assist_info_data_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_assist_info_data_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_assist_info_data_req;

    /**
     * Creates a plain object from a mahjong_cl_get_assist_info_data_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_assist_info_data_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_assist_info_data_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_assist_info_data_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_ItemData. */
export interface Imahjong_ItemData {

    /** mahjong_ItemData index */
    index: number;

    /** mahjong_ItemData num */
    num: number;

    /** mahjong_ItemData gameId */
    gameId: number;

    /** mahjong_ItemData param_1 */
    param_1: number;

    /** mahjong_ItemData param_2 */
    param_2: number;

    /** mahjong_ItemData name */
    name: string;

    /** mahjong_ItemData url */
    url: string;
}

/** Represents a mahjong_ItemData. */
export class mahjong_ItemData implements Imahjong_ItemData {

    /**
     * Constructs a new mahjong_ItemData.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_ItemData);

    /** mahjong_ItemData index. */
    public index: number;

    /** mahjong_ItemData num. */
    public num: number;

    /** mahjong_ItemData gameId. */
    public gameId: number;

    /** mahjong_ItemData param_1. */
    public param_1: number;

    /** mahjong_ItemData param_2. */
    public param_2: number;

    /** mahjong_ItemData name. */
    public name: string;

    /** mahjong_ItemData url. */
    public url: string;

    /**
     * Creates a new mahjong_ItemData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_ItemData instance
     */
    public static create(properties?: Imahjong_ItemData): mahjong_ItemData;

    /**
     * Encodes the specified mahjong_ItemData message. Does not implicitly {@link mahjong_ItemData.verify|verify} messages.
     * @param message mahjong_ItemData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_ItemData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_ItemData message, length delimited. Does not implicitly {@link mahjong_ItemData.verify|verify} messages.
     * @param message mahjong_ItemData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_ItemData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_ItemData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_ItemData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_ItemData;

    /**
     * Decodes a mahjong_ItemData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_ItemData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_ItemData;

    /**
     * Verifies a mahjong_ItemData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_ItemData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_ItemData
     */
    public static fromObject(object: { [k: string]: any }): mahjong_ItemData;

    /**
     * Creates a plain object from a mahjong_ItemData message. Also converts values to other types if specified.
     * @param message mahjong_ItemData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_ItemData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_ItemData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_op_friend_req. */
export interface Imahjong_cl_op_friend_req {

    /** mahjong_cl_op_friend_req opcode */
    opcode: number;

    /** mahjong_cl_op_friend_req plyGuid */
    plyGuid: (number|Long);
}

/** Represents a mahjong_cl_op_friend_req. */
export class mahjong_cl_op_friend_req implements Imahjong_cl_op_friend_req {

    /**
     * Constructs a new mahjong_cl_op_friend_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_op_friend_req);

    /** mahjong_cl_op_friend_req opcode. */
    public opcode: number;

    /** mahjong_cl_op_friend_req plyGuid. */
    public plyGuid: (number|Long);

    /**
     * Creates a new mahjong_cl_op_friend_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_op_friend_req instance
     */
    public static create(properties?: Imahjong_cl_op_friend_req): mahjong_cl_op_friend_req;

    /**
     * Encodes the specified mahjong_cl_op_friend_req message. Does not implicitly {@link mahjong_cl_op_friend_req.verify|verify} messages.
     * @param message mahjong_cl_op_friend_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_op_friend_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_op_friend_req message, length delimited. Does not implicitly {@link mahjong_cl_op_friend_req.verify|verify} messages.
     * @param message mahjong_cl_op_friend_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_op_friend_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_op_friend_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_op_friend_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_op_friend_req;

    /**
     * Decodes a mahjong_cl_op_friend_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_op_friend_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_op_friend_req;

    /**
     * Verifies a mahjong_cl_op_friend_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_op_friend_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_op_friend_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_op_friend_req;

    /**
     * Creates a plain object from a mahjong_cl_op_friend_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_op_friend_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_op_friend_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_op_friend_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_Cluc_Rule_Info. */
export interface Imahjong_Cluc_Rule_Info {

    /** mahjong_Cluc_Rule_Info clubId */
    clubId: number;

    /** mahjong_Cluc_Rule_Info gameId */
    gameId: number;

    /** mahjong_Cluc_Rule_Info ruleId */
    ruleId: number;

    /** mahjong_Cluc_Rule_Info rule */
    rule: string;

    /** mahjong_Cluc_Rule_Info ruleName */
    ruleName: string;
}

/** Represents a mahjong_Cluc_Rule_Info. */
export class mahjong_Cluc_Rule_Info implements Imahjong_Cluc_Rule_Info {

    /**
     * Constructs a new mahjong_Cluc_Rule_Info.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_Cluc_Rule_Info);

    /** mahjong_Cluc_Rule_Info clubId. */
    public clubId: number;

    /** mahjong_Cluc_Rule_Info gameId. */
    public gameId: number;

    /** mahjong_Cluc_Rule_Info ruleId. */
    public ruleId: number;

    /** mahjong_Cluc_Rule_Info rule. */
    public rule: string;

    /** mahjong_Cluc_Rule_Info ruleName. */
    public ruleName: string;

    /**
     * Creates a new mahjong_Cluc_Rule_Info instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_Cluc_Rule_Info instance
     */
    public static create(properties?: Imahjong_Cluc_Rule_Info): mahjong_Cluc_Rule_Info;

    /**
     * Encodes the specified mahjong_Cluc_Rule_Info message. Does not implicitly {@link mahjong_Cluc_Rule_Info.verify|verify} messages.
     * @param message mahjong_Cluc_Rule_Info message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_Cluc_Rule_Info, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_Cluc_Rule_Info message, length delimited. Does not implicitly {@link mahjong_Cluc_Rule_Info.verify|verify} messages.
     * @param message mahjong_Cluc_Rule_Info message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_Cluc_Rule_Info, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_Cluc_Rule_Info message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_Cluc_Rule_Info
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_Cluc_Rule_Info;

    /**
     * Decodes a mahjong_Cluc_Rule_Info message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_Cluc_Rule_Info
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_Cluc_Rule_Info;

    /**
     * Verifies a mahjong_Cluc_Rule_Info message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_Cluc_Rule_Info message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_Cluc_Rule_Info
     */
    public static fromObject(object: { [k: string]: any }): mahjong_Cluc_Rule_Info;

    /**
     * Creates a plain object from a mahjong_Cluc_Rule_Info message. Also converts values to other types if specified.
     * @param message mahjong_Cluc_Rule_Info
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_Cluc_Rule_Info, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_Cluc_Rule_Info to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_player_signature_req. */
export interface Imahjong_cl_player_signature_req {

    /** mahjong_cl_player_signature_req flag */
    flag: number;

    /** mahjong_cl_player_signature_req plyGuid */
    plyGuid: (number|Long);

    /** mahjong_cl_player_signature_req signature */
    signature: string;
}

/** Represents a mahjong_cl_player_signature_req. */
export class mahjong_cl_player_signature_req implements Imahjong_cl_player_signature_req {

    /**
     * Constructs a new mahjong_cl_player_signature_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_player_signature_req);

    /** mahjong_cl_player_signature_req flag. */
    public flag: number;

    /** mahjong_cl_player_signature_req plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_cl_player_signature_req signature. */
    public signature: string;

    /**
     * Creates a new mahjong_cl_player_signature_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_player_signature_req instance
     */
    public static create(properties?: Imahjong_cl_player_signature_req): mahjong_cl_player_signature_req;

    /**
     * Encodes the specified mahjong_cl_player_signature_req message. Does not implicitly {@link mahjong_cl_player_signature_req.verify|verify} messages.
     * @param message mahjong_cl_player_signature_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_player_signature_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_player_signature_req message, length delimited. Does not implicitly {@link mahjong_cl_player_signature_req.verify|verify} messages.
     * @param message mahjong_cl_player_signature_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_player_signature_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_player_signature_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_player_signature_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_player_signature_req;

    /**
     * Decodes a mahjong_cl_player_signature_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_player_signature_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_player_signature_req;

    /**
     * Verifies a mahjong_cl_player_signature_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_player_signature_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_player_signature_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_player_signature_req;

    /**
     * Creates a plain object from a mahjong_cl_player_signature_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_player_signature_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_player_signature_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_player_signature_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_get_table_list_req2. */
export interface Imahjong_cb_get_table_list_req2 {
}

/** Represents a mahjong_cb_get_table_list_req2. */
export class mahjong_cb_get_table_list_req2 implements Imahjong_cb_get_table_list_req2 {

    /**
     * Constructs a new mahjong_cb_get_table_list_req2.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_get_table_list_req2);

    /**
     * Creates a new mahjong_cb_get_table_list_req2 instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_get_table_list_req2 instance
     */
    public static create(properties?: Imahjong_cb_get_table_list_req2): mahjong_cb_get_table_list_req2;

    /**
     * Encodes the specified mahjong_cb_get_table_list_req2 message. Does not implicitly {@link mahjong_cb_get_table_list_req2.verify|verify} messages.
     * @param message mahjong_cb_get_table_list_req2 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_get_table_list_req2, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_get_table_list_req2 message, length delimited. Does not implicitly {@link mahjong_cb_get_table_list_req2.verify|verify} messages.
     * @param message mahjong_cb_get_table_list_req2 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_get_table_list_req2, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_get_table_list_req2 message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_get_table_list_req2
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_get_table_list_req2;

    /**
     * Decodes a mahjong_cb_get_table_list_req2 message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_get_table_list_req2
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_get_table_list_req2;

    /**
     * Verifies a mahjong_cb_get_table_list_req2 message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_get_table_list_req2 message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_get_table_list_req2
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_get_table_list_req2;

    /**
     * Creates a plain object from a mahjong_cb_get_table_list_req2 message. Also converts values to other types if specified.
     * @param message mahjong_cb_get_table_list_req2
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_get_table_list_req2, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_get_table_list_req2 to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_chat_ack. */
export interface Imahjong_bc_chat_ack {

    /** mahjong_bc_chat_ack ret */
    ret: number;

    /** mahjong_bc_chat_ack num */
    num: number;

    /** mahjong_bc_chat_ack msg */
    msg: string;
}

/** Represents a mahjong_bc_chat_ack. */
export class mahjong_bc_chat_ack implements Imahjong_bc_chat_ack {

    /**
     * Constructs a new mahjong_bc_chat_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_chat_ack);

    /** mahjong_bc_chat_ack ret. */
    public ret: number;

    /** mahjong_bc_chat_ack num. */
    public num: number;

    /** mahjong_bc_chat_ack msg. */
    public msg: string;

    /**
     * Creates a new mahjong_bc_chat_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_chat_ack instance
     */
    public static create(properties?: Imahjong_bc_chat_ack): mahjong_bc_chat_ack;

    /**
     * Encodes the specified mahjong_bc_chat_ack message. Does not implicitly {@link mahjong_bc_chat_ack.verify|verify} messages.
     * @param message mahjong_bc_chat_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_chat_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_chat_ack message, length delimited. Does not implicitly {@link mahjong_bc_chat_ack.verify|verify} messages.
     * @param message mahjong_bc_chat_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_chat_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_chat_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_chat_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_chat_ack;

    /**
     * Decodes a mahjong_bc_chat_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_chat_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_chat_ack;

    /**
     * Verifies a mahjong_bc_chat_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_chat_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_chat_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_chat_ack;

    /**
     * Creates a plain object from a mahjong_bc_chat_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_chat_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_chat_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_chat_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_set_ply_city_data_req. */
export interface Imahjong_cl_set_ply_city_data_req {

    /** mahjong_cl_set_ply_city_data_req nProv */
    nProv: number;

    /** mahjong_cl_set_ply_city_data_req nCity */
    nCity: number;

    /** mahjong_cl_set_ply_city_data_req nCounty */
    nCounty: number;
}

/** Represents a mahjong_cl_set_ply_city_data_req. */
export class mahjong_cl_set_ply_city_data_req implements Imahjong_cl_set_ply_city_data_req {

    /**
     * Constructs a new mahjong_cl_set_ply_city_data_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_set_ply_city_data_req);

    /** mahjong_cl_set_ply_city_data_req nProv. */
    public nProv: number;

    /** mahjong_cl_set_ply_city_data_req nCity. */
    public nCity: number;

    /** mahjong_cl_set_ply_city_data_req nCounty. */
    public nCounty: number;

    /**
     * Creates a new mahjong_cl_set_ply_city_data_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_set_ply_city_data_req instance
     */
    public static create(properties?: Imahjong_cl_set_ply_city_data_req): mahjong_cl_set_ply_city_data_req;

    /**
     * Encodes the specified mahjong_cl_set_ply_city_data_req message. Does not implicitly {@link mahjong_cl_set_ply_city_data_req.verify|verify} messages.
     * @param message mahjong_cl_set_ply_city_data_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_set_ply_city_data_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_set_ply_city_data_req message, length delimited. Does not implicitly {@link mahjong_cl_set_ply_city_data_req.verify|verify} messages.
     * @param message mahjong_cl_set_ply_city_data_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_set_ply_city_data_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_set_ply_city_data_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_set_ply_city_data_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_set_ply_city_data_req;

    /**
     * Decodes a mahjong_cl_set_ply_city_data_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_set_ply_city_data_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_set_ply_city_data_req;

    /**
     * Verifies a mahjong_cl_set_ply_city_data_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_set_ply_city_data_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_set_ply_city_data_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_set_ply_city_data_req;

    /**
     * Creates a plain object from a mahjong_cl_set_ply_city_data_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_set_ply_city_data_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_set_ply_city_data_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_set_ply_city_data_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_get_rank_list_req. */
export interface Imahjong_cb_get_rank_list_req {

    /** mahjong_cb_get_rank_list_req type */
    type: number;
}

/** Represents a mahjong_cb_get_rank_list_req. */
export class mahjong_cb_get_rank_list_req implements Imahjong_cb_get_rank_list_req {

    /**
     * Constructs a new mahjong_cb_get_rank_list_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_get_rank_list_req);

    /** mahjong_cb_get_rank_list_req type. */
    public type: number;

    /**
     * Creates a new mahjong_cb_get_rank_list_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_get_rank_list_req instance
     */
    public static create(properties?: Imahjong_cb_get_rank_list_req): mahjong_cb_get_rank_list_req;

    /**
     * Encodes the specified mahjong_cb_get_rank_list_req message. Does not implicitly {@link mahjong_cb_get_rank_list_req.verify|verify} messages.
     * @param message mahjong_cb_get_rank_list_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_get_rank_list_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_get_rank_list_req message, length delimited. Does not implicitly {@link mahjong_cb_get_rank_list_req.verify|verify} messages.
     * @param message mahjong_cb_get_rank_list_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_get_rank_list_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_get_rank_list_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_get_rank_list_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_get_rank_list_req;

    /**
     * Decodes a mahjong_cb_get_rank_list_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_get_rank_list_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_get_rank_list_req;

    /**
     * Verifies a mahjong_cb_get_rank_list_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_get_rank_list_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_get_rank_list_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_get_rank_list_req;

    /**
     * Creates a plain object from a mahjong_cb_get_rank_list_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_get_rank_list_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_get_rank_list_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_get_rank_list_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_PlyBaseData. */
export interface Imahjong_PlyBaseData {

    /** mahjong_PlyBaseData plyGuid */
    plyGuid: (number|Long);

    /** mahjong_PlyBaseData nickname */
    nickname: string;

    /** mahjong_PlyBaseData sex */
    sex: number;

    /** mahjong_PlyBaseData gift */
    gift: number;

    /** mahjong_PlyBaseData money */
    money: (number|Long);

    /** mahjong_PlyBaseData score */
    score: number;

    /** mahjong_PlyBaseData won */
    won: number;

    /** mahjong_PlyBaseData lost */
    lost: number;

    /** mahjong_PlyBaseData dogfall */
    dogfall: number;

    /** mahjong_PlyBaseData tableId */
    tableId: number;

    /** mahjong_PlyBaseData param_1 */
    param_1: number;

    /** mahjong_PlyBaseData param_2 */
    param_2: number;

    /** mahjong_PlyBaseData chairId */
    chairId: number;

    /** mahjong_PlyBaseData ready */
    ready: number;

    /** mahjong_PlyBaseData plyVip */
    plyVip: Imahjong_VipData;
}

/** Represents a mahjong_PlyBaseData. */
export class mahjong_PlyBaseData implements Imahjong_PlyBaseData {

    /**
     * Constructs a new mahjong_PlyBaseData.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_PlyBaseData);

    /** mahjong_PlyBaseData plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_PlyBaseData nickname. */
    public nickname: string;

    /** mahjong_PlyBaseData sex. */
    public sex: number;

    /** mahjong_PlyBaseData gift. */
    public gift: number;

    /** mahjong_PlyBaseData money. */
    public money: (number|Long);

    /** mahjong_PlyBaseData score. */
    public score: number;

    /** mahjong_PlyBaseData won. */
    public won: number;

    /** mahjong_PlyBaseData lost. */
    public lost: number;

    /** mahjong_PlyBaseData dogfall. */
    public dogfall: number;

    /** mahjong_PlyBaseData tableId. */
    public tableId: number;

    /** mahjong_PlyBaseData param_1. */
    public param_1: number;

    /** mahjong_PlyBaseData param_2. */
    public param_2: number;

    /** mahjong_PlyBaseData chairId. */
    public chairId: number;

    /** mahjong_PlyBaseData ready. */
    public ready: number;

    /** mahjong_PlyBaseData plyVip. */
    public plyVip: Imahjong_VipData;

    /**
     * Creates a new mahjong_PlyBaseData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_PlyBaseData instance
     */
    public static create(properties?: Imahjong_PlyBaseData): mahjong_PlyBaseData;

    /**
     * Encodes the specified mahjong_PlyBaseData message. Does not implicitly {@link mahjong_PlyBaseData.verify|verify} messages.
     * @param message mahjong_PlyBaseData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_PlyBaseData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_PlyBaseData message, length delimited. Does not implicitly {@link mahjong_PlyBaseData.verify|verify} messages.
     * @param message mahjong_PlyBaseData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_PlyBaseData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_PlyBaseData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_PlyBaseData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_PlyBaseData;

    /**
     * Decodes a mahjong_PlyBaseData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_PlyBaseData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_PlyBaseData;

    /**
     * Verifies a mahjong_PlyBaseData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_PlyBaseData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_PlyBaseData
     */
    public static fromObject(object: { [k: string]: any }): mahjong_PlyBaseData;

    /**
     * Creates a plain object from a mahjong_PlyBaseData message. Also converts values to other types if specified.
     * @param message mahjong_PlyBaseData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_PlyBaseData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_PlyBaseData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_dynamic_award_rank_req. */
export interface Imahjong_cl_get_dynamic_award_rank_req {

    /** mahjong_cl_get_dynamic_award_rank_req matchId */
    matchId: number;
}

/** Represents a mahjong_cl_get_dynamic_award_rank_req. */
export class mahjong_cl_get_dynamic_award_rank_req implements Imahjong_cl_get_dynamic_award_rank_req {

    /**
     * Constructs a new mahjong_cl_get_dynamic_award_rank_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_dynamic_award_rank_req);

    /** mahjong_cl_get_dynamic_award_rank_req matchId. */
    public matchId: number;

    /**
     * Creates a new mahjong_cl_get_dynamic_award_rank_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_dynamic_award_rank_req instance
     */
    public static create(properties?: Imahjong_cl_get_dynamic_award_rank_req): mahjong_cl_get_dynamic_award_rank_req;

    /**
     * Encodes the specified mahjong_cl_get_dynamic_award_rank_req message. Does not implicitly {@link mahjong_cl_get_dynamic_award_rank_req.verify|verify} messages.
     * @param message mahjong_cl_get_dynamic_award_rank_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_dynamic_award_rank_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_dynamic_award_rank_req message, length delimited. Does not implicitly {@link mahjong_cl_get_dynamic_award_rank_req.verify|verify} messages.
     * @param message mahjong_cl_get_dynamic_award_rank_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_dynamic_award_rank_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_dynamic_award_rank_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_dynamic_award_rank_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_dynamic_award_rank_req;

    /**
     * Decodes a mahjong_cl_get_dynamic_award_rank_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_dynamic_award_rank_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_dynamic_award_rank_req;

    /**
     * Verifies a mahjong_cl_get_dynamic_award_rank_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_dynamic_award_rank_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_dynamic_award_rank_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_dynamic_award_rank_req;

    /**
     * Creates a plain object from a mahjong_cl_get_dynamic_award_rank_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_dynamic_award_rank_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_dynamic_award_rank_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_dynamic_award_rank_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_check_relief_status_req. */
export interface Imahjong_cl_check_relief_status_req {

    /** mahjong_cl_check_relief_status_req type */
    type: number;
}

/** Represents a mahjong_cl_check_relief_status_req. */
export class mahjong_cl_check_relief_status_req implements Imahjong_cl_check_relief_status_req {

    /**
     * Constructs a new mahjong_cl_check_relief_status_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_check_relief_status_req);

    /** mahjong_cl_check_relief_status_req type. */
    public type: number;

    /**
     * Creates a new mahjong_cl_check_relief_status_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_check_relief_status_req instance
     */
    public static create(properties?: Imahjong_cl_check_relief_status_req): mahjong_cl_check_relief_status_req;

    /**
     * Encodes the specified mahjong_cl_check_relief_status_req message. Does not implicitly {@link mahjong_cl_check_relief_status_req.verify|verify} messages.
     * @param message mahjong_cl_check_relief_status_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_check_relief_status_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_check_relief_status_req message, length delimited. Does not implicitly {@link mahjong_cl_check_relief_status_req.verify|verify} messages.
     * @param message mahjong_cl_check_relief_status_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_check_relief_status_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_check_relief_status_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_check_relief_status_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_check_relief_status_req;

    /**
     * Decodes a mahjong_cl_check_relief_status_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_check_relief_status_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_check_relief_status_req;

    /**
     * Verifies a mahjong_cl_check_relief_status_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_check_relief_status_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_check_relief_status_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_check_relief_status_req;

    /**
     * Creates a plain object from a mahjong_cl_check_relief_status_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_check_relief_status_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_check_relief_status_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_check_relief_status_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_trumpet_not. */
export interface Imahjong_lc_trumpet_not {

    /** mahjong_lc_trumpet_not plyGuid */
    plyGuid: (number|Long);

    /** mahjong_lc_trumpet_not plyNickname */
    plyNickname: string;

    /** mahjong_lc_trumpet_not message */
    message: string;

    /** mahjong_lc_trumpet_not gameId */
    gameId: number;

    /** mahjong_lc_trumpet_not gameName */
    gameName: string;

    /** mahjong_lc_trumpet_not vipLevel */
    vipLevel: number;

    /** mahjong_lc_trumpet_not userLevel */
    userLevel: number;
}

/** Represents a mahjong_lc_trumpet_not. */
export class mahjong_lc_trumpet_not implements Imahjong_lc_trumpet_not {

    /**
     * Constructs a new mahjong_lc_trumpet_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_trumpet_not);

    /** mahjong_lc_trumpet_not plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_lc_trumpet_not plyNickname. */
    public plyNickname: string;

    /** mahjong_lc_trumpet_not message. */
    public message: string;

    /** mahjong_lc_trumpet_not gameId. */
    public gameId: number;

    /** mahjong_lc_trumpet_not gameName. */
    public gameName: string;

    /** mahjong_lc_trumpet_not vipLevel. */
    public vipLevel: number;

    /** mahjong_lc_trumpet_not userLevel. */
    public userLevel: number;

    /**
     * Creates a new mahjong_lc_trumpet_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_trumpet_not instance
     */
    public static create(properties?: Imahjong_lc_trumpet_not): mahjong_lc_trumpet_not;

    /**
     * Encodes the specified mahjong_lc_trumpet_not message. Does not implicitly {@link mahjong_lc_trumpet_not.verify|verify} messages.
     * @param message mahjong_lc_trumpet_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_trumpet_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_trumpet_not message, length delimited. Does not implicitly {@link mahjong_lc_trumpet_not.verify|verify} messages.
     * @param message mahjong_lc_trumpet_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_trumpet_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_trumpet_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_trumpet_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_trumpet_not;

    /**
     * Decodes a mahjong_lc_trumpet_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_trumpet_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_trumpet_not;

    /**
     * Verifies a mahjong_lc_trumpet_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_trumpet_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_trumpet_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_trumpet_not;

    /**
     * Creates a plain object from a mahjong_lc_trumpet_not message. Also converts values to other types if specified.
     * @param message mahjong_lc_trumpet_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_trumpet_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_trumpet_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_user_signin_award_info_ack. */
export interface Imahjong_lc_get_user_signin_award_info_ack {

    /** mahjong_lc_get_user_signin_award_info_ack ret */
    ret: number;

    /** mahjong_lc_get_user_signin_award_info_ack signinAward */
    signinAward: Imahjong_SigninAward2;
}

/** Represents a mahjong_lc_get_user_signin_award_info_ack. */
export class mahjong_lc_get_user_signin_award_info_ack implements Imahjong_lc_get_user_signin_award_info_ack {

    /**
     * Constructs a new mahjong_lc_get_user_signin_award_info_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_user_signin_award_info_ack);

    /** mahjong_lc_get_user_signin_award_info_ack ret. */
    public ret: number;

    /** mahjong_lc_get_user_signin_award_info_ack signinAward. */
    public signinAward: Imahjong_SigninAward2;

    /**
     * Creates a new mahjong_lc_get_user_signin_award_info_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_user_signin_award_info_ack instance
     */
    public static create(properties?: Imahjong_lc_get_user_signin_award_info_ack): mahjong_lc_get_user_signin_award_info_ack;

    /**
     * Encodes the specified mahjong_lc_get_user_signin_award_info_ack message. Does not implicitly {@link mahjong_lc_get_user_signin_award_info_ack.verify|verify} messages.
     * @param message mahjong_lc_get_user_signin_award_info_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_user_signin_award_info_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_user_signin_award_info_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_user_signin_award_info_ack.verify|verify} messages.
     * @param message mahjong_lc_get_user_signin_award_info_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_user_signin_award_info_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_user_signin_award_info_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_user_signin_award_info_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_user_signin_award_info_ack;

    /**
     * Decodes a mahjong_lc_get_user_signin_award_info_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_user_signin_award_info_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_user_signin_award_info_ack;

    /**
     * Verifies a mahjong_lc_get_user_signin_award_info_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_user_signin_award_info_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_user_signin_award_info_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_user_signin_award_info_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_user_signin_award_info_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_user_signin_award_info_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_user_signin_award_info_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_user_signin_award_info_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_ply_status_req. */
export interface Imahjong_cl_get_ply_status_req {

    /** mahjong_cl_get_ply_status_req players */
    players?: ((number|Long)[]|null);
}

/** Represents a mahjong_cl_get_ply_status_req. */
export class mahjong_cl_get_ply_status_req implements Imahjong_cl_get_ply_status_req {

    /**
     * Constructs a new mahjong_cl_get_ply_status_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_ply_status_req);

    /** mahjong_cl_get_ply_status_req players. */
    public players: (number|Long)[];

    /**
     * Creates a new mahjong_cl_get_ply_status_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_ply_status_req instance
     */
    public static create(properties?: Imahjong_cl_get_ply_status_req): mahjong_cl_get_ply_status_req;

    /**
     * Encodes the specified mahjong_cl_get_ply_status_req message. Does not implicitly {@link mahjong_cl_get_ply_status_req.verify|verify} messages.
     * @param message mahjong_cl_get_ply_status_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_ply_status_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_ply_status_req message, length delimited. Does not implicitly {@link mahjong_cl_get_ply_status_req.verify|verify} messages.
     * @param message mahjong_cl_get_ply_status_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_ply_status_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_ply_status_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_ply_status_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_ply_status_req;

    /**
     * Decodes a mahjong_cl_get_ply_status_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_ply_status_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_ply_status_req;

    /**
     * Verifies a mahjong_cl_get_ply_status_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_ply_status_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_ply_status_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_ply_status_req;

    /**
     * Creates a plain object from a mahjong_cl_get_ply_status_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_ply_status_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_ply_status_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_ply_status_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_SigninAward2. */
export interface Imahjong_SigninAward2 {

    /** mahjong_SigninAward2 today */
    today: number;

    /** mahjong_SigninAward2 signinAward */
    signinAward?: (Imahjong_SigninAward[]|null);
}

/** Represents a mahjong_SigninAward2. */
export class mahjong_SigninAward2 implements Imahjong_SigninAward2 {

    /**
     * Constructs a new mahjong_SigninAward2.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_SigninAward2);

    /** mahjong_SigninAward2 today. */
    public today: number;

    /** mahjong_SigninAward2 signinAward. */
    public signinAward: Imahjong_SigninAward[];

    /**
     * Creates a new mahjong_SigninAward2 instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_SigninAward2 instance
     */
    public static create(properties?: Imahjong_SigninAward2): mahjong_SigninAward2;

    /**
     * Encodes the specified mahjong_SigninAward2 message. Does not implicitly {@link mahjong_SigninAward2.verify|verify} messages.
     * @param message mahjong_SigninAward2 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_SigninAward2, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_SigninAward2 message, length delimited. Does not implicitly {@link mahjong_SigninAward2.verify|verify} messages.
     * @param message mahjong_SigninAward2 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_SigninAward2, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_SigninAward2 message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_SigninAward2
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_SigninAward2;

    /**
     * Decodes a mahjong_SigninAward2 message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_SigninAward2
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_SigninAward2;

    /**
     * Verifies a mahjong_SigninAward2 message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_SigninAward2 message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_SigninAward2
     */
    public static fromObject(object: { [k: string]: any }): mahjong_SigninAward2;

    /**
     * Creates a plain object from a mahjong_SigninAward2 message. Also converts values to other types if specified.
     * @param message mahjong_SigninAward2
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_SigninAward2, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_SigninAward2 to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_Dynamic_Award. */
export interface Imahjong_Dynamic_Award {

    /** mahjong_Dynamic_Award level */
    level: number;

    /** mahjong_Dynamic_Award playerNum */
    playerNum: number;

    /** mahjong_Dynamic_Award awardIndex */
    awardIndex: number;

    /** mahjong_Dynamic_Award awardNum */
    awardNum: number;
}

/** Represents a mahjong_Dynamic_Award. */
export class mahjong_Dynamic_Award implements Imahjong_Dynamic_Award {

    /**
     * Constructs a new mahjong_Dynamic_Award.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_Dynamic_Award);

    /** mahjong_Dynamic_Award level. */
    public level: number;

    /** mahjong_Dynamic_Award playerNum. */
    public playerNum: number;

    /** mahjong_Dynamic_Award awardIndex. */
    public awardIndex: number;

    /** mahjong_Dynamic_Award awardNum. */
    public awardNum: number;

    /**
     * Creates a new mahjong_Dynamic_Award instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_Dynamic_Award instance
     */
    public static create(properties?: Imahjong_Dynamic_Award): mahjong_Dynamic_Award;

    /**
     * Encodes the specified mahjong_Dynamic_Award message. Does not implicitly {@link mahjong_Dynamic_Award.verify|verify} messages.
     * @param message mahjong_Dynamic_Award message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_Dynamic_Award, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_Dynamic_Award message, length delimited. Does not implicitly {@link mahjong_Dynamic_Award.verify|verify} messages.
     * @param message mahjong_Dynamic_Award message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_Dynamic_Award, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_Dynamic_Award message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_Dynamic_Award
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_Dynamic_Award;

    /**
     * Decodes a mahjong_Dynamic_Award message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_Dynamic_Award
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_Dynamic_Award;

    /**
     * Verifies a mahjong_Dynamic_Award message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_Dynamic_Award message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_Dynamic_Award
     */
    public static fromObject(object: { [k: string]: any }): mahjong_Dynamic_Award;

    /**
     * Creates a plain object from a mahjong_Dynamic_Award message. Also converts values to other types if specified.
     * @param message mahjong_Dynamic_Award
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_Dynamic_Award, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_Dynamic_Award to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_ply_city_data_req. */
export interface Imahjong_cl_get_ply_city_data_req {

    /** mahjong_cl_get_ply_city_data_req plyGuid */
    plyGuid: (number|Long);
}

/** Represents a mahjong_cl_get_ply_city_data_req. */
export class mahjong_cl_get_ply_city_data_req implements Imahjong_cl_get_ply_city_data_req {

    /**
     * Constructs a new mahjong_cl_get_ply_city_data_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_ply_city_data_req);

    /** mahjong_cl_get_ply_city_data_req plyGuid. */
    public plyGuid: (number|Long);

    /**
     * Creates a new mahjong_cl_get_ply_city_data_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_ply_city_data_req instance
     */
    public static create(properties?: Imahjong_cl_get_ply_city_data_req): mahjong_cl_get_ply_city_data_req;

    /**
     * Encodes the specified mahjong_cl_get_ply_city_data_req message. Does not implicitly {@link mahjong_cl_get_ply_city_data_req.verify|verify} messages.
     * @param message mahjong_cl_get_ply_city_data_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_ply_city_data_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_ply_city_data_req message, length delimited. Does not implicitly {@link mahjong_cl_get_ply_city_data_req.verify|verify} messages.
     * @param message mahjong_cl_get_ply_city_data_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_ply_city_data_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_ply_city_data_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_ply_city_data_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_ply_city_data_req;

    /**
     * Decodes a mahjong_cl_get_ply_city_data_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_ply_city_data_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_ply_city_data_req;

    /**
     * Verifies a mahjong_cl_get_ply_city_data_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_ply_city_data_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_ply_city_data_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_ply_city_data_req;

    /**
     * Creates a plain object from a mahjong_cl_get_ply_city_data_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_ply_city_data_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_ply_city_data_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_ply_city_data_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_position_info_ack. */
export interface Imahjong_lc_get_position_info_ack {

    /** mahjong_lc_get_position_info_ack plyGuid */
    plyGuid: (number|Long);

    /** mahjong_lc_get_position_info_ack dstGuid */
    dstGuid: (number|Long);

    /** mahjong_lc_get_position_info_ack latitude */
    latitude: number;

    /** mahjong_lc_get_position_info_ack longitude */
    longitude: number;
}

/** Represents a mahjong_lc_get_position_info_ack. */
export class mahjong_lc_get_position_info_ack implements Imahjong_lc_get_position_info_ack {

    /**
     * Constructs a new mahjong_lc_get_position_info_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_position_info_ack);

    /** mahjong_lc_get_position_info_ack plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_lc_get_position_info_ack dstGuid. */
    public dstGuid: (number|Long);

    /** mahjong_lc_get_position_info_ack latitude. */
    public latitude: number;

    /** mahjong_lc_get_position_info_ack longitude. */
    public longitude: number;

    /**
     * Creates a new mahjong_lc_get_position_info_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_position_info_ack instance
     */
    public static create(properties?: Imahjong_lc_get_position_info_ack): mahjong_lc_get_position_info_ack;

    /**
     * Encodes the specified mahjong_lc_get_position_info_ack message. Does not implicitly {@link mahjong_lc_get_position_info_ack.verify|verify} messages.
     * @param message mahjong_lc_get_position_info_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_position_info_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_position_info_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_position_info_ack.verify|verify} messages.
     * @param message mahjong_lc_get_position_info_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_position_info_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_position_info_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_position_info_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_position_info_ack;

    /**
     * Decodes a mahjong_lc_get_position_info_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_position_info_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_position_info_ack;

    /**
     * Verifies a mahjong_lc_get_position_info_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_position_info_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_position_info_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_position_info_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_position_info_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_position_info_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_position_info_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_position_info_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_ply_current_rank_req. */
export interface Imahjong_cl_get_ply_current_rank_req {

    /** mahjong_cl_get_ply_current_rank_req matchId */
    matchId: number;

    /** mahjong_cl_get_ply_current_rank_req matchOrderId */
    matchOrderId: number;
}

/** Represents a mahjong_cl_get_ply_current_rank_req. */
export class mahjong_cl_get_ply_current_rank_req implements Imahjong_cl_get_ply_current_rank_req {

    /**
     * Constructs a new mahjong_cl_get_ply_current_rank_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_ply_current_rank_req);

    /** mahjong_cl_get_ply_current_rank_req matchId. */
    public matchId: number;

    /** mahjong_cl_get_ply_current_rank_req matchOrderId. */
    public matchOrderId: number;

    /**
     * Creates a new mahjong_cl_get_ply_current_rank_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_ply_current_rank_req instance
     */
    public static create(properties?: Imahjong_cl_get_ply_current_rank_req): mahjong_cl_get_ply_current_rank_req;

    /**
     * Encodes the specified mahjong_cl_get_ply_current_rank_req message. Does not implicitly {@link mahjong_cl_get_ply_current_rank_req.verify|verify} messages.
     * @param message mahjong_cl_get_ply_current_rank_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_ply_current_rank_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_ply_current_rank_req message, length delimited. Does not implicitly {@link mahjong_cl_get_ply_current_rank_req.verify|verify} messages.
     * @param message mahjong_cl_get_ply_current_rank_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_ply_current_rank_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_ply_current_rank_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_ply_current_rank_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_ply_current_rank_req;

    /**
     * Decodes a mahjong_cl_get_ply_current_rank_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_ply_current_rank_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_ply_current_rank_req;

    /**
     * Verifies a mahjong_cl_get_ply_current_rank_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_ply_current_rank_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_ply_current_rank_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_ply_current_rank_req;

    /**
     * Creates a plain object from a mahjong_cl_get_ply_current_rank_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_ply_current_rank_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_ply_current_rank_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_ply_current_rank_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_rematch_notf. */
export interface Imahjong_bc_rematch_notf {

    /** mahjong_bc_rematch_notf matchId */
    matchId: number;

    /** mahjong_bc_rematch_notf matchOrderId */
    matchOrderId: number;

    /** mahjong_bc_rematch_notf param */
    param: string;

    /** mahjong_bc_rematch_notf currentScore */
    currentScore: number;

    /** mahjong_bc_rematch_notf roundIndex */
    roundIndex: number;

    /** mahjong_bc_rematch_notf totoalRound */
    totoalRound: number;
}

/** Represents a mahjong_bc_rematch_notf. */
export class mahjong_bc_rematch_notf implements Imahjong_bc_rematch_notf {

    /**
     * Constructs a new mahjong_bc_rematch_notf.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_rematch_notf);

    /** mahjong_bc_rematch_notf matchId. */
    public matchId: number;

    /** mahjong_bc_rematch_notf matchOrderId. */
    public matchOrderId: number;

    /** mahjong_bc_rematch_notf param. */
    public param: string;

    /** mahjong_bc_rematch_notf currentScore. */
    public currentScore: number;

    /** mahjong_bc_rematch_notf roundIndex. */
    public roundIndex: number;

    /** mahjong_bc_rematch_notf totoalRound. */
    public totoalRound: number;

    /**
     * Creates a new mahjong_bc_rematch_notf instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_rematch_notf instance
     */
    public static create(properties?: Imahjong_bc_rematch_notf): mahjong_bc_rematch_notf;

    /**
     * Encodes the specified mahjong_bc_rematch_notf message. Does not implicitly {@link mahjong_bc_rematch_notf.verify|verify} messages.
     * @param message mahjong_bc_rematch_notf message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_rematch_notf, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_rematch_notf message, length delimited. Does not implicitly {@link mahjong_bc_rematch_notf.verify|verify} messages.
     * @param message mahjong_bc_rematch_notf message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_rematch_notf, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_rematch_notf message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_rematch_notf
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_rematch_notf;

    /**
     * Decodes a mahjong_bc_rematch_notf message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_rematch_notf
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_rematch_notf;

    /**
     * Verifies a mahjong_bc_rematch_notf message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_rematch_notf message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_rematch_notf
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_rematch_notf;

    /**
     * Creates a plain object from a mahjong_bc_rematch_notf message. Also converts values to other types if specified.
     * @param message mahjong_bc_rematch_notf
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_rematch_notf, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_rematch_notf to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_safe_data_req. */
export interface Imahjong_cl_get_safe_data_req {

    /** mahjong_cl_get_safe_data_req plyGuid */
    plyGuid: (number|Long);
}

/** Represents a mahjong_cl_get_safe_data_req. */
export class mahjong_cl_get_safe_data_req implements Imahjong_cl_get_safe_data_req {

    /**
     * Constructs a new mahjong_cl_get_safe_data_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_safe_data_req);

    /** mahjong_cl_get_safe_data_req plyGuid. */
    public plyGuid: (number|Long);

    /**
     * Creates a new mahjong_cl_get_safe_data_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_safe_data_req instance
     */
    public static create(properties?: Imahjong_cl_get_safe_data_req): mahjong_cl_get_safe_data_req;

    /**
     * Encodes the specified mahjong_cl_get_safe_data_req message. Does not implicitly {@link mahjong_cl_get_safe_data_req.verify|verify} messages.
     * @param message mahjong_cl_get_safe_data_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_safe_data_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_safe_data_req message, length delimited. Does not implicitly {@link mahjong_cl_get_safe_data_req.verify|verify} messages.
     * @param message mahjong_cl_get_safe_data_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_safe_data_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_safe_data_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_safe_data_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_safe_data_req;

    /**
     * Decodes a mahjong_cl_get_safe_data_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_safe_data_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_safe_data_req;

    /**
     * Verifies a mahjong_cl_get_safe_data_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_safe_data_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_safe_data_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_safe_data_req;

    /**
     * Creates a plain object from a mahjong_cl_get_safe_data_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_safe_data_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_safe_data_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_safe_data_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_merged_achieve_award_req. */
export interface Imahjong_cl_get_merged_achieve_award_req {

    /** mahjong_cl_get_merged_achieve_award_req gameId */
    gameId: number;

    /** mahjong_cl_get_merged_achieve_award_req index */
    index: number;
}

/** Represents a mahjong_cl_get_merged_achieve_award_req. */
export class mahjong_cl_get_merged_achieve_award_req implements Imahjong_cl_get_merged_achieve_award_req {

    /**
     * Constructs a new mahjong_cl_get_merged_achieve_award_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_merged_achieve_award_req);

    /** mahjong_cl_get_merged_achieve_award_req gameId. */
    public gameId: number;

    /** mahjong_cl_get_merged_achieve_award_req index. */
    public index: number;

    /**
     * Creates a new mahjong_cl_get_merged_achieve_award_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_merged_achieve_award_req instance
     */
    public static create(properties?: Imahjong_cl_get_merged_achieve_award_req): mahjong_cl_get_merged_achieve_award_req;

    /**
     * Encodes the specified mahjong_cl_get_merged_achieve_award_req message. Does not implicitly {@link mahjong_cl_get_merged_achieve_award_req.verify|verify} messages.
     * @param message mahjong_cl_get_merged_achieve_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_merged_achieve_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_merged_achieve_award_req message, length delimited. Does not implicitly {@link mahjong_cl_get_merged_achieve_award_req.verify|verify} messages.
     * @param message mahjong_cl_get_merged_achieve_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_merged_achieve_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_merged_achieve_award_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_merged_achieve_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_merged_achieve_award_req;

    /**
     * Decodes a mahjong_cl_get_merged_achieve_award_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_merged_achieve_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_merged_achieve_award_req;

    /**
     * Verifies a mahjong_cl_get_merged_achieve_award_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_merged_achieve_award_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_merged_achieve_award_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_merged_achieve_award_req;

    /**
     * Creates a plain object from a mahjong_cl_get_merged_achieve_award_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_merged_achieve_award_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_merged_achieve_award_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_merged_achieve_award_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_get_luck_draw_record_req. */
export interface Imahjong_cb_get_luck_draw_record_req {
}

/** Represents a mahjong_cb_get_luck_draw_record_req. */
export class mahjong_cb_get_luck_draw_record_req implements Imahjong_cb_get_luck_draw_record_req {

    /**
     * Constructs a new mahjong_cb_get_luck_draw_record_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_get_luck_draw_record_req);

    /**
     * Creates a new mahjong_cb_get_luck_draw_record_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_get_luck_draw_record_req instance
     */
    public static create(properties?: Imahjong_cb_get_luck_draw_record_req): mahjong_cb_get_luck_draw_record_req;

    /**
     * Encodes the specified mahjong_cb_get_luck_draw_record_req message. Does not implicitly {@link mahjong_cb_get_luck_draw_record_req.verify|verify} messages.
     * @param message mahjong_cb_get_luck_draw_record_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_get_luck_draw_record_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_get_luck_draw_record_req message, length delimited. Does not implicitly {@link mahjong_cb_get_luck_draw_record_req.verify|verify} messages.
     * @param message mahjong_cb_get_luck_draw_record_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_get_luck_draw_record_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_get_luck_draw_record_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_get_luck_draw_record_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_get_luck_draw_record_req;

    /**
     * Decodes a mahjong_cb_get_luck_draw_record_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_get_luck_draw_record_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_get_luck_draw_record_req;

    /**
     * Verifies a mahjong_cb_get_luck_draw_record_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_get_luck_draw_record_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_get_luck_draw_record_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_get_luck_draw_record_req;

    /**
     * Creates a plain object from a mahjong_cb_get_luck_draw_record_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_get_luck_draw_record_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_get_luck_draw_record_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_get_luck_draw_record_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_user_accumulate_signin_award_ack. */
export interface Imahjong_lc_get_user_accumulate_signin_award_ack {

    /** mahjong_lc_get_user_accumulate_signin_award_ack ret */
    ret: number;

    /** mahjong_lc_get_user_accumulate_signin_award_ack continupusDays */
    continupusDays: number;

    /** mahjong_lc_get_user_accumulate_signin_award_ack accumulateDays */
    accumulateDays: number;
}

/** Represents a mahjong_lc_get_user_accumulate_signin_award_ack. */
export class mahjong_lc_get_user_accumulate_signin_award_ack implements Imahjong_lc_get_user_accumulate_signin_award_ack {

    /**
     * Constructs a new mahjong_lc_get_user_accumulate_signin_award_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_user_accumulate_signin_award_ack);

    /** mahjong_lc_get_user_accumulate_signin_award_ack ret. */
    public ret: number;

    /** mahjong_lc_get_user_accumulate_signin_award_ack continupusDays. */
    public continupusDays: number;

    /** mahjong_lc_get_user_accumulate_signin_award_ack accumulateDays. */
    public accumulateDays: number;

    /**
     * Creates a new mahjong_lc_get_user_accumulate_signin_award_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_user_accumulate_signin_award_ack instance
     */
    public static create(properties?: Imahjong_lc_get_user_accumulate_signin_award_ack): mahjong_lc_get_user_accumulate_signin_award_ack;

    /**
     * Encodes the specified mahjong_lc_get_user_accumulate_signin_award_ack message. Does not implicitly {@link mahjong_lc_get_user_accumulate_signin_award_ack.verify|verify} messages.
     * @param message mahjong_lc_get_user_accumulate_signin_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_user_accumulate_signin_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_user_accumulate_signin_award_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_user_accumulate_signin_award_ack.verify|verify} messages.
     * @param message mahjong_lc_get_user_accumulate_signin_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_user_accumulate_signin_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_user_accumulate_signin_award_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_user_accumulate_signin_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_user_accumulate_signin_award_ack;

    /**
     * Decodes a mahjong_lc_get_user_accumulate_signin_award_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_user_accumulate_signin_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_user_accumulate_signin_award_ack;

    /**
     * Verifies a mahjong_lc_get_user_accumulate_signin_award_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_user_accumulate_signin_award_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_user_accumulate_signin_award_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_user_accumulate_signin_award_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_user_accumulate_signin_award_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_user_accumulate_signin_award_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_user_accumulate_signin_award_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_user_accumulate_signin_award_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_below_admission_limit_tip_not. */
export interface Imahjong_bc_below_admission_limit_tip_not {

    /** mahjong_bc_below_admission_limit_tip_not type */
    type: number;

    /** mahjong_bc_below_admission_limit_tip_not money */
    money: number;

    /** mahjong_bc_below_admission_limit_tip_not message */
    message: string;
}

/** Represents a mahjong_bc_below_admission_limit_tip_not. */
export class mahjong_bc_below_admission_limit_tip_not implements Imahjong_bc_below_admission_limit_tip_not {

    /**
     * Constructs a new mahjong_bc_below_admission_limit_tip_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_below_admission_limit_tip_not);

    /** mahjong_bc_below_admission_limit_tip_not type. */
    public type: number;

    /** mahjong_bc_below_admission_limit_tip_not money. */
    public money: number;

    /** mahjong_bc_below_admission_limit_tip_not message. */
    public message: string;

    /**
     * Creates a new mahjong_bc_below_admission_limit_tip_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_below_admission_limit_tip_not instance
     */
    public static create(properties?: Imahjong_bc_below_admission_limit_tip_not): mahjong_bc_below_admission_limit_tip_not;

    /**
     * Encodes the specified mahjong_bc_below_admission_limit_tip_not message. Does not implicitly {@link mahjong_bc_below_admission_limit_tip_not.verify|verify} messages.
     * @param message mahjong_bc_below_admission_limit_tip_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_below_admission_limit_tip_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_below_admission_limit_tip_not message, length delimited. Does not implicitly {@link mahjong_bc_below_admission_limit_tip_not.verify|verify} messages.
     * @param message mahjong_bc_below_admission_limit_tip_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_below_admission_limit_tip_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_below_admission_limit_tip_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_below_admission_limit_tip_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_below_admission_limit_tip_not;

    /**
     * Decodes a mahjong_bc_below_admission_limit_tip_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_below_admission_limit_tip_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_below_admission_limit_tip_not;

    /**
     * Verifies a mahjong_bc_below_admission_limit_tip_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_below_admission_limit_tip_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_below_admission_limit_tip_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_below_admission_limit_tip_not;

    /**
     * Creates a plain object from a mahjong_bc_below_admission_limit_tip_not message. Also converts values to other types if specified.
     * @param message mahjong_bc_below_admission_limit_tip_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_below_admission_limit_tip_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_below_admission_limit_tip_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_cli_timer_not. */
export interface Imahjong_bc_cli_timer_not {

    /** mahjong_bc_cli_timer_not plyGuid */
    plyGuid: (number|Long);

    /** mahjong_bc_cli_timer_not idleTime */
    idleTime: number;
}

/** Represents a mahjong_bc_cli_timer_not. */
export class mahjong_bc_cli_timer_not implements Imahjong_bc_cli_timer_not {

    /**
     * Constructs a new mahjong_bc_cli_timer_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_cli_timer_not);

    /** mahjong_bc_cli_timer_not plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_bc_cli_timer_not idleTime. */
    public idleTime: number;

    /**
     * Creates a new mahjong_bc_cli_timer_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_cli_timer_not instance
     */
    public static create(properties?: Imahjong_bc_cli_timer_not): mahjong_bc_cli_timer_not;

    /**
     * Encodes the specified mahjong_bc_cli_timer_not message. Does not implicitly {@link mahjong_bc_cli_timer_not.verify|verify} messages.
     * @param message mahjong_bc_cli_timer_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_cli_timer_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_cli_timer_not message, length delimited. Does not implicitly {@link mahjong_bc_cli_timer_not.verify|verify} messages.
     * @param message mahjong_bc_cli_timer_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_cli_timer_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_cli_timer_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_cli_timer_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_cli_timer_not;

    /**
     * Decodes a mahjong_bc_cli_timer_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_cli_timer_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_cli_timer_not;

    /**
     * Verifies a mahjong_bc_cli_timer_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_cli_timer_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_cli_timer_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_cli_timer_not;

    /**
     * Creates a plain object from a mahjong_bc_cli_timer_not message. Also converts values to other types if specified.
     * @param message mahjong_bc_cli_timer_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_cli_timer_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_cli_timer_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_server_data_not. */
export interface Imahjong_lc_server_data_not {

    /** mahjong_lc_server_data_not serverDatas */
    serverDatas?: (Imahjong_ServerData[]|null);
}

/** Represents a mahjong_lc_server_data_not. */
export class mahjong_lc_server_data_not implements Imahjong_lc_server_data_not {

    /**
     * Constructs a new mahjong_lc_server_data_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_server_data_not);

    /** mahjong_lc_server_data_not serverDatas. */
    public serverDatas: Imahjong_ServerData[];

    /**
     * Creates a new mahjong_lc_server_data_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_server_data_not instance
     */
    public static create(properties?: Imahjong_lc_server_data_not): mahjong_lc_server_data_not;

    /**
     * Encodes the specified mahjong_lc_server_data_not message. Does not implicitly {@link mahjong_lc_server_data_not.verify|verify} messages.
     * @param message mahjong_lc_server_data_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_server_data_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_server_data_not message, length delimited. Does not implicitly {@link mahjong_lc_server_data_not.verify|verify} messages.
     * @param message mahjong_lc_server_data_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_server_data_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_server_data_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_server_data_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_server_data_not;

    /**
     * Decodes a mahjong_lc_server_data_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_server_data_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_server_data_not;

    /**
     * Verifies a mahjong_lc_server_data_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_server_data_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_server_data_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_server_data_not;

    /**
     * Creates a plain object from a mahjong_lc_server_data_not message. Also converts values to other types if specified.
     * @param message mahjong_lc_server_data_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_server_data_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_server_data_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_change_dila_ack. */
export interface Imahjong_bc_change_dila_ack {

    /** mahjong_bc_change_dila_ack ret */
    ret: number;

    /** mahjong_bc_change_dila_ack data */
    data: Imahjong_DilaData;
}

/** Represents a mahjong_bc_change_dila_ack. */
export class mahjong_bc_change_dila_ack implements Imahjong_bc_change_dila_ack {

    /**
     * Constructs a new mahjong_bc_change_dila_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_change_dila_ack);

    /** mahjong_bc_change_dila_ack ret. */
    public ret: number;

    /** mahjong_bc_change_dila_ack data. */
    public data: Imahjong_DilaData;

    /**
     * Creates a new mahjong_bc_change_dila_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_change_dila_ack instance
     */
    public static create(properties?: Imahjong_bc_change_dila_ack): mahjong_bc_change_dila_ack;

    /**
     * Encodes the specified mahjong_bc_change_dila_ack message. Does not implicitly {@link mahjong_bc_change_dila_ack.verify|verify} messages.
     * @param message mahjong_bc_change_dila_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_change_dila_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_change_dila_ack message, length delimited. Does not implicitly {@link mahjong_bc_change_dila_ack.verify|verify} messages.
     * @param message mahjong_bc_change_dila_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_change_dila_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_change_dila_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_change_dila_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_change_dila_ack;

    /**
     * Decodes a mahjong_bc_change_dila_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_change_dila_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_change_dila_ack;

    /**
     * Verifies a mahjong_bc_change_dila_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_change_dila_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_change_dila_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_change_dila_ack;

    /**
     * Creates a plain object from a mahjong_bc_change_dila_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_change_dila_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_change_dila_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_change_dila_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_unread_msg_req. */
export interface Imahjong_cl_get_unread_msg_req {

    /** mahjong_cl_get_unread_msg_req sndGuid */
    sndGuid: (number|Long);

    /** mahjong_cl_get_unread_msg_req timestamp */
    timestamp: number;
}

/** Represents a mahjong_cl_get_unread_msg_req. */
export class mahjong_cl_get_unread_msg_req implements Imahjong_cl_get_unread_msg_req {

    /**
     * Constructs a new mahjong_cl_get_unread_msg_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_unread_msg_req);

    /** mahjong_cl_get_unread_msg_req sndGuid. */
    public sndGuid: (number|Long);

    /** mahjong_cl_get_unread_msg_req timestamp. */
    public timestamp: number;

    /**
     * Creates a new mahjong_cl_get_unread_msg_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_unread_msg_req instance
     */
    public static create(properties?: Imahjong_cl_get_unread_msg_req): mahjong_cl_get_unread_msg_req;

    /**
     * Encodes the specified mahjong_cl_get_unread_msg_req message. Does not implicitly {@link mahjong_cl_get_unread_msg_req.verify|verify} messages.
     * @param message mahjong_cl_get_unread_msg_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_unread_msg_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_unread_msg_req message, length delimited. Does not implicitly {@link mahjong_cl_get_unread_msg_req.verify|verify} messages.
     * @param message mahjong_cl_get_unread_msg_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_unread_msg_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_unread_msg_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_unread_msg_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_unread_msg_req;

    /**
     * Decodes a mahjong_cl_get_unread_msg_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_unread_msg_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_unread_msg_req;

    /**
     * Verifies a mahjong_cl_get_unread_msg_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_unread_msg_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_unread_msg_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_unread_msg_req;

    /**
     * Creates a plain object from a mahjong_cl_get_unread_msg_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_unread_msg_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_unread_msg_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_unread_msg_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_change_dila_req. */
export interface Imahjong_cb_change_dila_req {

    /** mahjong_cb_change_dila_req dilaId */
    dilaId: number;
}

/** Represents a mahjong_cb_change_dila_req. */
export class mahjong_cb_change_dila_req implements Imahjong_cb_change_dila_req {

    /**
     * Constructs a new mahjong_cb_change_dila_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_change_dila_req);

    /** mahjong_cb_change_dila_req dilaId. */
    public dilaId: number;

    /**
     * Creates a new mahjong_cb_change_dila_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_change_dila_req instance
     */
    public static create(properties?: Imahjong_cb_change_dila_req): mahjong_cb_change_dila_req;

    /**
     * Encodes the specified mahjong_cb_change_dila_req message. Does not implicitly {@link mahjong_cb_change_dila_req.verify|verify} messages.
     * @param message mahjong_cb_change_dila_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_change_dila_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_change_dila_req message, length delimited. Does not implicitly {@link mahjong_cb_change_dila_req.verify|verify} messages.
     * @param message mahjong_cb_change_dila_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_change_dila_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_change_dila_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_change_dila_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_change_dila_req;

    /**
     * Decodes a mahjong_cb_change_dila_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_change_dila_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_change_dila_req;

    /**
     * Verifies a mahjong_cb_change_dila_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_change_dila_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_change_dila_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_change_dila_req;

    /**
     * Creates a plain object from a mahjong_cb_change_dila_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_change_dila_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_change_dila_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_change_dila_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_login_online_data_not. */
export interface Imahjong_lc_login_online_data_not {

    /** mahjong_lc_login_online_data_not plyGuid */
    plyGuid: (number|Long);

    /** mahjong_lc_login_online_data_not seconds */
    seconds: number;

    /** mahjong_lc_login_online_data_not isBinding */
    isBinding: number;

    /** mahjong_lc_login_online_data_not isModal */
    isModal: number;

    /** mahjong_lc_login_online_data_not message */
    message: string;
}

/** Represents a mahjong_lc_login_online_data_not. */
export class mahjong_lc_login_online_data_not implements Imahjong_lc_login_online_data_not {

    /**
     * Constructs a new mahjong_lc_login_online_data_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_login_online_data_not);

    /** mahjong_lc_login_online_data_not plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_lc_login_online_data_not seconds. */
    public seconds: number;

    /** mahjong_lc_login_online_data_not isBinding. */
    public isBinding: number;

    /** mahjong_lc_login_online_data_not isModal. */
    public isModal: number;

    /** mahjong_lc_login_online_data_not message. */
    public message: string;

    /**
     * Creates a new mahjong_lc_login_online_data_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_login_online_data_not instance
     */
    public static create(properties?: Imahjong_lc_login_online_data_not): mahjong_lc_login_online_data_not;

    /**
     * Encodes the specified mahjong_lc_login_online_data_not message. Does not implicitly {@link mahjong_lc_login_online_data_not.verify|verify} messages.
     * @param message mahjong_lc_login_online_data_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_login_online_data_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_login_online_data_not message, length delimited. Does not implicitly {@link mahjong_lc_login_online_data_not.verify|verify} messages.
     * @param message mahjong_lc_login_online_data_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_login_online_data_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_login_online_data_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_login_online_data_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_login_online_data_not;

    /**
     * Decodes a mahjong_lc_login_online_data_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_login_online_data_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_login_online_data_not;

    /**
     * Verifies a mahjong_lc_login_online_data_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_login_online_data_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_login_online_data_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_login_online_data_not;

    /**
     * Creates a plain object from a mahjong_lc_login_online_data_not message. Also converts values to other types if specified.
     * @param message mahjong_lc_login_online_data_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_login_online_data_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_login_online_data_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_modify_password_safe_ack. */
export interface Imahjong_lc_modify_password_safe_ack {

    /** mahjong_lc_modify_password_safe_ack ret */
    ret: number;

    /** mahjong_lc_modify_password_safe_ack plyGuid */
    plyGuid: (number|Long);
}

/** Represents a mahjong_lc_modify_password_safe_ack. */
export class mahjong_lc_modify_password_safe_ack implements Imahjong_lc_modify_password_safe_ack {

    /**
     * Constructs a new mahjong_lc_modify_password_safe_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_modify_password_safe_ack);

    /** mahjong_lc_modify_password_safe_ack ret. */
    public ret: number;

    /** mahjong_lc_modify_password_safe_ack plyGuid. */
    public plyGuid: (number|Long);

    /**
     * Creates a new mahjong_lc_modify_password_safe_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_modify_password_safe_ack instance
     */
    public static create(properties?: Imahjong_lc_modify_password_safe_ack): mahjong_lc_modify_password_safe_ack;

    /**
     * Encodes the specified mahjong_lc_modify_password_safe_ack message. Does not implicitly {@link mahjong_lc_modify_password_safe_ack.verify|verify} messages.
     * @param message mahjong_lc_modify_password_safe_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_modify_password_safe_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_modify_password_safe_ack message, length delimited. Does not implicitly {@link mahjong_lc_modify_password_safe_ack.verify|verify} messages.
     * @param message mahjong_lc_modify_password_safe_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_modify_password_safe_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_modify_password_safe_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_modify_password_safe_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_modify_password_safe_ack;

    /**
     * Decodes a mahjong_lc_modify_password_safe_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_modify_password_safe_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_modify_password_safe_ack;

    /**
     * Verifies a mahjong_lc_modify_password_safe_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_modify_password_safe_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_modify_password_safe_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_modify_password_safe_ack;

    /**
     * Creates a plain object from a mahjong_lc_modify_password_safe_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_modify_password_safe_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_modify_password_safe_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_modify_password_safe_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_cur_table_round_notf. */
export interface Imahjong_bc_cur_table_round_notf {

    /** mahjong_bc_cur_table_round_notf curTableRound */
    curTableRound: number;

    /** mahjong_bc_cur_table_round_notf totoalTableRound */
    totoalTableRound: number;

    /** mahjong_bc_cur_table_round_notf param1 */
    param1: number;

    /** mahjong_bc_cur_table_round_notf param2 */
    param2: number;

    /** mahjong_bc_cur_table_round_notf paramStr */
    paramStr: string;
}

/** Represents a mahjong_bc_cur_table_round_notf. */
export class mahjong_bc_cur_table_round_notf implements Imahjong_bc_cur_table_round_notf {

    /**
     * Constructs a new mahjong_bc_cur_table_round_notf.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_cur_table_round_notf);

    /** mahjong_bc_cur_table_round_notf curTableRound. */
    public curTableRound: number;

    /** mahjong_bc_cur_table_round_notf totoalTableRound. */
    public totoalTableRound: number;

    /** mahjong_bc_cur_table_round_notf param1. */
    public param1: number;

    /** mahjong_bc_cur_table_round_notf param2. */
    public param2: number;

    /** mahjong_bc_cur_table_round_notf paramStr. */
    public paramStr: string;

    /**
     * Creates a new mahjong_bc_cur_table_round_notf instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_cur_table_round_notf instance
     */
    public static create(properties?: Imahjong_bc_cur_table_round_notf): mahjong_bc_cur_table_round_notf;

    /**
     * Encodes the specified mahjong_bc_cur_table_round_notf message. Does not implicitly {@link mahjong_bc_cur_table_round_notf.verify|verify} messages.
     * @param message mahjong_bc_cur_table_round_notf message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_cur_table_round_notf, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_cur_table_round_notf message, length delimited. Does not implicitly {@link mahjong_bc_cur_table_round_notf.verify|verify} messages.
     * @param message mahjong_bc_cur_table_round_notf message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_cur_table_round_notf, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_cur_table_round_notf message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_cur_table_round_notf
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_cur_table_round_notf;

    /**
     * Decodes a mahjong_bc_cur_table_round_notf message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_cur_table_round_notf
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_cur_table_round_notf;

    /**
     * Verifies a mahjong_bc_cur_table_round_notf message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_cur_table_round_notf message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_cur_table_round_notf
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_cur_table_round_notf;

    /**
     * Creates a plain object from a mahjong_bc_cur_table_round_notf message. Also converts values to other types if specified.
     * @param message mahjong_bc_cur_table_round_notf
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_cur_table_round_notf, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_cur_table_round_notf to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_turntable_login_award_config_ack. */
export interface Imahjong_lc_get_turntable_login_award_config_ack {

    /** mahjong_lc_get_turntable_login_award_config_ack ret */
    ret: number;

    /** mahjong_lc_get_turntable_login_award_config_ack allItems */
    allItems?: (Imahjong_ItemData[]|null);

    /** mahjong_lc_get_turntable_login_award_config_ack resultIndex */
    resultIndex: number;
}

/** Represents a mahjong_lc_get_turntable_login_award_config_ack. */
export class mahjong_lc_get_turntable_login_award_config_ack implements Imahjong_lc_get_turntable_login_award_config_ack {

    /**
     * Constructs a new mahjong_lc_get_turntable_login_award_config_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_turntable_login_award_config_ack);

    /** mahjong_lc_get_turntable_login_award_config_ack ret. */
    public ret: number;

    /** mahjong_lc_get_turntable_login_award_config_ack allItems. */
    public allItems: Imahjong_ItemData[];

    /** mahjong_lc_get_turntable_login_award_config_ack resultIndex. */
    public resultIndex: number;

    /**
     * Creates a new mahjong_lc_get_turntable_login_award_config_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_turntable_login_award_config_ack instance
     */
    public static create(properties?: Imahjong_lc_get_turntable_login_award_config_ack): mahjong_lc_get_turntable_login_award_config_ack;

    /**
     * Encodes the specified mahjong_lc_get_turntable_login_award_config_ack message. Does not implicitly {@link mahjong_lc_get_turntable_login_award_config_ack.verify|verify} messages.
     * @param message mahjong_lc_get_turntable_login_award_config_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_turntable_login_award_config_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_turntable_login_award_config_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_turntable_login_award_config_ack.verify|verify} messages.
     * @param message mahjong_lc_get_turntable_login_award_config_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_turntable_login_award_config_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_turntable_login_award_config_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_turntable_login_award_config_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_turntable_login_award_config_ack;

    /**
     * Decodes a mahjong_lc_get_turntable_login_award_config_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_turntable_login_award_config_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_turntable_login_award_config_ack;

    /**
     * Verifies a mahjong_lc_get_turntable_login_award_config_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_turntable_login_award_config_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_turntable_login_award_config_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_turntable_login_award_config_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_turntable_login_award_config_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_turntable_login_award_config_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_turntable_login_award_config_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_turntable_login_award_config_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_op_friend_ack. */
export interface Imahjong_lc_op_friend_ack {

    /** mahjong_lc_op_friend_ack ret */
    ret: number;

    /** mahjong_lc_op_friend_ack opcode */
    opcode: number;

    /** mahjong_lc_op_friend_ack plyGuid */
    plyGuid: (number|Long);
}

/** Represents a mahjong_lc_op_friend_ack. */
export class mahjong_lc_op_friend_ack implements Imahjong_lc_op_friend_ack {

    /**
     * Constructs a new mahjong_lc_op_friend_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_op_friend_ack);

    /** mahjong_lc_op_friend_ack ret. */
    public ret: number;

    /** mahjong_lc_op_friend_ack opcode. */
    public opcode: number;

    /** mahjong_lc_op_friend_ack plyGuid. */
    public plyGuid: (number|Long);

    /**
     * Creates a new mahjong_lc_op_friend_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_op_friend_ack instance
     */
    public static create(properties?: Imahjong_lc_op_friend_ack): mahjong_lc_op_friend_ack;

    /**
     * Encodes the specified mahjong_lc_op_friend_ack message. Does not implicitly {@link mahjong_lc_op_friend_ack.verify|verify} messages.
     * @param message mahjong_lc_op_friend_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_op_friend_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_op_friend_ack message, length delimited. Does not implicitly {@link mahjong_lc_op_friend_ack.verify|verify} messages.
     * @param message mahjong_lc_op_friend_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_op_friend_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_op_friend_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_op_friend_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_op_friend_ack;

    /**
     * Decodes a mahjong_lc_op_friend_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_op_friend_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_op_friend_ack;

    /**
     * Verifies a mahjong_lc_op_friend_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_op_friend_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_op_friend_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_op_friend_ack;

    /**
     * Creates a plain object from a mahjong_lc_op_friend_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_op_friend_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_op_friend_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_op_friend_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_zzyk_status_req. */
export interface Imahjong_cl_get_zzyk_status_req {

    /** mahjong_cl_get_zzyk_status_req flag */
    flag: number;
}

/** Represents a mahjong_cl_get_zzyk_status_req. */
export class mahjong_cl_get_zzyk_status_req implements Imahjong_cl_get_zzyk_status_req {

    /**
     * Constructs a new mahjong_cl_get_zzyk_status_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_zzyk_status_req);

    /** mahjong_cl_get_zzyk_status_req flag. */
    public flag: number;

    /**
     * Creates a new mahjong_cl_get_zzyk_status_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_zzyk_status_req instance
     */
    public static create(properties?: Imahjong_cl_get_zzyk_status_req): mahjong_cl_get_zzyk_status_req;

    /**
     * Encodes the specified mahjong_cl_get_zzyk_status_req message. Does not implicitly {@link mahjong_cl_get_zzyk_status_req.verify|verify} messages.
     * @param message mahjong_cl_get_zzyk_status_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_zzyk_status_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_zzyk_status_req message, length delimited. Does not implicitly {@link mahjong_cl_get_zzyk_status_req.verify|verify} messages.
     * @param message mahjong_cl_get_zzyk_status_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_zzyk_status_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_zzyk_status_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_zzyk_status_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_zzyk_status_req;

    /**
     * Decodes a mahjong_cl_get_zzyk_status_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_zzyk_status_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_zzyk_status_req;

    /**
     * Verifies a mahjong_cl_get_zzyk_status_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_zzyk_status_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_zzyk_status_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_zzyk_status_req;

    /**
     * Creates a plain object from a mahjong_cl_get_zzyk_status_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_zzyk_status_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_zzyk_status_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_zzyk_status_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_integal_condition_noti. */
export interface Imahjong_lc_integal_condition_noti {

    /** mahjong_lc_integal_condition_noti type */
    type: number;

    /** mahjong_lc_integal_condition_noti ruleId */
    ruleId: number;

    /** mahjong_lc_integal_condition_noti ruleIdAndroid */
    ruleIdAndroid: number;

    /** mahjong_lc_integal_condition_noti ruleDesc */
    ruleDesc: string;
}

/** Represents a mahjong_lc_integal_condition_noti. */
export class mahjong_lc_integal_condition_noti implements Imahjong_lc_integal_condition_noti {

    /**
     * Constructs a new mahjong_lc_integal_condition_noti.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_integal_condition_noti);

    /** mahjong_lc_integal_condition_noti type. */
    public type: number;

    /** mahjong_lc_integal_condition_noti ruleId. */
    public ruleId: number;

    /** mahjong_lc_integal_condition_noti ruleIdAndroid. */
    public ruleIdAndroid: number;

    /** mahjong_lc_integal_condition_noti ruleDesc. */
    public ruleDesc: string;

    /**
     * Creates a new mahjong_lc_integal_condition_noti instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_integal_condition_noti instance
     */
    public static create(properties?: Imahjong_lc_integal_condition_noti): mahjong_lc_integal_condition_noti;

    /**
     * Encodes the specified mahjong_lc_integal_condition_noti message. Does not implicitly {@link mahjong_lc_integal_condition_noti.verify|verify} messages.
     * @param message mahjong_lc_integal_condition_noti message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_integal_condition_noti, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_integal_condition_noti message, length delimited. Does not implicitly {@link mahjong_lc_integal_condition_noti.verify|verify} messages.
     * @param message mahjong_lc_integal_condition_noti message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_integal_condition_noti, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_integal_condition_noti message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_integal_condition_noti
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_integal_condition_noti;

    /**
     * Decodes a mahjong_lc_integal_condition_noti message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_integal_condition_noti
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_integal_condition_noti;

    /**
     * Verifies a mahjong_lc_integal_condition_noti message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_integal_condition_noti message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_integal_condition_noti
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_integal_condition_noti;

    /**
     * Creates a plain object from a mahjong_lc_integal_condition_noti message. Also converts values to other types if specified.
     * @param message mahjong_lc_integal_condition_noti
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_integal_condition_noti, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_integal_condition_noti to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_mail_info_req. */
export interface Imahjong_cl_get_mail_info_req {

    /** mahjong_cl_get_mail_info_req plyId */
    plyId: (number|Long);

    /** mahjong_cl_get_mail_info_req gameId */
    gameId: number;
}

/** Represents a mahjong_cl_get_mail_info_req. */
export class mahjong_cl_get_mail_info_req implements Imahjong_cl_get_mail_info_req {

    /**
     * Constructs a new mahjong_cl_get_mail_info_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_mail_info_req);

    /** mahjong_cl_get_mail_info_req plyId. */
    public plyId: (number|Long);

    /** mahjong_cl_get_mail_info_req gameId. */
    public gameId: number;

    /**
     * Creates a new mahjong_cl_get_mail_info_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_mail_info_req instance
     */
    public static create(properties?: Imahjong_cl_get_mail_info_req): mahjong_cl_get_mail_info_req;

    /**
     * Encodes the specified mahjong_cl_get_mail_info_req message. Does not implicitly {@link mahjong_cl_get_mail_info_req.verify|verify} messages.
     * @param message mahjong_cl_get_mail_info_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_mail_info_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_mail_info_req message, length delimited. Does not implicitly {@link mahjong_cl_get_mail_info_req.verify|verify} messages.
     * @param message mahjong_cl_get_mail_info_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_mail_info_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_mail_info_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_mail_info_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_mail_info_req;

    /**
     * Decodes a mahjong_cl_get_mail_info_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_mail_info_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_mail_info_req;

    /**
     * Verifies a mahjong_cl_get_mail_info_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_mail_info_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_mail_info_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_mail_info_req;

    /**
     * Creates a plain object from a mahjong_cl_get_mail_info_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_mail_info_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_mail_info_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_mail_info_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_win_round_score_ack. */
export interface Imahjong_lc_get_win_round_score_ack {

    /** mahjong_lc_get_win_round_score_ack ret */
    ret: number;

    /** mahjong_lc_get_win_round_score_ack plyGuid */
    plyGuid: (number|Long);

    /** mahjong_lc_get_win_round_score_ack num */
    num: number;

    /** mahjong_lc_get_win_round_score_ack score */
    score: (number|Long);

    /** mahjong_lc_get_win_round_score_ack maxNum */
    maxNum: number;

    /** mahjong_lc_get_win_round_score_ack maxScore */
    maxScore: (number|Long);
}

/** Represents a mahjong_lc_get_win_round_score_ack. */
export class mahjong_lc_get_win_round_score_ack implements Imahjong_lc_get_win_round_score_ack {

    /**
     * Constructs a new mahjong_lc_get_win_round_score_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_win_round_score_ack);

    /** mahjong_lc_get_win_round_score_ack ret. */
    public ret: number;

    /** mahjong_lc_get_win_round_score_ack plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_lc_get_win_round_score_ack num. */
    public num: number;

    /** mahjong_lc_get_win_round_score_ack score. */
    public score: (number|Long);

    /** mahjong_lc_get_win_round_score_ack maxNum. */
    public maxNum: number;

    /** mahjong_lc_get_win_round_score_ack maxScore. */
    public maxScore: (number|Long);

    /**
     * Creates a new mahjong_lc_get_win_round_score_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_win_round_score_ack instance
     */
    public static create(properties?: Imahjong_lc_get_win_round_score_ack): mahjong_lc_get_win_round_score_ack;

    /**
     * Encodes the specified mahjong_lc_get_win_round_score_ack message. Does not implicitly {@link mahjong_lc_get_win_round_score_ack.verify|verify} messages.
     * @param message mahjong_lc_get_win_round_score_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_win_round_score_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_win_round_score_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_win_round_score_ack.verify|verify} messages.
     * @param message mahjong_lc_get_win_round_score_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_win_round_score_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_win_round_score_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_win_round_score_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_win_round_score_ack;

    /**
     * Decodes a mahjong_lc_get_win_round_score_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_win_round_score_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_win_round_score_ack;

    /**
     * Verifies a mahjong_lc_get_win_round_score_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_win_round_score_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_win_round_score_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_win_round_score_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_win_round_score_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_win_round_score_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_win_round_score_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_win_round_score_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_server_status_ack. */
export interface Imahjong_lc_get_server_status_ack {

    /** mahjong_lc_get_server_status_ack ret */
    ret: number;

    /** mahjong_lc_get_server_status_ack serverStatus */
    serverStatus?: (Imahjong_ServerData2[]|null);
}

/** Represents a mahjong_lc_get_server_status_ack. */
export class mahjong_lc_get_server_status_ack implements Imahjong_lc_get_server_status_ack {

    /**
     * Constructs a new mahjong_lc_get_server_status_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_server_status_ack);

    /** mahjong_lc_get_server_status_ack ret. */
    public ret: number;

    /** mahjong_lc_get_server_status_ack serverStatus. */
    public serverStatus: Imahjong_ServerData2[];

    /**
     * Creates a new mahjong_lc_get_server_status_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_server_status_ack instance
     */
    public static create(properties?: Imahjong_lc_get_server_status_ack): mahjong_lc_get_server_status_ack;

    /**
     * Encodes the specified mahjong_lc_get_server_status_ack message. Does not implicitly {@link mahjong_lc_get_server_status_ack.verify|verify} messages.
     * @param message mahjong_lc_get_server_status_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_server_status_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_server_status_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_server_status_ack.verify|verify} messages.
     * @param message mahjong_lc_get_server_status_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_server_status_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_server_status_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_server_status_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_server_status_ack;

    /**
     * Decodes a mahjong_lc_get_server_status_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_server_status_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_server_status_ack;

    /**
     * Verifies a mahjong_lc_get_server_status_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_server_status_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_server_status_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_server_status_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_server_status_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_server_status_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_server_status_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_server_status_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_ClubGroupMsg. */
export interface Imahjong_ClubGroupMsg {

    /** mahjong_ClubGroupMsg clubId */
    clubId: number;

    /** mahjong_ClubGroupMsg groupList */
    groupList?: (Imahjong_ClubGroupMemMsg[]|null);
}

/** Represents a mahjong_ClubGroupMsg. */
export class mahjong_ClubGroupMsg implements Imahjong_ClubGroupMsg {

    /**
     * Constructs a new mahjong_ClubGroupMsg.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_ClubGroupMsg);

    /** mahjong_ClubGroupMsg clubId. */
    public clubId: number;

    /** mahjong_ClubGroupMsg groupList. */
    public groupList: Imahjong_ClubGroupMemMsg[];

    /**
     * Creates a new mahjong_ClubGroupMsg instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_ClubGroupMsg instance
     */
    public static create(properties?: Imahjong_ClubGroupMsg): mahjong_ClubGroupMsg;

    /**
     * Encodes the specified mahjong_ClubGroupMsg message. Does not implicitly {@link mahjong_ClubGroupMsg.verify|verify} messages.
     * @param message mahjong_ClubGroupMsg message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_ClubGroupMsg, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_ClubGroupMsg message, length delimited. Does not implicitly {@link mahjong_ClubGroupMsg.verify|verify} messages.
     * @param message mahjong_ClubGroupMsg message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_ClubGroupMsg, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_ClubGroupMsg message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_ClubGroupMsg
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_ClubGroupMsg;

    /**
     * Decodes a mahjong_ClubGroupMsg message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_ClubGroupMsg
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_ClubGroupMsg;

    /**
     * Verifies a mahjong_ClubGroupMsg message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_ClubGroupMsg message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_ClubGroupMsg
     */
    public static fromObject(object: { [k: string]: any }): mahjong_ClubGroupMsg;

    /**
     * Creates a plain object from a mahjong_ClubGroupMsg message. Also converts values to other types if specified.
     * @param message mahjong_ClubGroupMsg
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_ClubGroupMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_ClubGroupMsg to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_update_achieve_award_not. */
export interface Imahjong_lc_update_achieve_award_not {

    /** mahjong_lc_update_achieve_award_not index */
    index: number;

    /** mahjong_lc_update_achieve_award_not name */
    name: string;

    /** mahjong_lc_update_achieve_award_not desc */
    desc: string;
}

/** Represents a mahjong_lc_update_achieve_award_not. */
export class mahjong_lc_update_achieve_award_not implements Imahjong_lc_update_achieve_award_not {

    /**
     * Constructs a new mahjong_lc_update_achieve_award_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_update_achieve_award_not);

    /** mahjong_lc_update_achieve_award_not index. */
    public index: number;

    /** mahjong_lc_update_achieve_award_not name. */
    public name: string;

    /** mahjong_lc_update_achieve_award_not desc. */
    public desc: string;

    /**
     * Creates a new mahjong_lc_update_achieve_award_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_update_achieve_award_not instance
     */
    public static create(properties?: Imahjong_lc_update_achieve_award_not): mahjong_lc_update_achieve_award_not;

    /**
     * Encodes the specified mahjong_lc_update_achieve_award_not message. Does not implicitly {@link mahjong_lc_update_achieve_award_not.verify|verify} messages.
     * @param message mahjong_lc_update_achieve_award_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_update_achieve_award_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_update_achieve_award_not message, length delimited. Does not implicitly {@link mahjong_lc_update_achieve_award_not.verify|verify} messages.
     * @param message mahjong_lc_update_achieve_award_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_update_achieve_award_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_update_achieve_award_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_update_achieve_award_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_update_achieve_award_not;

    /**
     * Decodes a mahjong_lc_update_achieve_award_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_update_achieve_award_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_update_achieve_award_not;

    /**
     * Verifies a mahjong_lc_update_achieve_award_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_update_achieve_award_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_update_achieve_award_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_update_achieve_award_not;

    /**
     * Creates a plain object from a mahjong_lc_update_achieve_award_not message. Also converts values to other types if specified.
     * @param message mahjong_lc_update_achieve_award_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_update_achieve_award_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_update_achieve_award_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_get_mahjong_quick_daily_task_award_ack. */
export interface Imahjong_bc_get_mahjong_quick_daily_task_award_ack {

    /** mahjong_bc_get_mahjong_quick_daily_task_award_ack ret */
    ret: number;

    /** mahjong_bc_get_mahjong_quick_daily_task_award_ack money */
    money: number;

    /** mahjong_bc_get_mahjong_quick_daily_task_award_ack gift */
    gift: number;

    /** mahjong_bc_get_mahjong_quick_daily_task_award_ack award_0 */
    award_0: number;

    /** mahjong_bc_get_mahjong_quick_daily_task_award_ack award_1 */
    award_1: number;

    /** mahjong_bc_get_mahjong_quick_daily_task_award_ack award_2 */
    award_2: number;

    /** mahjong_bc_get_mahjong_quick_daily_task_award_ack award_3 */
    award_3: number;

    /** mahjong_bc_get_mahjong_quick_daily_task_award_ack award_4 */
    award_4: number;
}

/** Represents a mahjong_bc_get_mahjong_quick_daily_task_award_ack. */
export class mahjong_bc_get_mahjong_quick_daily_task_award_ack implements Imahjong_bc_get_mahjong_quick_daily_task_award_ack {

    /**
     * Constructs a new mahjong_bc_get_mahjong_quick_daily_task_award_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_get_mahjong_quick_daily_task_award_ack);

    /** mahjong_bc_get_mahjong_quick_daily_task_award_ack ret. */
    public ret: number;

    /** mahjong_bc_get_mahjong_quick_daily_task_award_ack money. */
    public money: number;

    /** mahjong_bc_get_mahjong_quick_daily_task_award_ack gift. */
    public gift: number;

    /** mahjong_bc_get_mahjong_quick_daily_task_award_ack award_0. */
    public award_0: number;

    /** mahjong_bc_get_mahjong_quick_daily_task_award_ack award_1. */
    public award_1: number;

    /** mahjong_bc_get_mahjong_quick_daily_task_award_ack award_2. */
    public award_2: number;

    /** mahjong_bc_get_mahjong_quick_daily_task_award_ack award_3. */
    public award_3: number;

    /** mahjong_bc_get_mahjong_quick_daily_task_award_ack award_4. */
    public award_4: number;

    /**
     * Creates a new mahjong_bc_get_mahjong_quick_daily_task_award_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_get_mahjong_quick_daily_task_award_ack instance
     */
    public static create(properties?: Imahjong_bc_get_mahjong_quick_daily_task_award_ack): mahjong_bc_get_mahjong_quick_daily_task_award_ack;

    /**
     * Encodes the specified mahjong_bc_get_mahjong_quick_daily_task_award_ack message. Does not implicitly {@link mahjong_bc_get_mahjong_quick_daily_task_award_ack.verify|verify} messages.
     * @param message mahjong_bc_get_mahjong_quick_daily_task_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_get_mahjong_quick_daily_task_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_get_mahjong_quick_daily_task_award_ack message, length delimited. Does not implicitly {@link mahjong_bc_get_mahjong_quick_daily_task_award_ack.verify|verify} messages.
     * @param message mahjong_bc_get_mahjong_quick_daily_task_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_get_mahjong_quick_daily_task_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_get_mahjong_quick_daily_task_award_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_get_mahjong_quick_daily_task_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_get_mahjong_quick_daily_task_award_ack;

    /**
     * Decodes a mahjong_bc_get_mahjong_quick_daily_task_award_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_get_mahjong_quick_daily_task_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_get_mahjong_quick_daily_task_award_ack;

    /**
     * Verifies a mahjong_bc_get_mahjong_quick_daily_task_award_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_get_mahjong_quick_daily_task_award_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_get_mahjong_quick_daily_task_award_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_get_mahjong_quick_daily_task_award_ack;

    /**
     * Creates a plain object from a mahjong_bc_get_mahjong_quick_daily_task_award_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_get_mahjong_quick_daily_task_award_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_get_mahjong_quick_daily_task_award_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_get_mahjong_quick_daily_task_award_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_RoundAwardData. */
export interface Imahjong_RoundAwardData {

    /** mahjong_RoundAwardData taskType */
    taskType: number;

    /** mahjong_RoundAwardData taskIndex */
    taskIndex: number;

    /** mahjong_RoundAwardData awardRound */
    awardRound: number;

    /** mahjong_RoundAwardData awardName */
    awardName: string;

    /** mahjong_RoundAwardData items */
    items?: (Imahjong_ItemAwardData[]|null);
}

/** Represents a mahjong_RoundAwardData. */
export class mahjong_RoundAwardData implements Imahjong_RoundAwardData {

    /**
     * Constructs a new mahjong_RoundAwardData.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_RoundAwardData);

    /** mahjong_RoundAwardData taskType. */
    public taskType: number;

    /** mahjong_RoundAwardData taskIndex. */
    public taskIndex: number;

    /** mahjong_RoundAwardData awardRound. */
    public awardRound: number;

    /** mahjong_RoundAwardData awardName. */
    public awardName: string;

    /** mahjong_RoundAwardData items. */
    public items: Imahjong_ItemAwardData[];

    /**
     * Creates a new mahjong_RoundAwardData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_RoundAwardData instance
     */
    public static create(properties?: Imahjong_RoundAwardData): mahjong_RoundAwardData;

    /**
     * Encodes the specified mahjong_RoundAwardData message. Does not implicitly {@link mahjong_RoundAwardData.verify|verify} messages.
     * @param message mahjong_RoundAwardData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_RoundAwardData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_RoundAwardData message, length delimited. Does not implicitly {@link mahjong_RoundAwardData.verify|verify} messages.
     * @param message mahjong_RoundAwardData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_RoundAwardData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_RoundAwardData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_RoundAwardData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_RoundAwardData;

    /**
     * Decodes a mahjong_RoundAwardData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_RoundAwardData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_RoundAwardData;

    /**
     * Verifies a mahjong_RoundAwardData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_RoundAwardData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_RoundAwardData
     */
    public static fromObject(object: { [k: string]: any }): mahjong_RoundAwardData;

    /**
     * Creates a plain object from a mahjong_RoundAwardData message. Also converts values to other types if specified.
     * @param message mahjong_RoundAwardData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_RoundAwardData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_RoundAwardData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_give_gift_ack. */
export interface Imahjong_bc_give_gift_ack {

    /** mahjong_bc_give_gift_ack ret */
    ret: number;

    /** mahjong_bc_give_gift_ack balance */
    balance: number;
}

/** Represents a mahjong_bc_give_gift_ack. */
export class mahjong_bc_give_gift_ack implements Imahjong_bc_give_gift_ack {

    /**
     * Constructs a new mahjong_bc_give_gift_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_give_gift_ack);

    /** mahjong_bc_give_gift_ack ret. */
    public ret: number;

    /** mahjong_bc_give_gift_ack balance. */
    public balance: number;

    /**
     * Creates a new mahjong_bc_give_gift_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_give_gift_ack instance
     */
    public static create(properties?: Imahjong_bc_give_gift_ack): mahjong_bc_give_gift_ack;

    /**
     * Encodes the specified mahjong_bc_give_gift_ack message. Does not implicitly {@link mahjong_bc_give_gift_ack.verify|verify} messages.
     * @param message mahjong_bc_give_gift_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_give_gift_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_give_gift_ack message, length delimited. Does not implicitly {@link mahjong_bc_give_gift_ack.verify|verify} messages.
     * @param message mahjong_bc_give_gift_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_give_gift_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_give_gift_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_give_gift_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_give_gift_ack;

    /**
     * Decodes a mahjong_bc_give_gift_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_give_gift_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_give_gift_ack;

    /**
     * Verifies a mahjong_bc_give_gift_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_give_gift_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_give_gift_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_give_gift_ack;

    /**
     * Creates a plain object from a mahjong_bc_give_gift_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_give_gift_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_give_gift_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_give_gift_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_ServerStatus. */
export interface Imahjong_ServerStatus {

    /** mahjong_ServerStatus serverId */
    serverId: number;

    /** mahjong_ServerStatus onlineNum */
    onlineNum: number;
}

/** Represents a mahjong_ServerStatus. */
export class mahjong_ServerStatus implements Imahjong_ServerStatus {

    /**
     * Constructs a new mahjong_ServerStatus.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_ServerStatus);

    /** mahjong_ServerStatus serverId. */
    public serverId: number;

    /** mahjong_ServerStatus onlineNum. */
    public onlineNum: number;

    /**
     * Creates a new mahjong_ServerStatus instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_ServerStatus instance
     */
    public static create(properties?: Imahjong_ServerStatus): mahjong_ServerStatus;

    /**
     * Encodes the specified mahjong_ServerStatus message. Does not implicitly {@link mahjong_ServerStatus.verify|verify} messages.
     * @param message mahjong_ServerStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_ServerStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_ServerStatus message, length delimited. Does not implicitly {@link mahjong_ServerStatus.verify|verify} messages.
     * @param message mahjong_ServerStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_ServerStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_ServerStatus message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_ServerStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_ServerStatus;

    /**
     * Decodes a mahjong_ServerStatus message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_ServerStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_ServerStatus;

    /**
     * Verifies a mahjong_ServerStatus message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_ServerStatus message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_ServerStatus
     */
    public static fromObject(object: { [k: string]: any }): mahjong_ServerStatus;

    /**
     * Creates a plain object from a mahjong_ServerStatus message. Also converts values to other types if specified.
     * @param message mahjong_ServerStatus
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_ServerStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_ServerStatus to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_web_socket_shake_hand_req. */
export interface Imahjong_cl_web_socket_shake_hand_req {

    /** mahjong_cl_web_socket_shake_hand_req webSocketKey */
    webSocketKey: string;
}

/** Represents a mahjong_cl_web_socket_shake_hand_req. */
export class mahjong_cl_web_socket_shake_hand_req implements Imahjong_cl_web_socket_shake_hand_req {

    /**
     * Constructs a new mahjong_cl_web_socket_shake_hand_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_web_socket_shake_hand_req);

    /** mahjong_cl_web_socket_shake_hand_req webSocketKey. */
    public webSocketKey: string;

    /**
     * Creates a new mahjong_cl_web_socket_shake_hand_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_web_socket_shake_hand_req instance
     */
    public static create(properties?: Imahjong_cl_web_socket_shake_hand_req): mahjong_cl_web_socket_shake_hand_req;

    /**
     * Encodes the specified mahjong_cl_web_socket_shake_hand_req message. Does not implicitly {@link mahjong_cl_web_socket_shake_hand_req.verify|verify} messages.
     * @param message mahjong_cl_web_socket_shake_hand_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_web_socket_shake_hand_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_web_socket_shake_hand_req message, length delimited. Does not implicitly {@link mahjong_cl_web_socket_shake_hand_req.verify|verify} messages.
     * @param message mahjong_cl_web_socket_shake_hand_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_web_socket_shake_hand_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_web_socket_shake_hand_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_web_socket_shake_hand_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_web_socket_shake_hand_req;

    /**
     * Decodes a mahjong_cl_web_socket_shake_hand_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_web_socket_shake_hand_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_web_socket_shake_hand_req;

    /**
     * Verifies a mahjong_cl_web_socket_shake_hand_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_web_socket_shake_hand_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_web_socket_shake_hand_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_web_socket_shake_hand_req;

    /**
     * Creates a plain object from a mahjong_cl_web_socket_shake_hand_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_web_socket_shake_hand_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_web_socket_shake_hand_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_web_socket_shake_hand_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_season_card_status_req. */
export interface Imahjong_cl_get_season_card_status_req {

    /** mahjong_cl_get_season_card_status_req cardType */
    cardType: number;
}

/** Represents a mahjong_cl_get_season_card_status_req. */
export class mahjong_cl_get_season_card_status_req implements Imahjong_cl_get_season_card_status_req {

    /**
     * Constructs a new mahjong_cl_get_season_card_status_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_season_card_status_req);

    /** mahjong_cl_get_season_card_status_req cardType. */
    public cardType: number;

    /**
     * Creates a new mahjong_cl_get_season_card_status_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_season_card_status_req instance
     */
    public static create(properties?: Imahjong_cl_get_season_card_status_req): mahjong_cl_get_season_card_status_req;

    /**
     * Encodes the specified mahjong_cl_get_season_card_status_req message. Does not implicitly {@link mahjong_cl_get_season_card_status_req.verify|verify} messages.
     * @param message mahjong_cl_get_season_card_status_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_season_card_status_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_season_card_status_req message, length delimited. Does not implicitly {@link mahjong_cl_get_season_card_status_req.verify|verify} messages.
     * @param message mahjong_cl_get_season_card_status_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_season_card_status_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_season_card_status_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_season_card_status_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_season_card_status_req;

    /**
     * Decodes a mahjong_cl_get_season_card_status_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_season_card_status_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_season_card_status_req;

    /**
     * Verifies a mahjong_cl_get_season_card_status_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_season_card_status_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_season_card_status_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_season_card_status_req;

    /**
     * Creates a plain object from a mahjong_cl_get_season_card_status_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_season_card_status_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_season_card_status_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_season_card_status_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_friend_list_req. */
export interface Imahjong_cl_get_friend_list_req {
}

/** Represents a mahjong_cl_get_friend_list_req. */
export class mahjong_cl_get_friend_list_req implements Imahjong_cl_get_friend_list_req {

    /**
     * Constructs a new mahjong_cl_get_friend_list_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_friend_list_req);

    /**
     * Creates a new mahjong_cl_get_friend_list_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_friend_list_req instance
     */
    public static create(properties?: Imahjong_cl_get_friend_list_req): mahjong_cl_get_friend_list_req;

    /**
     * Encodes the specified mahjong_cl_get_friend_list_req message. Does not implicitly {@link mahjong_cl_get_friend_list_req.verify|verify} messages.
     * @param message mahjong_cl_get_friend_list_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_friend_list_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_friend_list_req message, length delimited. Does not implicitly {@link mahjong_cl_get_friend_list_req.verify|verify} messages.
     * @param message mahjong_cl_get_friend_list_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_friend_list_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_friend_list_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_friend_list_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_friend_list_req;

    /**
     * Decodes a mahjong_cl_get_friend_list_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_friend_list_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_friend_list_req;

    /**
     * Verifies a mahjong_cl_get_friend_list_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_friend_list_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_friend_list_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_friend_list_req;

    /**
     * Creates a plain object from a mahjong_cl_get_friend_list_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_friend_list_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_friend_list_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_friend_list_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_merged_achieve_list_data_ack. */
export interface Imahjong_lc_get_merged_achieve_list_data_ack {

    /** mahjong_lc_get_merged_achieve_list_data_ack items */
    items?: (Imahjong_MergedAchieveData[]|null);
}

/** Represents a mahjong_lc_get_merged_achieve_list_data_ack. */
export class mahjong_lc_get_merged_achieve_list_data_ack implements Imahjong_lc_get_merged_achieve_list_data_ack {

    /**
     * Constructs a new mahjong_lc_get_merged_achieve_list_data_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_merged_achieve_list_data_ack);

    /** mahjong_lc_get_merged_achieve_list_data_ack items. */
    public items: Imahjong_MergedAchieveData[];

    /**
     * Creates a new mahjong_lc_get_merged_achieve_list_data_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_merged_achieve_list_data_ack instance
     */
    public static create(properties?: Imahjong_lc_get_merged_achieve_list_data_ack): mahjong_lc_get_merged_achieve_list_data_ack;

    /**
     * Encodes the specified mahjong_lc_get_merged_achieve_list_data_ack message. Does not implicitly {@link mahjong_lc_get_merged_achieve_list_data_ack.verify|verify} messages.
     * @param message mahjong_lc_get_merged_achieve_list_data_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_merged_achieve_list_data_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_merged_achieve_list_data_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_merged_achieve_list_data_ack.verify|verify} messages.
     * @param message mahjong_lc_get_merged_achieve_list_data_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_merged_achieve_list_data_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_merged_achieve_list_data_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_merged_achieve_list_data_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_merged_achieve_list_data_ack;

    /**
     * Decodes a mahjong_lc_get_merged_achieve_list_data_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_merged_achieve_list_data_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_merged_achieve_list_data_ack;

    /**
     * Verifies a mahjong_lc_get_merged_achieve_list_data_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_merged_achieve_list_data_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_merged_achieve_list_data_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_merged_achieve_list_data_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_merged_achieve_list_data_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_merged_achieve_list_data_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_merged_achieve_list_data_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_merged_achieve_list_data_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_PlyBaseData20121227. */
export interface Imahjong_PlyBaseData20121227 {

    /** mahjong_PlyBaseData20121227 plyGuid */
    plyGuid: (number|Long);

    /** mahjong_PlyBaseData20121227 nickname */
    nickname: string;

    /** mahjong_PlyBaseData20121227 gift */
    gift: number;

    /** mahjong_PlyBaseData20121227 money */
    money: number;

    /** mahjong_PlyBaseData20121227 score */
    score: number;

    /** mahjong_PlyBaseData20121227 won */
    won: number;

    /** mahjong_PlyBaseData20121227 lost */
    lost: number;

    /** mahjong_PlyBaseData20121227 dogfall */
    dogfall: number;

    /** mahjong_PlyBaseData20121227 tableId */
    tableId: number;

    /** mahjong_PlyBaseData20121227 chairId */
    chairId: number;

    /** mahjong_PlyBaseData20121227 ready */
    ready: number;
}

/** Represents a mahjong_PlyBaseData20121227. */
export class mahjong_PlyBaseData20121227 implements Imahjong_PlyBaseData20121227 {

    /**
     * Constructs a new mahjong_PlyBaseData20121227.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_PlyBaseData20121227);

    /** mahjong_PlyBaseData20121227 plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_PlyBaseData20121227 nickname. */
    public nickname: string;

    /** mahjong_PlyBaseData20121227 gift. */
    public gift: number;

    /** mahjong_PlyBaseData20121227 money. */
    public money: number;

    /** mahjong_PlyBaseData20121227 score. */
    public score: number;

    /** mahjong_PlyBaseData20121227 won. */
    public won: number;

    /** mahjong_PlyBaseData20121227 lost. */
    public lost: number;

    /** mahjong_PlyBaseData20121227 dogfall. */
    public dogfall: number;

    /** mahjong_PlyBaseData20121227 tableId. */
    public tableId: number;

    /** mahjong_PlyBaseData20121227 chairId. */
    public chairId: number;

    /** mahjong_PlyBaseData20121227 ready. */
    public ready: number;

    /**
     * Creates a new mahjong_PlyBaseData20121227 instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_PlyBaseData20121227 instance
     */
    public static create(properties?: Imahjong_PlyBaseData20121227): mahjong_PlyBaseData20121227;

    /**
     * Encodes the specified mahjong_PlyBaseData20121227 message. Does not implicitly {@link mahjong_PlyBaseData20121227.verify|verify} messages.
     * @param message mahjong_PlyBaseData20121227 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_PlyBaseData20121227, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_PlyBaseData20121227 message, length delimited. Does not implicitly {@link mahjong_PlyBaseData20121227.verify|verify} messages.
     * @param message mahjong_PlyBaseData20121227 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_PlyBaseData20121227, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_PlyBaseData20121227 message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_PlyBaseData20121227
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_PlyBaseData20121227;

    /**
     * Decodes a mahjong_PlyBaseData20121227 message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_PlyBaseData20121227
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_PlyBaseData20121227;

    /**
     * Verifies a mahjong_PlyBaseData20121227 message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_PlyBaseData20121227 message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_PlyBaseData20121227
     */
    public static fromObject(object: { [k: string]: any }): mahjong_PlyBaseData20121227;

    /**
     * Creates a plain object from a mahjong_PlyBaseData20121227 message. Also converts values to other types if specified.
     * @param message mahjong_PlyBaseData20121227
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_PlyBaseData20121227, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_PlyBaseData20121227 to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_update_player_marriage_req. */
export interface Imahjong_cl_update_player_marriage_req {

    /** mahjong_cl_update_player_marriage_req plyGuid */
    plyGuid: (number|Long);

    /** mahjong_cl_update_player_marriage_req age */
    age: number;

    /** mahjong_cl_update_player_marriage_req city */
    city: number;

    /** mahjong_cl_update_player_marriage_req degree */
    degree: number;

    /** mahjong_cl_update_player_marriage_req gender */
    gender: number;

    /** mahjong_cl_update_player_marriage_req height */
    height: number;

    /** mahjong_cl_update_player_marriage_req housing */
    housing: number;

    /** mahjong_cl_update_player_marriage_req haveChildren */
    haveChildren: number;

    /** mahjong_cl_update_player_marriage_req marriage */
    marriage: number;
}

/** Represents a mahjong_cl_update_player_marriage_req. */
export class mahjong_cl_update_player_marriage_req implements Imahjong_cl_update_player_marriage_req {

    /**
     * Constructs a new mahjong_cl_update_player_marriage_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_update_player_marriage_req);

    /** mahjong_cl_update_player_marriage_req plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_cl_update_player_marriage_req age. */
    public age: number;

    /** mahjong_cl_update_player_marriage_req city. */
    public city: number;

    /** mahjong_cl_update_player_marriage_req degree. */
    public degree: number;

    /** mahjong_cl_update_player_marriage_req gender. */
    public gender: number;

    /** mahjong_cl_update_player_marriage_req height. */
    public height: number;

    /** mahjong_cl_update_player_marriage_req housing. */
    public housing: number;

    /** mahjong_cl_update_player_marriage_req haveChildren. */
    public haveChildren: number;

    /** mahjong_cl_update_player_marriage_req marriage. */
    public marriage: number;

    /**
     * Creates a new mahjong_cl_update_player_marriage_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_update_player_marriage_req instance
     */
    public static create(properties?: Imahjong_cl_update_player_marriage_req): mahjong_cl_update_player_marriage_req;

    /**
     * Encodes the specified mahjong_cl_update_player_marriage_req message. Does not implicitly {@link mahjong_cl_update_player_marriage_req.verify|verify} messages.
     * @param message mahjong_cl_update_player_marriage_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_update_player_marriage_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_update_player_marriage_req message, length delimited. Does not implicitly {@link mahjong_cl_update_player_marriage_req.verify|verify} messages.
     * @param message mahjong_cl_update_player_marriage_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_update_player_marriage_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_update_player_marriage_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_update_player_marriage_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_update_player_marriage_req;

    /**
     * Decodes a mahjong_cl_update_player_marriage_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_update_player_marriage_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_update_player_marriage_req;

    /**
     * Verifies a mahjong_cl_update_player_marriage_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_update_player_marriage_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_update_player_marriage_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_update_player_marriage_req;

    /**
     * Creates a plain object from a mahjong_cl_update_player_marriage_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_update_player_marriage_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_update_player_marriage_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_update_player_marriage_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_ServerData2. */
export interface Imahjong_ServerData2 {

    /** mahjong_ServerData2 gameId */
    gameId: number;

    /** mahjong_ServerData2 serverId */
    serverId: number;

    /** mahjong_ServerData2 serverName */
    serverName: string;

    /** mahjong_ServerData2 serverKey */
    serverKey: string;

    /** mahjong_ServerData2 serverAddr */
    serverAddr: string;

    /** mahjong_ServerData2 serverPort */
    serverPort: number;

    /** mahjong_ServerData2 baseBet */
    baseBet: number;

    /** mahjong_ServerData2 minMoney */
    minMoney: number;

    /** mahjong_ServerData2 onlinePlayerNum */
    onlinePlayerNum: number;

    /** mahjong_ServerData2 channelId */
    channelId: number;

    /** mahjong_ServerData2 extParam */
    extParam: string;
}

/** Represents a mahjong_ServerData2. */
export class mahjong_ServerData2 implements Imahjong_ServerData2 {

    /**
     * Constructs a new mahjong_ServerData2.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_ServerData2);

    /** mahjong_ServerData2 gameId. */
    public gameId: number;

    /** mahjong_ServerData2 serverId. */
    public serverId: number;

    /** mahjong_ServerData2 serverName. */
    public serverName: string;

    /** mahjong_ServerData2 serverKey. */
    public serverKey: string;

    /** mahjong_ServerData2 serverAddr. */
    public serverAddr: string;

    /** mahjong_ServerData2 serverPort. */
    public serverPort: number;

    /** mahjong_ServerData2 baseBet. */
    public baseBet: number;

    /** mahjong_ServerData2 minMoney. */
    public minMoney: number;

    /** mahjong_ServerData2 onlinePlayerNum. */
    public onlinePlayerNum: number;

    /** mahjong_ServerData2 channelId. */
    public channelId: number;

    /** mahjong_ServerData2 extParam. */
    public extParam: string;

    /**
     * Creates a new mahjong_ServerData2 instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_ServerData2 instance
     */
    public static create(properties?: Imahjong_ServerData2): mahjong_ServerData2;

    /**
     * Encodes the specified mahjong_ServerData2 message. Does not implicitly {@link mahjong_ServerData2.verify|verify} messages.
     * @param message mahjong_ServerData2 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_ServerData2, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_ServerData2 message, length delimited. Does not implicitly {@link mahjong_ServerData2.verify|verify} messages.
     * @param message mahjong_ServerData2 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_ServerData2, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_ServerData2 message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_ServerData2
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_ServerData2;

    /**
     * Decodes a mahjong_ServerData2 message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_ServerData2
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_ServerData2;

    /**
     * Verifies a mahjong_ServerData2 message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_ServerData2 message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_ServerData2
     */
    public static fromObject(object: { [k: string]: any }): mahjong_ServerData2;

    /**
     * Creates a plain object from a mahjong_ServerData2 message. Also converts values to other types if specified.
     * @param message mahjong_ServerData2
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_ServerData2, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_ServerData2 to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_user_level_desc_ack. */
export interface Imahjong_lc_get_user_level_desc_ack {

    /** mahjong_lc_get_user_level_desc_ack ret */
    ret: number;

    /** mahjong_lc_get_user_level_desc_ack levelDesc */
    levelDesc?: (Imahjong_UserLevelDesc[]|null);
}

/** Represents a mahjong_lc_get_user_level_desc_ack. */
export class mahjong_lc_get_user_level_desc_ack implements Imahjong_lc_get_user_level_desc_ack {

    /**
     * Constructs a new mahjong_lc_get_user_level_desc_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_user_level_desc_ack);

    /** mahjong_lc_get_user_level_desc_ack ret. */
    public ret: number;

    /** mahjong_lc_get_user_level_desc_ack levelDesc. */
    public levelDesc: Imahjong_UserLevelDesc[];

    /**
     * Creates a new mahjong_lc_get_user_level_desc_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_user_level_desc_ack instance
     */
    public static create(properties?: Imahjong_lc_get_user_level_desc_ack): mahjong_lc_get_user_level_desc_ack;

    /**
     * Encodes the specified mahjong_lc_get_user_level_desc_ack message. Does not implicitly {@link mahjong_lc_get_user_level_desc_ack.verify|verify} messages.
     * @param message mahjong_lc_get_user_level_desc_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_user_level_desc_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_user_level_desc_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_user_level_desc_ack.verify|verify} messages.
     * @param message mahjong_lc_get_user_level_desc_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_user_level_desc_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_user_level_desc_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_user_level_desc_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_user_level_desc_ack;

    /**
     * Decodes a mahjong_lc_get_user_level_desc_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_user_level_desc_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_user_level_desc_ack;

    /**
     * Verifies a mahjong_lc_get_user_level_desc_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_user_level_desc_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_user_level_desc_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_user_level_desc_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_user_level_desc_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_user_level_desc_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_user_level_desc_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_user_level_desc_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_position_info_req. */
export interface Imahjong_cl_get_position_info_req {

    /** mahjong_cl_get_position_info_req dstGuid */
    dstGuid: (number|Long);
}

/** Represents a mahjong_cl_get_position_info_req. */
export class mahjong_cl_get_position_info_req implements Imahjong_cl_get_position_info_req {

    /**
     * Constructs a new mahjong_cl_get_position_info_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_position_info_req);

    /** mahjong_cl_get_position_info_req dstGuid. */
    public dstGuid: (number|Long);

    /**
     * Creates a new mahjong_cl_get_position_info_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_position_info_req instance
     */
    public static create(properties?: Imahjong_cl_get_position_info_req): mahjong_cl_get_position_info_req;

    /**
     * Encodes the specified mahjong_cl_get_position_info_req message. Does not implicitly {@link mahjong_cl_get_position_info_req.verify|verify} messages.
     * @param message mahjong_cl_get_position_info_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_position_info_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_position_info_req message, length delimited. Does not implicitly {@link mahjong_cl_get_position_info_req.verify|verify} messages.
     * @param message mahjong_cl_get_position_info_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_position_info_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_position_info_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_position_info_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_position_info_req;

    /**
     * Decodes a mahjong_cl_get_position_info_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_position_info_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_position_info_req;

    /**
     * Verifies a mahjong_cl_get_position_info_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_position_info_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_position_info_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_position_info_req;

    /**
     * Creates a plain object from a mahjong_cl_get_position_info_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_position_info_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_position_info_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_position_info_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_PlayerStatus20121227. */
export interface Imahjong_PlayerStatus20121227 {

    /** mahjong_PlayerStatus20121227 plyGuid */
    plyGuid: (number|Long);

    /** mahjong_PlayerStatus20121227 plyNickname */
    plyNickname: string;

    /** mahjong_PlayerStatus20121227 plyStatus */
    plyStatus: number;

    /** mahjong_PlayerStatus20121227 gameId */
    gameId: number;

    /** mahjong_PlayerStatus20121227 gameServerId */
    gameServerId: number;

    /** mahjong_PlayerStatus20121227 tableId */
    tableId: number;

    /** mahjong_PlayerStatus20121227 money */
    money: number;

    /** mahjong_PlayerStatus20121227 won */
    won: number;

    /** mahjong_PlayerStatus20121227 lost */
    lost: number;

    /** mahjong_PlayerStatus20121227 moneyRank */
    moneyRank: number;

    /** mahjong_PlayerStatus20121227 wonRank */
    wonRank: number;

    /** mahjong_PlayerStatus20121227 latitude */
    latitude: number;

    /** mahjong_PlayerStatus20121227 longitude */
    longitude: number;
}

/** Represents a mahjong_PlayerStatus20121227. */
export class mahjong_PlayerStatus20121227 implements Imahjong_PlayerStatus20121227 {

    /**
     * Constructs a new mahjong_PlayerStatus20121227.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_PlayerStatus20121227);

    /** mahjong_PlayerStatus20121227 plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_PlayerStatus20121227 plyNickname. */
    public plyNickname: string;

    /** mahjong_PlayerStatus20121227 plyStatus. */
    public plyStatus: number;

    /** mahjong_PlayerStatus20121227 gameId. */
    public gameId: number;

    /** mahjong_PlayerStatus20121227 gameServerId. */
    public gameServerId: number;

    /** mahjong_PlayerStatus20121227 tableId. */
    public tableId: number;

    /** mahjong_PlayerStatus20121227 money. */
    public money: number;

    /** mahjong_PlayerStatus20121227 won. */
    public won: number;

    /** mahjong_PlayerStatus20121227 lost. */
    public lost: number;

    /** mahjong_PlayerStatus20121227 moneyRank. */
    public moneyRank: number;

    /** mahjong_PlayerStatus20121227 wonRank. */
    public wonRank: number;

    /** mahjong_PlayerStatus20121227 latitude. */
    public latitude: number;

    /** mahjong_PlayerStatus20121227 longitude. */
    public longitude: number;

    /**
     * Creates a new mahjong_PlayerStatus20121227 instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_PlayerStatus20121227 instance
     */
    public static create(properties?: Imahjong_PlayerStatus20121227): mahjong_PlayerStatus20121227;

    /**
     * Encodes the specified mahjong_PlayerStatus20121227 message. Does not implicitly {@link mahjong_PlayerStatus20121227.verify|verify} messages.
     * @param message mahjong_PlayerStatus20121227 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_PlayerStatus20121227, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_PlayerStatus20121227 message, length delimited. Does not implicitly {@link mahjong_PlayerStatus20121227.verify|verify} messages.
     * @param message mahjong_PlayerStatus20121227 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_PlayerStatus20121227, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_PlayerStatus20121227 message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_PlayerStatus20121227
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_PlayerStatus20121227;

    /**
     * Decodes a mahjong_PlayerStatus20121227 message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_PlayerStatus20121227
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_PlayerStatus20121227;

    /**
     * Verifies a mahjong_PlayerStatus20121227 message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_PlayerStatus20121227 message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_PlayerStatus20121227
     */
    public static fromObject(object: { [k: string]: any }): mahjong_PlayerStatus20121227;

    /**
     * Creates a plain object from a mahjong_PlayerStatus20121227 message. Also converts values to other types if specified.
     * @param message mahjong_PlayerStatus20121227
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_PlayerStatus20121227, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_PlayerStatus20121227 to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_load_dwc_room_info_ack. */
export interface Imahjong_lc_load_dwc_room_info_ack {

    /** mahjong_lc_load_dwc_room_info_ack ackInfo */
    ackInfo?: (Imahjong_DwcRoomInfo[]|null);
}

/** Represents a mahjong_lc_load_dwc_room_info_ack. */
export class mahjong_lc_load_dwc_room_info_ack implements Imahjong_lc_load_dwc_room_info_ack {

    /**
     * Constructs a new mahjong_lc_load_dwc_room_info_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_load_dwc_room_info_ack);

    /** mahjong_lc_load_dwc_room_info_ack ackInfo. */
    public ackInfo: Imahjong_DwcRoomInfo[];

    /**
     * Creates a new mahjong_lc_load_dwc_room_info_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_load_dwc_room_info_ack instance
     */
    public static create(properties?: Imahjong_lc_load_dwc_room_info_ack): mahjong_lc_load_dwc_room_info_ack;

    /**
     * Encodes the specified mahjong_lc_load_dwc_room_info_ack message. Does not implicitly {@link mahjong_lc_load_dwc_room_info_ack.verify|verify} messages.
     * @param message mahjong_lc_load_dwc_room_info_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_load_dwc_room_info_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_load_dwc_room_info_ack message, length delimited. Does not implicitly {@link mahjong_lc_load_dwc_room_info_ack.verify|verify} messages.
     * @param message mahjong_lc_load_dwc_room_info_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_load_dwc_room_info_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_load_dwc_room_info_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_load_dwc_room_info_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_load_dwc_room_info_ack;

    /**
     * Decodes a mahjong_lc_load_dwc_room_info_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_load_dwc_room_info_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_load_dwc_room_info_ack;

    /**
     * Verifies a mahjong_lc_load_dwc_room_info_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_load_dwc_room_info_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_load_dwc_room_info_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_load_dwc_room_info_ack;

    /**
     * Creates a plain object from a mahjong_lc_load_dwc_room_info_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_load_dwc_room_info_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_load_dwc_room_info_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_load_dwc_room_info_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_load_dwc_room_info_req. */
export interface Imahjong_cl_load_dwc_room_info_req {

    /** mahjong_cl_load_dwc_room_info_req autoId */
    autoId: number;

    /** mahjong_cl_load_dwc_room_info_req gameId */
    gameId: number;

    /** mahjong_cl_load_dwc_room_info_req isFull */
    isFull: number;
}

/** Represents a mahjong_cl_load_dwc_room_info_req. */
export class mahjong_cl_load_dwc_room_info_req implements Imahjong_cl_load_dwc_room_info_req {

    /**
     * Constructs a new mahjong_cl_load_dwc_room_info_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_load_dwc_room_info_req);

    /** mahjong_cl_load_dwc_room_info_req autoId. */
    public autoId: number;

    /** mahjong_cl_load_dwc_room_info_req gameId. */
    public gameId: number;

    /** mahjong_cl_load_dwc_room_info_req isFull. */
    public isFull: number;

    /**
     * Creates a new mahjong_cl_load_dwc_room_info_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_load_dwc_room_info_req instance
     */
    public static create(properties?: Imahjong_cl_load_dwc_room_info_req): mahjong_cl_load_dwc_room_info_req;

    /**
     * Encodes the specified mahjong_cl_load_dwc_room_info_req message. Does not implicitly {@link mahjong_cl_load_dwc_room_info_req.verify|verify} messages.
     * @param message mahjong_cl_load_dwc_room_info_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_load_dwc_room_info_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_load_dwc_room_info_req message, length delimited. Does not implicitly {@link mahjong_cl_load_dwc_room_info_req.verify|verify} messages.
     * @param message mahjong_cl_load_dwc_room_info_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_load_dwc_room_info_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_load_dwc_room_info_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_load_dwc_room_info_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_load_dwc_room_info_req;

    /**
     * Decodes a mahjong_cl_load_dwc_room_info_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_load_dwc_room_info_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_load_dwc_room_info_req;

    /**
     * Verifies a mahjong_cl_load_dwc_room_info_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_load_dwc_room_info_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_load_dwc_room_info_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_load_dwc_room_info_req;

    /**
     * Creates a plain object from a mahjong_cl_load_dwc_room_info_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_load_dwc_room_info_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_load_dwc_room_info_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_load_dwc_room_info_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_set_password_safe_req. */
export interface Imahjong_cl_set_password_safe_req {

    /** mahjong_cl_set_password_safe_req plyGuid */
    plyGuid: (number|Long);

    /** mahjong_cl_set_password_safe_req password */
    password: string;

    /** mahjong_cl_set_password_safe_req mobile */
    mobile: string;
}

/** Represents a mahjong_cl_set_password_safe_req. */
export class mahjong_cl_set_password_safe_req implements Imahjong_cl_set_password_safe_req {

    /**
     * Constructs a new mahjong_cl_set_password_safe_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_set_password_safe_req);

    /** mahjong_cl_set_password_safe_req plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_cl_set_password_safe_req password. */
    public password: string;

    /** mahjong_cl_set_password_safe_req mobile. */
    public mobile: string;

    /**
     * Creates a new mahjong_cl_set_password_safe_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_set_password_safe_req instance
     */
    public static create(properties?: Imahjong_cl_set_password_safe_req): mahjong_cl_set_password_safe_req;

    /**
     * Encodes the specified mahjong_cl_set_password_safe_req message. Does not implicitly {@link mahjong_cl_set_password_safe_req.verify|verify} messages.
     * @param message mahjong_cl_set_password_safe_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_set_password_safe_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_set_password_safe_req message, length delimited. Does not implicitly {@link mahjong_cl_set_password_safe_req.verify|verify} messages.
     * @param message mahjong_cl_set_password_safe_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_set_password_safe_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_set_password_safe_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_set_password_safe_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_set_password_safe_req;

    /**
     * Decodes a mahjong_cl_set_password_safe_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_set_password_safe_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_set_password_safe_req;

    /**
     * Verifies a mahjong_cl_set_password_safe_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_set_password_safe_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_set_password_safe_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_set_password_safe_req;

    /**
     * Creates a plain object from a mahjong_cl_set_password_safe_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_set_password_safe_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_set_password_safe_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_set_password_safe_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_server_status_not. */
export interface Imahjong_lc_server_status_not {

    /** mahjong_lc_server_status_not serverStatus */
    serverStatus?: (Imahjong_ServerStatus[]|null);
}

/** Represents a mahjong_lc_server_status_not. */
export class mahjong_lc_server_status_not implements Imahjong_lc_server_status_not {

    /**
     * Constructs a new mahjong_lc_server_status_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_server_status_not);

    /** mahjong_lc_server_status_not serverStatus. */
    public serverStatus: Imahjong_ServerStatus[];

    /**
     * Creates a new mahjong_lc_server_status_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_server_status_not instance
     */
    public static create(properties?: Imahjong_lc_server_status_not): mahjong_lc_server_status_not;

    /**
     * Encodes the specified mahjong_lc_server_status_not message. Does not implicitly {@link mahjong_lc_server_status_not.verify|verify} messages.
     * @param message mahjong_lc_server_status_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_server_status_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_server_status_not message, length delimited. Does not implicitly {@link mahjong_lc_server_status_not.verify|verify} messages.
     * @param message mahjong_lc_server_status_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_server_status_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_server_status_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_server_status_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_server_status_not;

    /**
     * Decodes a mahjong_lc_server_status_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_server_status_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_server_status_not;

    /**
     * Verifies a mahjong_lc_server_status_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_server_status_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_server_status_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_server_status_not;

    /**
     * Creates a plain object from a mahjong_lc_server_status_not message. Also converts values to other types if specified.
     * @param message mahjong_lc_server_status_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_server_status_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_server_status_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_rp_check_relief_status_ack. */
export interface Imahjong_lc_rp_check_relief_status_ack {

    /** mahjong_lc_rp_check_relief_status_ack ret */
    ret: number;

    /** mahjong_lc_rp_check_relief_status_ack roomType */
    roomType: number;

    /** mahjong_lc_rp_check_relief_status_ack curReliefTimes */
    curReliefTimes: number;

    /** mahjong_lc_rp_check_relief_status_ack reliefIndex */
    reliefIndex: number;

    /** mahjong_lc_rp_check_relief_status_ack reliefAward */
    reliefAward: number;

    /** mahjong_lc_rp_check_relief_status_ack reliefTimesMax */
    reliefTimesMax: number;
}

/** Represents a mahjong_lc_rp_check_relief_status_ack. */
export class mahjong_lc_rp_check_relief_status_ack implements Imahjong_lc_rp_check_relief_status_ack {

    /**
     * Constructs a new mahjong_lc_rp_check_relief_status_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_rp_check_relief_status_ack);

    /** mahjong_lc_rp_check_relief_status_ack ret. */
    public ret: number;

    /** mahjong_lc_rp_check_relief_status_ack roomType. */
    public roomType: number;

    /** mahjong_lc_rp_check_relief_status_ack curReliefTimes. */
    public curReliefTimes: number;

    /** mahjong_lc_rp_check_relief_status_ack reliefIndex. */
    public reliefIndex: number;

    /** mahjong_lc_rp_check_relief_status_ack reliefAward. */
    public reliefAward: number;

    /** mahjong_lc_rp_check_relief_status_ack reliefTimesMax. */
    public reliefTimesMax: number;

    /**
     * Creates a new mahjong_lc_rp_check_relief_status_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_rp_check_relief_status_ack instance
     */
    public static create(properties?: Imahjong_lc_rp_check_relief_status_ack): mahjong_lc_rp_check_relief_status_ack;

    /**
     * Encodes the specified mahjong_lc_rp_check_relief_status_ack message. Does not implicitly {@link mahjong_lc_rp_check_relief_status_ack.verify|verify} messages.
     * @param message mahjong_lc_rp_check_relief_status_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_rp_check_relief_status_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_rp_check_relief_status_ack message, length delimited. Does not implicitly {@link mahjong_lc_rp_check_relief_status_ack.verify|verify} messages.
     * @param message mahjong_lc_rp_check_relief_status_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_rp_check_relief_status_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_rp_check_relief_status_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_rp_check_relief_status_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_rp_check_relief_status_ack;

    /**
     * Decodes a mahjong_lc_rp_check_relief_status_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_rp_check_relief_status_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_rp_check_relief_status_ack;

    /**
     * Verifies a mahjong_lc_rp_check_relief_status_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_rp_check_relief_status_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_rp_check_relief_status_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_rp_check_relief_status_ack;

    /**
     * Creates a plain object from a mahjong_lc_rp_check_relief_status_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_rp_check_relief_status_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_rp_check_relief_status_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_rp_check_relief_status_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_ItemData20121227. */
export interface Imahjong_ItemData20121227 {

    /** mahjong_ItemData20121227 index */
    index: number;

    /** mahjong_ItemData20121227 num */
    num: number;
}

/** Represents a mahjong_ItemData20121227. */
export class mahjong_ItemData20121227 implements Imahjong_ItemData20121227 {

    /**
     * Constructs a new mahjong_ItemData20121227.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_ItemData20121227);

    /** mahjong_ItemData20121227 index. */
    public index: number;

    /** mahjong_ItemData20121227 num. */
    public num: number;

    /**
     * Creates a new mahjong_ItemData20121227 instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_ItemData20121227 instance
     */
    public static create(properties?: Imahjong_ItemData20121227): mahjong_ItemData20121227;

    /**
     * Encodes the specified mahjong_ItemData20121227 message. Does not implicitly {@link mahjong_ItemData20121227.verify|verify} messages.
     * @param message mahjong_ItemData20121227 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_ItemData20121227, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_ItemData20121227 message, length delimited. Does not implicitly {@link mahjong_ItemData20121227.verify|verify} messages.
     * @param message mahjong_ItemData20121227 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_ItemData20121227, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_ItemData20121227 message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_ItemData20121227
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_ItemData20121227;

    /**
     * Decodes a mahjong_ItemData20121227 message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_ItemData20121227
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_ItemData20121227;

    /**
     * Verifies a mahjong_ItemData20121227 message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_ItemData20121227 message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_ItemData20121227
     */
    public static fromObject(object: { [k: string]: any }): mahjong_ItemData20121227;

    /**
     * Creates a plain object from a mahjong_ItemData20121227 message. Also converts values to other types if specified.
     * @param message mahjong_ItemData20121227
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_ItemData20121227, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_ItemData20121227 to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_friend_approve_ack. */
export interface Imahjong_cl_friend_approve_ack {

    /** mahjong_cl_friend_approve_ack ret */
    ret: number;

    /** mahjong_cl_friend_approve_ack sndPlyGuid */
    sndPlyGuid: (number|Long);

    /** mahjong_cl_friend_approve_ack message */
    message: string;
}

/** Represents a mahjong_cl_friend_approve_ack. */
export class mahjong_cl_friend_approve_ack implements Imahjong_cl_friend_approve_ack {

    /**
     * Constructs a new mahjong_cl_friend_approve_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_friend_approve_ack);

    /** mahjong_cl_friend_approve_ack ret. */
    public ret: number;

    /** mahjong_cl_friend_approve_ack sndPlyGuid. */
    public sndPlyGuid: (number|Long);

    /** mahjong_cl_friend_approve_ack message. */
    public message: string;

    /**
     * Creates a new mahjong_cl_friend_approve_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_friend_approve_ack instance
     */
    public static create(properties?: Imahjong_cl_friend_approve_ack): mahjong_cl_friend_approve_ack;

    /**
     * Encodes the specified mahjong_cl_friend_approve_ack message. Does not implicitly {@link mahjong_cl_friend_approve_ack.verify|verify} messages.
     * @param message mahjong_cl_friend_approve_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_friend_approve_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_friend_approve_ack message, length delimited. Does not implicitly {@link mahjong_cl_friend_approve_ack.verify|verify} messages.
     * @param message mahjong_cl_friend_approve_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_friend_approve_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_friend_approve_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_friend_approve_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_friend_approve_ack;

    /**
     * Decodes a mahjong_cl_friend_approve_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_friend_approve_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_friend_approve_ack;

    /**
     * Verifies a mahjong_cl_friend_approve_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_friend_approve_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_friend_approve_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_friend_approve_ack;

    /**
     * Creates a plain object from a mahjong_cl_friend_approve_ack message. Also converts values to other types if specified.
     * @param message mahjong_cl_friend_approve_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_friend_approve_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_friend_approve_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_get_online_award_items_ack. */
export interface Imahjong_bc_get_online_award_items_ack {

    /** mahjong_bc_get_online_award_items_ack ret */
    ret: number;

    /** mahjong_bc_get_online_award_items_ack items */
    items?: (Imahjong_OnlineAwardItems[]|null);
}

/** Represents a mahjong_bc_get_online_award_items_ack. */
export class mahjong_bc_get_online_award_items_ack implements Imahjong_bc_get_online_award_items_ack {

    /**
     * Constructs a new mahjong_bc_get_online_award_items_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_get_online_award_items_ack);

    /** mahjong_bc_get_online_award_items_ack ret. */
    public ret: number;

    /** mahjong_bc_get_online_award_items_ack items. */
    public items: Imahjong_OnlineAwardItems[];

    /**
     * Creates a new mahjong_bc_get_online_award_items_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_get_online_award_items_ack instance
     */
    public static create(properties?: Imahjong_bc_get_online_award_items_ack): mahjong_bc_get_online_award_items_ack;

    /**
     * Encodes the specified mahjong_bc_get_online_award_items_ack message. Does not implicitly {@link mahjong_bc_get_online_award_items_ack.verify|verify} messages.
     * @param message mahjong_bc_get_online_award_items_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_get_online_award_items_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_get_online_award_items_ack message, length delimited. Does not implicitly {@link mahjong_bc_get_online_award_items_ack.verify|verify} messages.
     * @param message mahjong_bc_get_online_award_items_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_get_online_award_items_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_get_online_award_items_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_get_online_award_items_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_get_online_award_items_ack;

    /**
     * Decodes a mahjong_bc_get_online_award_items_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_get_online_award_items_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_get_online_award_items_ack;

    /**
     * Verifies a mahjong_bc_get_online_award_items_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_get_online_award_items_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_get_online_award_items_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_get_online_award_items_ack;

    /**
     * Creates a plain object from a mahjong_bc_get_online_award_items_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_get_online_award_items_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_get_online_award_items_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_get_online_award_items_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_friend_list_ack. */
export interface Imahjong_lc_get_friend_list_ack {

    /** mahjong_lc_get_friend_list_ack friends */
    friends?: (Imahjong_FriendData[]|null);
}

/** Represents a mahjong_lc_get_friend_list_ack. */
export class mahjong_lc_get_friend_list_ack implements Imahjong_lc_get_friend_list_ack {

    /**
     * Constructs a new mahjong_lc_get_friend_list_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_friend_list_ack);

    /** mahjong_lc_get_friend_list_ack friends. */
    public friends: Imahjong_FriendData[];

    /**
     * Creates a new mahjong_lc_get_friend_list_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_friend_list_ack instance
     */
    public static create(properties?: Imahjong_lc_get_friend_list_ack): mahjong_lc_get_friend_list_ack;

    /**
     * Encodes the specified mahjong_lc_get_friend_list_ack message. Does not implicitly {@link mahjong_lc_get_friend_list_ack.verify|verify} messages.
     * @param message mahjong_lc_get_friend_list_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_friend_list_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_friend_list_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_friend_list_ack.verify|verify} messages.
     * @param message mahjong_lc_get_friend_list_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_friend_list_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_friend_list_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_friend_list_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_friend_list_ack;

    /**
     * Decodes a mahjong_lc_get_friend_list_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_friend_list_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_friend_list_ack;

    /**
     * Verifies a mahjong_lc_get_friend_list_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_friend_list_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_friend_list_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_friend_list_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_friend_list_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_friend_list_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_friend_list_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_friend_list_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_web_socket_shake_hand_ack. */
export interface Imahjong_lc_web_socket_shake_hand_ack {

    /** mahjong_lc_web_socket_shake_hand_ack webSocketKey */
    webSocketKey: string;
}

/** Represents a mahjong_lc_web_socket_shake_hand_ack. */
export class mahjong_lc_web_socket_shake_hand_ack implements Imahjong_lc_web_socket_shake_hand_ack {

    /**
     * Constructs a new mahjong_lc_web_socket_shake_hand_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_web_socket_shake_hand_ack);

    /** mahjong_lc_web_socket_shake_hand_ack webSocketKey. */
    public webSocketKey: string;

    /**
     * Creates a new mahjong_lc_web_socket_shake_hand_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_web_socket_shake_hand_ack instance
     */
    public static create(properties?: Imahjong_lc_web_socket_shake_hand_ack): mahjong_lc_web_socket_shake_hand_ack;

    /**
     * Encodes the specified mahjong_lc_web_socket_shake_hand_ack message. Does not implicitly {@link mahjong_lc_web_socket_shake_hand_ack.verify|verify} messages.
     * @param message mahjong_lc_web_socket_shake_hand_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_web_socket_shake_hand_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_web_socket_shake_hand_ack message, length delimited. Does not implicitly {@link mahjong_lc_web_socket_shake_hand_ack.verify|verify} messages.
     * @param message mahjong_lc_web_socket_shake_hand_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_web_socket_shake_hand_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_web_socket_shake_hand_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_web_socket_shake_hand_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_web_socket_shake_hand_ack;

    /**
     * Decodes a mahjong_lc_web_socket_shake_hand_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_web_socket_shake_hand_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_web_socket_shake_hand_ack;

    /**
     * Verifies a mahjong_lc_web_socket_shake_hand_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_web_socket_shake_hand_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_web_socket_shake_hand_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_web_socket_shake_hand_ack;

    /**
     * Creates a plain object from a mahjong_lc_web_socket_shake_hand_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_web_socket_shake_hand_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_web_socket_shake_hand_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_web_socket_shake_hand_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_ContinuousSigninAward. */
export interface Imahjong_ContinuousSigninAward {

    /** mahjong_ContinuousSigninAward days */
    days: number;

    /** mahjong_ContinuousSigninAward awardStrings */
    awardStrings: string;
}

/** Represents a mahjong_ContinuousSigninAward. */
export class mahjong_ContinuousSigninAward implements Imahjong_ContinuousSigninAward {

    /**
     * Constructs a new mahjong_ContinuousSigninAward.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_ContinuousSigninAward);

    /** mahjong_ContinuousSigninAward days. */
    public days: number;

    /** mahjong_ContinuousSigninAward awardStrings. */
    public awardStrings: string;

    /**
     * Creates a new mahjong_ContinuousSigninAward instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_ContinuousSigninAward instance
     */
    public static create(properties?: Imahjong_ContinuousSigninAward): mahjong_ContinuousSigninAward;

    /**
     * Encodes the specified mahjong_ContinuousSigninAward message. Does not implicitly {@link mahjong_ContinuousSigninAward.verify|verify} messages.
     * @param message mahjong_ContinuousSigninAward message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_ContinuousSigninAward, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_ContinuousSigninAward message, length delimited. Does not implicitly {@link mahjong_ContinuousSigninAward.verify|verify} messages.
     * @param message mahjong_ContinuousSigninAward message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_ContinuousSigninAward, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_ContinuousSigninAward message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_ContinuousSigninAward
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_ContinuousSigninAward;

    /**
     * Decodes a mahjong_ContinuousSigninAward message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_ContinuousSigninAward
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_ContinuousSigninAward;

    /**
     * Verifies a mahjong_ContinuousSigninAward message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_ContinuousSigninAward message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_ContinuousSigninAward
     */
    public static fromObject(object: { [k: string]: any }): mahjong_ContinuousSigninAward;

    /**
     * Creates a plain object from a mahjong_ContinuousSigninAward message. Also converts values to other types if specified.
     * @param message mahjong_ContinuousSigninAward
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_ContinuousSigninAward, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_ContinuousSigninAward to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_room_limit_refresh_not. */
export interface Imahjong_lc_room_limit_refresh_not {

    /** mahjong_lc_room_limit_refresh_not mainGameId */
    mainGameId: number;
}

/** Represents a mahjong_lc_room_limit_refresh_not. */
export class mahjong_lc_room_limit_refresh_not implements Imahjong_lc_room_limit_refresh_not {

    /**
     * Constructs a new mahjong_lc_room_limit_refresh_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_room_limit_refresh_not);

    /** mahjong_lc_room_limit_refresh_not mainGameId. */
    public mainGameId: number;

    /**
     * Creates a new mahjong_lc_room_limit_refresh_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_room_limit_refresh_not instance
     */
    public static create(properties?: Imahjong_lc_room_limit_refresh_not): mahjong_lc_room_limit_refresh_not;

    /**
     * Encodes the specified mahjong_lc_room_limit_refresh_not message. Does not implicitly {@link mahjong_lc_room_limit_refresh_not.verify|verify} messages.
     * @param message mahjong_lc_room_limit_refresh_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_room_limit_refresh_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_room_limit_refresh_not message, length delimited. Does not implicitly {@link mahjong_lc_room_limit_refresh_not.verify|verify} messages.
     * @param message mahjong_lc_room_limit_refresh_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_room_limit_refresh_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_room_limit_refresh_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_room_limit_refresh_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_room_limit_refresh_not;

    /**
     * Decodes a mahjong_lc_room_limit_refresh_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_room_limit_refresh_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_room_limit_refresh_not;

    /**
     * Verifies a mahjong_lc_room_limit_refresh_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_room_limit_refresh_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_room_limit_refresh_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_room_limit_refresh_not;

    /**
     * Creates a plain object from a mahjong_lc_room_limit_refresh_not message. Also converts values to other types if specified.
     * @param message mahjong_lc_room_limit_refresh_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_room_limit_refresh_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_room_limit_refresh_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_recharge_tip_not. */
export interface Imahjong_bc_recharge_tip_not {

    /** mahjong_bc_recharge_tip_not type */
    type: number;

    /** mahjong_bc_recharge_tip_not money */
    money: number;

    /** mahjong_bc_recharge_tip_not message */
    message: string;
}

/** Represents a mahjong_bc_recharge_tip_not. */
export class mahjong_bc_recharge_tip_not implements Imahjong_bc_recharge_tip_not {

    /**
     * Constructs a new mahjong_bc_recharge_tip_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_recharge_tip_not);

    /** mahjong_bc_recharge_tip_not type. */
    public type: number;

    /** mahjong_bc_recharge_tip_not money. */
    public money: number;

    /** mahjong_bc_recharge_tip_not message. */
    public message: string;

    /**
     * Creates a new mahjong_bc_recharge_tip_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_recharge_tip_not instance
     */
    public static create(properties?: Imahjong_bc_recharge_tip_not): mahjong_bc_recharge_tip_not;

    /**
     * Encodes the specified mahjong_bc_recharge_tip_not message. Does not implicitly {@link mahjong_bc_recharge_tip_not.verify|verify} messages.
     * @param message mahjong_bc_recharge_tip_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_recharge_tip_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_recharge_tip_not message, length delimited. Does not implicitly {@link mahjong_bc_recharge_tip_not.verify|verify} messages.
     * @param message mahjong_bc_recharge_tip_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_recharge_tip_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_recharge_tip_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_recharge_tip_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_recharge_tip_not;

    /**
     * Decodes a mahjong_bc_recharge_tip_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_recharge_tip_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_recharge_tip_not;

    /**
     * Verifies a mahjong_bc_recharge_tip_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_recharge_tip_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_recharge_tip_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_recharge_tip_not;

    /**
     * Creates a plain object from a mahjong_bc_recharge_tip_not message. Also converts values to other types if specified.
     * @param message mahjong_bc_recharge_tip_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_recharge_tip_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_recharge_tip_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_user_signin_award_ack. */
export interface Imahjong_lc_get_user_signin_award_ack {

    /** mahjong_lc_get_user_signin_award_ack ret */
    ret: number;

    /** mahjong_lc_get_user_signin_award_ack day */
    day: number;
}

/** Represents a mahjong_lc_get_user_signin_award_ack. */
export class mahjong_lc_get_user_signin_award_ack implements Imahjong_lc_get_user_signin_award_ack {

    /**
     * Constructs a new mahjong_lc_get_user_signin_award_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_user_signin_award_ack);

    /** mahjong_lc_get_user_signin_award_ack ret. */
    public ret: number;

    /** mahjong_lc_get_user_signin_award_ack day. */
    public day: number;

    /**
     * Creates a new mahjong_lc_get_user_signin_award_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_user_signin_award_ack instance
     */
    public static create(properties?: Imahjong_lc_get_user_signin_award_ack): mahjong_lc_get_user_signin_award_ack;

    /**
     * Encodes the specified mahjong_lc_get_user_signin_award_ack message. Does not implicitly {@link mahjong_lc_get_user_signin_award_ack.verify|verify} messages.
     * @param message mahjong_lc_get_user_signin_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_user_signin_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_user_signin_award_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_user_signin_award_ack.verify|verify} messages.
     * @param message mahjong_lc_get_user_signin_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_user_signin_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_user_signin_award_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_user_signin_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_user_signin_award_ack;

    /**
     * Decodes a mahjong_lc_get_user_signin_award_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_user_signin_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_user_signin_award_ack;

    /**
     * Verifies a mahjong_lc_get_user_signin_award_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_user_signin_award_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_user_signin_award_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_user_signin_award_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_user_signin_award_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_user_signin_award_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_user_signin_award_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_user_signin_award_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_spec_trumpet_not. */
export interface Imahjong_lc_spec_trumpet_not {

    /** mahjong_lc_spec_trumpet_not gameId */
    gameId: number;

    /** mahjong_lc_spec_trumpet_not plyGuid */
    plyGuid: (number|Long);

    /** mahjong_lc_spec_trumpet_not plyNickname */
    plyNickname: string;

    /** mahjong_lc_spec_trumpet_not message */
    message: string;

    /** mahjong_lc_spec_trumpet_not image */
    image: string;
}

/** Represents a mahjong_lc_spec_trumpet_not. */
export class mahjong_lc_spec_trumpet_not implements Imahjong_lc_spec_trumpet_not {

    /**
     * Constructs a new mahjong_lc_spec_trumpet_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_spec_trumpet_not);

    /** mahjong_lc_spec_trumpet_not gameId. */
    public gameId: number;

    /** mahjong_lc_spec_trumpet_not plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_lc_spec_trumpet_not plyNickname. */
    public plyNickname: string;

    /** mahjong_lc_spec_trumpet_not message. */
    public message: string;

    /** mahjong_lc_spec_trumpet_not image. */
    public image: string;

    /**
     * Creates a new mahjong_lc_spec_trumpet_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_spec_trumpet_not instance
     */
    public static create(properties?: Imahjong_lc_spec_trumpet_not): mahjong_lc_spec_trumpet_not;

    /**
     * Encodes the specified mahjong_lc_spec_trumpet_not message. Does not implicitly {@link mahjong_lc_spec_trumpet_not.verify|verify} messages.
     * @param message mahjong_lc_spec_trumpet_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_spec_trumpet_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_spec_trumpet_not message, length delimited. Does not implicitly {@link mahjong_lc_spec_trumpet_not.verify|verify} messages.
     * @param message mahjong_lc_spec_trumpet_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_spec_trumpet_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_spec_trumpet_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_spec_trumpet_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_spec_trumpet_not;

    /**
     * Decodes a mahjong_lc_spec_trumpet_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_spec_trumpet_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_spec_trumpet_not;

    /**
     * Verifies a mahjong_lc_spec_trumpet_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_spec_trumpet_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_spec_trumpet_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_spec_trumpet_not;

    /**
     * Creates a plain object from a mahjong_lc_spec_trumpet_not message. Also converts values to other types if specified.
     * @param message mahjong_lc_spec_trumpet_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_spec_trumpet_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_spec_trumpet_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_get_table_list_req. */
export interface Imahjong_cb_get_table_list_req {
}

/** Represents a mahjong_cb_get_table_list_req. */
export class mahjong_cb_get_table_list_req implements Imahjong_cb_get_table_list_req {

    /**
     * Constructs a new mahjong_cb_get_table_list_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_get_table_list_req);

    /**
     * Creates a new mahjong_cb_get_table_list_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_get_table_list_req instance
     */
    public static create(properties?: Imahjong_cb_get_table_list_req): mahjong_cb_get_table_list_req;

    /**
     * Encodes the specified mahjong_cb_get_table_list_req message. Does not implicitly {@link mahjong_cb_get_table_list_req.verify|verify} messages.
     * @param message mahjong_cb_get_table_list_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_get_table_list_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_get_table_list_req message, length delimited. Does not implicitly {@link mahjong_cb_get_table_list_req.verify|verify} messages.
     * @param message mahjong_cb_get_table_list_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_get_table_list_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_get_table_list_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_get_table_list_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_get_table_list_req;

    /**
     * Decodes a mahjong_cb_get_table_list_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_get_table_list_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_get_table_list_req;

    /**
     * Verifies a mahjong_cb_get_table_list_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_get_table_list_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_get_table_list_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_get_table_list_req;

    /**
     * Creates a plain object from a mahjong_cb_get_table_list_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_get_table_list_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_get_table_list_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_get_table_list_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_relief_req. */
export interface Imahjong_cl_get_relief_req {

    /** mahjong_cl_get_relief_req type */
    type: number;
}

/** Represents a mahjong_cl_get_relief_req. */
export class mahjong_cl_get_relief_req implements Imahjong_cl_get_relief_req {

    /**
     * Constructs a new mahjong_cl_get_relief_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_relief_req);

    /** mahjong_cl_get_relief_req type. */
    public type: number;

    /**
     * Creates a new mahjong_cl_get_relief_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_relief_req instance
     */
    public static create(properties?: Imahjong_cl_get_relief_req): mahjong_cl_get_relief_req;

    /**
     * Encodes the specified mahjong_cl_get_relief_req message. Does not implicitly {@link mahjong_cl_get_relief_req.verify|verify} messages.
     * @param message mahjong_cl_get_relief_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_relief_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_relief_req message, length delimited. Does not implicitly {@link mahjong_cl_get_relief_req.verify|verify} messages.
     * @param message mahjong_cl_get_relief_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_relief_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_relief_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_relief_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_relief_req;

    /**
     * Decodes a mahjong_cl_get_relief_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_relief_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_relief_req;

    /**
     * Verifies a mahjong_cl_get_relief_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_relief_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_relief_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_relief_req;

    /**
     * Creates a plain object from a mahjong_cl_get_relief_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_relief_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_relief_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_relief_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_ply_status_ack. */
export interface Imahjong_lc_get_ply_status_ack {

    /** mahjong_lc_get_ply_status_ack players */
    players?: (Imahjong_PlayerStatus[]|null);
}

/** Represents a mahjong_lc_get_ply_status_ack. */
export class mahjong_lc_get_ply_status_ack implements Imahjong_lc_get_ply_status_ack {

    /**
     * Constructs a new mahjong_lc_get_ply_status_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_ply_status_ack);

    /** mahjong_lc_get_ply_status_ack players. */
    public players: Imahjong_PlayerStatus[];

    /**
     * Creates a new mahjong_lc_get_ply_status_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_ply_status_ack instance
     */
    public static create(properties?: Imahjong_lc_get_ply_status_ack): mahjong_lc_get_ply_status_ack;

    /**
     * Encodes the specified mahjong_lc_get_ply_status_ack message. Does not implicitly {@link mahjong_lc_get_ply_status_ack.verify|verify} messages.
     * @param message mahjong_lc_get_ply_status_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_ply_status_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_ply_status_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_ply_status_ack.verify|verify} messages.
     * @param message mahjong_lc_get_ply_status_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_ply_status_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_ply_status_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_ply_status_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_ply_status_ack;

    /**
     * Decodes a mahjong_lc_get_ply_status_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_ply_status_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_ply_status_ack;

    /**
     * Verifies a mahjong_lc_get_ply_status_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_ply_status_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_ply_status_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_ply_status_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_ply_status_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_ply_status_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_ply_status_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_ply_status_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_get_task_award_req. */
export interface Imahjong_cb_get_task_award_req {

    /** mahjong_cb_get_task_award_req type */
    type: number;

    /** mahjong_cb_get_task_award_req taskType */
    taskType: number;

    /** mahjong_cb_get_task_award_req lastTaskIndex */
    lastTaskIndex: number;
}

/** Represents a mahjong_cb_get_task_award_req. */
export class mahjong_cb_get_task_award_req implements Imahjong_cb_get_task_award_req {

    /**
     * Constructs a new mahjong_cb_get_task_award_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_get_task_award_req);

    /** mahjong_cb_get_task_award_req type. */
    public type: number;

    /** mahjong_cb_get_task_award_req taskType. */
    public taskType: number;

    /** mahjong_cb_get_task_award_req lastTaskIndex. */
    public lastTaskIndex: number;

    /**
     * Creates a new mahjong_cb_get_task_award_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_get_task_award_req instance
     */
    public static create(properties?: Imahjong_cb_get_task_award_req): mahjong_cb_get_task_award_req;

    /**
     * Encodes the specified mahjong_cb_get_task_award_req message. Does not implicitly {@link mahjong_cb_get_task_award_req.verify|verify} messages.
     * @param message mahjong_cb_get_task_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_get_task_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_get_task_award_req message, length delimited. Does not implicitly {@link mahjong_cb_get_task_award_req.verify|verify} messages.
     * @param message mahjong_cb_get_task_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_get_task_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_get_task_award_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_get_task_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_get_task_award_req;

    /**
     * Decodes a mahjong_cb_get_task_award_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_get_task_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_get_task_award_req;

    /**
     * Verifies a mahjong_cb_get_task_award_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_get_task_award_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_get_task_award_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_get_task_award_req;

    /**
     * Creates a plain object from a mahjong_cb_get_task_award_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_get_task_award_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_get_task_award_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_get_task_award_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_extra_relief_list_ack. */
export interface Imahjong_lc_get_extra_relief_list_ack {

    /** mahjong_lc_get_extra_relief_list_ack extraReliefs */
    extraReliefs?: (Imahjong_ExtraRelief[]|null);
}

/** Represents a mahjong_lc_get_extra_relief_list_ack. */
export class mahjong_lc_get_extra_relief_list_ack implements Imahjong_lc_get_extra_relief_list_ack {

    /**
     * Constructs a new mahjong_lc_get_extra_relief_list_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_extra_relief_list_ack);

    /** mahjong_lc_get_extra_relief_list_ack extraReliefs. */
    public extraReliefs: Imahjong_ExtraRelief[];

    /**
     * Creates a new mahjong_lc_get_extra_relief_list_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_extra_relief_list_ack instance
     */
    public static create(properties?: Imahjong_lc_get_extra_relief_list_ack): mahjong_lc_get_extra_relief_list_ack;

    /**
     * Encodes the specified mahjong_lc_get_extra_relief_list_ack message. Does not implicitly {@link mahjong_lc_get_extra_relief_list_ack.verify|verify} messages.
     * @param message mahjong_lc_get_extra_relief_list_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_extra_relief_list_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_extra_relief_list_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_extra_relief_list_ack.verify|verify} messages.
     * @param message mahjong_lc_get_extra_relief_list_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_extra_relief_list_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_extra_relief_list_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_extra_relief_list_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_extra_relief_list_ack;

    /**
     * Decodes a mahjong_lc_get_extra_relief_list_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_extra_relief_list_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_extra_relief_list_ack;

    /**
     * Verifies a mahjong_lc_get_extra_relief_list_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_extra_relief_list_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_extra_relief_list_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_extra_relief_list_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_extra_relief_list_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_extra_relief_list_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_extra_relief_list_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_extra_relief_list_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_PlySvrStatus. */
export interface Imahjong_PlySvrStatus {

    /** mahjong_PlySvrStatus plyGuid */
    plyGuid: (number|Long);

    /** mahjong_PlySvrStatus plyNickname */
    plyNickname: string;

    /** mahjong_PlySvrStatus plyStatus */
    plyStatus: number;

    /** mahjong_PlySvrStatus sex */
    sex: number;

    /** mahjong_PlySvrStatus gameId */
    gameId: number;

    /** mahjong_PlySvrStatus loginServerId */
    loginServerId: number;

    /** mahjong_PlySvrStatus gameServerId */
    gameServerId: number;

    /** mahjong_PlySvrStatus tableId */
    tableId: number;

    /** mahjong_PlySvrStatus money */
    money: (number|Long);

    /** mahjong_PlySvrStatus won */
    won: number;

    /** mahjong_PlySvrStatus lost */
    lost: number;

    /** mahjong_PlySvrStatus moneyRank */
    moneyRank: number;

    /** mahjong_PlySvrStatus wonRank */
    wonRank: number;

    /** mahjong_PlySvrStatus param_1 */
    param_1: number;

    /** mahjong_PlySvrStatus param_2 */
    param_2: number;

    /** mahjong_PlySvrStatus latitude */
    latitude: number;

    /** mahjong_PlySvrStatus longitude */
    longitude: number;
}

/** Represents a mahjong_PlySvrStatus. */
export class mahjong_PlySvrStatus implements Imahjong_PlySvrStatus {

    /**
     * Constructs a new mahjong_PlySvrStatus.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_PlySvrStatus);

    /** mahjong_PlySvrStatus plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_PlySvrStatus plyNickname. */
    public plyNickname: string;

    /** mahjong_PlySvrStatus plyStatus. */
    public plyStatus: number;

    /** mahjong_PlySvrStatus sex. */
    public sex: number;

    /** mahjong_PlySvrStatus gameId. */
    public gameId: number;

    /** mahjong_PlySvrStatus loginServerId. */
    public loginServerId: number;

    /** mahjong_PlySvrStatus gameServerId. */
    public gameServerId: number;

    /** mahjong_PlySvrStatus tableId. */
    public tableId: number;

    /** mahjong_PlySvrStatus money. */
    public money: (number|Long);

    /** mahjong_PlySvrStatus won. */
    public won: number;

    /** mahjong_PlySvrStatus lost. */
    public lost: number;

    /** mahjong_PlySvrStatus moneyRank. */
    public moneyRank: number;

    /** mahjong_PlySvrStatus wonRank. */
    public wonRank: number;

    /** mahjong_PlySvrStatus param_1. */
    public param_1: number;

    /** mahjong_PlySvrStatus param_2. */
    public param_2: number;

    /** mahjong_PlySvrStatus latitude. */
    public latitude: number;

    /** mahjong_PlySvrStatus longitude. */
    public longitude: number;

    /**
     * Creates a new mahjong_PlySvrStatus instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_PlySvrStatus instance
     */
    public static create(properties?: Imahjong_PlySvrStatus): mahjong_PlySvrStatus;

    /**
     * Encodes the specified mahjong_PlySvrStatus message. Does not implicitly {@link mahjong_PlySvrStatus.verify|verify} messages.
     * @param message mahjong_PlySvrStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_PlySvrStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_PlySvrStatus message, length delimited. Does not implicitly {@link mahjong_PlySvrStatus.verify|verify} messages.
     * @param message mahjong_PlySvrStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_PlySvrStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_PlySvrStatus message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_PlySvrStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_PlySvrStatus;

    /**
     * Decodes a mahjong_PlySvrStatus message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_PlySvrStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_PlySvrStatus;

    /**
     * Verifies a mahjong_PlySvrStatus message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_PlySvrStatus message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_PlySvrStatus
     */
    public static fromObject(object: { [k: string]: any }): mahjong_PlySvrStatus;

    /**
     * Creates a plain object from a mahjong_PlySvrStatus message. Also converts values to other types if specified.
     * @param message mahjong_PlySvrStatus
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_PlySvrStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_PlySvrStatus to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_give_back_win_money_req. */
export interface Imahjong_cb_give_back_win_money_req {

    /** mahjong_cb_give_back_win_money_req srcGuid */
    srcGuid: (number|Long);

    /** mahjong_cb_give_back_win_money_req dstGuid */
    dstGuid: (number|Long);

    /** mahjong_cb_give_back_win_money_req moneyAmount */
    moneyAmount: (number|Long);
}

/** Represents a mahjong_cb_give_back_win_money_req. */
export class mahjong_cb_give_back_win_money_req implements Imahjong_cb_give_back_win_money_req {

    /**
     * Constructs a new mahjong_cb_give_back_win_money_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_give_back_win_money_req);

    /** mahjong_cb_give_back_win_money_req srcGuid. */
    public srcGuid: (number|Long);

    /** mahjong_cb_give_back_win_money_req dstGuid. */
    public dstGuid: (number|Long);

    /** mahjong_cb_give_back_win_money_req moneyAmount. */
    public moneyAmount: (number|Long);

    /**
     * Creates a new mahjong_cb_give_back_win_money_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_give_back_win_money_req instance
     */
    public static create(properties?: Imahjong_cb_give_back_win_money_req): mahjong_cb_give_back_win_money_req;

    /**
     * Encodes the specified mahjong_cb_give_back_win_money_req message. Does not implicitly {@link mahjong_cb_give_back_win_money_req.verify|verify} messages.
     * @param message mahjong_cb_give_back_win_money_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_give_back_win_money_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_give_back_win_money_req message, length delimited. Does not implicitly {@link mahjong_cb_give_back_win_money_req.verify|verify} messages.
     * @param message mahjong_cb_give_back_win_money_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_give_back_win_money_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_give_back_win_money_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_give_back_win_money_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_give_back_win_money_req;

    /**
     * Decodes a mahjong_cb_give_back_win_money_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_give_back_win_money_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_give_back_win_money_req;

    /**
     * Verifies a mahjong_cb_give_back_win_money_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_give_back_win_money_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_give_back_win_money_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_give_back_win_money_req;

    /**
     * Creates a plain object from a mahjong_cb_give_back_win_money_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_give_back_win_money_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_give_back_win_money_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_give_back_win_money_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_PlyDataItem. */
export interface Imahjong_PlyDataItem {

    /** mahjong_PlyDataItem reason */
    reason: number;

    /** mahjong_PlyDataItem index */
    index: number;

    /** mahjong_PlyDataItem variant */
    variant: number;
}

/** Represents a mahjong_PlyDataItem. */
export class mahjong_PlyDataItem implements Imahjong_PlyDataItem {

    /**
     * Constructs a new mahjong_PlyDataItem.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_PlyDataItem);

    /** mahjong_PlyDataItem reason. */
    public reason: number;

    /** mahjong_PlyDataItem index. */
    public index: number;

    /** mahjong_PlyDataItem variant. */
    public variant: number;

    /**
     * Creates a new mahjong_PlyDataItem instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_PlyDataItem instance
     */
    public static create(properties?: Imahjong_PlyDataItem): mahjong_PlyDataItem;

    /**
     * Encodes the specified mahjong_PlyDataItem message. Does not implicitly {@link mahjong_PlyDataItem.verify|verify} messages.
     * @param message mahjong_PlyDataItem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_PlyDataItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_PlyDataItem message, length delimited. Does not implicitly {@link mahjong_PlyDataItem.verify|verify} messages.
     * @param message mahjong_PlyDataItem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_PlyDataItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_PlyDataItem message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_PlyDataItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_PlyDataItem;

    /**
     * Decodes a mahjong_PlyDataItem message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_PlyDataItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_PlyDataItem;

    /**
     * Verifies a mahjong_PlyDataItem message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_PlyDataItem message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_PlyDataItem
     */
    public static fromObject(object: { [k: string]: any }): mahjong_PlyDataItem;

    /**
     * Creates a plain object from a mahjong_PlyDataItem message. Also converts values to other types if specified.
     * @param message mahjong_PlyDataItem
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_PlyDataItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_PlyDataItem to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_br_need_send_robot_not. */
export interface Imahjong_br_need_send_robot_not {

    /** mahjong_br_need_send_robot_not tableId */
    tableId: number;

    /** mahjong_br_need_send_robot_not needGender */
    needGender: number;
}

/** Represents a mahjong_br_need_send_robot_not. */
export class mahjong_br_need_send_robot_not implements Imahjong_br_need_send_robot_not {

    /**
     * Constructs a new mahjong_br_need_send_robot_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_br_need_send_robot_not);

    /** mahjong_br_need_send_robot_not tableId. */
    public tableId: number;

    /** mahjong_br_need_send_robot_not needGender. */
    public needGender: number;

    /**
     * Creates a new mahjong_br_need_send_robot_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_br_need_send_robot_not instance
     */
    public static create(properties?: Imahjong_br_need_send_robot_not): mahjong_br_need_send_robot_not;

    /**
     * Encodes the specified mahjong_br_need_send_robot_not message. Does not implicitly {@link mahjong_br_need_send_robot_not.verify|verify} messages.
     * @param message mahjong_br_need_send_robot_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_br_need_send_robot_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_br_need_send_robot_not message, length delimited. Does not implicitly {@link mahjong_br_need_send_robot_not.verify|verify} messages.
     * @param message mahjong_br_need_send_robot_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_br_need_send_robot_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_br_need_send_robot_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_br_need_send_robot_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_br_need_send_robot_not;

    /**
     * Decodes a mahjong_br_need_send_robot_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_br_need_send_robot_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_br_need_send_robot_not;

    /**
     * Verifies a mahjong_br_need_send_robot_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_br_need_send_robot_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_br_need_send_robot_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_br_need_send_robot_not;

    /**
     * Creates a plain object from a mahjong_br_need_send_robot_not message. Also converts values to other types if specified.
     * @param message mahjong_br_need_send_robot_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_br_need_send_robot_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_br_need_send_robot_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_use_spec_props_not. */
export interface Imahjong_bc_use_spec_props_not {

    /** mahjong_bc_use_spec_props_not srcPlyGuid */
    srcPlyGuid: (number|Long);

    /** mahjong_bc_use_spec_props_not dstPlyGuid */
    dstPlyGuid: (number|Long);

    /** mahjong_bc_use_spec_props_not index */
    index: number;

    /** mahjong_bc_use_spec_props_not amount */
    amount: number;
}

/** Represents a mahjong_bc_use_spec_props_not. */
export class mahjong_bc_use_spec_props_not implements Imahjong_bc_use_spec_props_not {

    /**
     * Constructs a new mahjong_bc_use_spec_props_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_use_spec_props_not);

    /** mahjong_bc_use_spec_props_not srcPlyGuid. */
    public srcPlyGuid: (number|Long);

    /** mahjong_bc_use_spec_props_not dstPlyGuid. */
    public dstPlyGuid: (number|Long);

    /** mahjong_bc_use_spec_props_not index. */
    public index: number;

    /** mahjong_bc_use_spec_props_not amount. */
    public amount: number;

    /**
     * Creates a new mahjong_bc_use_spec_props_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_use_spec_props_not instance
     */
    public static create(properties?: Imahjong_bc_use_spec_props_not): mahjong_bc_use_spec_props_not;

    /**
     * Encodes the specified mahjong_bc_use_spec_props_not message. Does not implicitly {@link mahjong_bc_use_spec_props_not.verify|verify} messages.
     * @param message mahjong_bc_use_spec_props_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_use_spec_props_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_use_spec_props_not message, length delimited. Does not implicitly {@link mahjong_bc_use_spec_props_not.verify|verify} messages.
     * @param message mahjong_bc_use_spec_props_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_use_spec_props_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_use_spec_props_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_use_spec_props_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_use_spec_props_not;

    /**
     * Decodes a mahjong_bc_use_spec_props_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_use_spec_props_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_use_spec_props_not;

    /**
     * Verifies a mahjong_bc_use_spec_props_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_use_spec_props_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_use_spec_props_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_use_spec_props_not;

    /**
     * Creates a plain object from a mahjong_bc_use_spec_props_not message. Also converts values to other types if specified.
     * @param message mahjong_bc_use_spec_props_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_use_spec_props_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_use_spec_props_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_kickout_ack. */
export interface Imahjong_bc_kickout_ack {

    /** mahjong_bc_kickout_ack ret */
    ret: number;

    /** mahjong_bc_kickout_ack dstPlyGuid */
    dstPlyGuid: (number|Long);

    /** mahjong_bc_kickout_ack itemNum */
    itemNum: number;
}

/** Represents a mahjong_bc_kickout_ack. */
export class mahjong_bc_kickout_ack implements Imahjong_bc_kickout_ack {

    /**
     * Constructs a new mahjong_bc_kickout_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_kickout_ack);

    /** mahjong_bc_kickout_ack ret. */
    public ret: number;

    /** mahjong_bc_kickout_ack dstPlyGuid. */
    public dstPlyGuid: (number|Long);

    /** mahjong_bc_kickout_ack itemNum. */
    public itemNum: number;

    /**
     * Creates a new mahjong_bc_kickout_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_kickout_ack instance
     */
    public static create(properties?: Imahjong_bc_kickout_ack): mahjong_bc_kickout_ack;

    /**
     * Encodes the specified mahjong_bc_kickout_ack message. Does not implicitly {@link mahjong_bc_kickout_ack.verify|verify} messages.
     * @param message mahjong_bc_kickout_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_kickout_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_kickout_ack message, length delimited. Does not implicitly {@link mahjong_bc_kickout_ack.verify|verify} messages.
     * @param message mahjong_bc_kickout_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_kickout_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_kickout_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_kickout_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_kickout_ack;

    /**
     * Decodes a mahjong_bc_kickout_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_kickout_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_kickout_ack;

    /**
     * Verifies a mahjong_bc_kickout_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_kickout_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_kickout_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_kickout_ack;

    /**
     * Creates a plain object from a mahjong_bc_kickout_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_kickout_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_kickout_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_kickout_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_robot_info. */
export interface Imahjong_robot_info {

    /** mahjong_robot_info onlineRobot */
    onlineRobot: number;

    /** mahjong_robot_info ingameRobot */
    ingameRobot: number;

    /** mahjong_robot_info robotInQueue */
    robotInQueue: number;

    /** mahjong_robot_info lastMatchZeit */
    lastMatchZeit: number;
}

/** Represents a mahjong_robot_info. */
export class mahjong_robot_info implements Imahjong_robot_info {

    /**
     * Constructs a new mahjong_robot_info.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_robot_info);

    /** mahjong_robot_info onlineRobot. */
    public onlineRobot: number;

    /** mahjong_robot_info ingameRobot. */
    public ingameRobot: number;

    /** mahjong_robot_info robotInQueue. */
    public robotInQueue: number;

    /** mahjong_robot_info lastMatchZeit. */
    public lastMatchZeit: number;

    /**
     * Creates a new mahjong_robot_info instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_robot_info instance
     */
    public static create(properties?: Imahjong_robot_info): mahjong_robot_info;

    /**
     * Encodes the specified mahjong_robot_info message. Does not implicitly {@link mahjong_robot_info.verify|verify} messages.
     * @param message mahjong_robot_info message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_robot_info, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_robot_info message, length delimited. Does not implicitly {@link mahjong_robot_info.verify|verify} messages.
     * @param message mahjong_robot_info message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_robot_info, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_robot_info message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_robot_info
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_robot_info;

    /**
     * Decodes a mahjong_robot_info message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_robot_info
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_robot_info;

    /**
     * Verifies a mahjong_robot_info message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_robot_info message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_robot_info
     */
    public static fromObject(object: { [k: string]: any }): mahjong_robot_info;

    /**
     * Creates a plain object from a mahjong_robot_info message. Also converts values to other types if specified.
     * @param message mahjong_robot_info
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_robot_info, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_robot_info to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_UserLevelDesc. */
export interface Imahjong_UserLevelDesc {

    /** mahjong_UserLevelDesc level */
    level: number;

    /** mahjong_UserLevelDesc desc */
    desc: string;

    /** mahjong_UserLevelDesc colorId */
    colorId: number;
}

/** Represents a mahjong_UserLevelDesc. */
export class mahjong_UserLevelDesc implements Imahjong_UserLevelDesc {

    /**
     * Constructs a new mahjong_UserLevelDesc.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_UserLevelDesc);

    /** mahjong_UserLevelDesc level. */
    public level: number;

    /** mahjong_UserLevelDesc desc. */
    public desc: string;

    /** mahjong_UserLevelDesc colorId. */
    public colorId: number;

    /**
     * Creates a new mahjong_UserLevelDesc instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_UserLevelDesc instance
     */
    public static create(properties?: Imahjong_UserLevelDesc): mahjong_UserLevelDesc;

    /**
     * Encodes the specified mahjong_UserLevelDesc message. Does not implicitly {@link mahjong_UserLevelDesc.verify|verify} messages.
     * @param message mahjong_UserLevelDesc message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_UserLevelDesc, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_UserLevelDesc message, length delimited. Does not implicitly {@link mahjong_UserLevelDesc.verify|verify} messages.
     * @param message mahjong_UserLevelDesc message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_UserLevelDesc, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_UserLevelDesc message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_UserLevelDesc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_UserLevelDesc;

    /**
     * Decodes a mahjong_UserLevelDesc message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_UserLevelDesc
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_UserLevelDesc;

    /**
     * Verifies a mahjong_UserLevelDesc message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_UserLevelDesc message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_UserLevelDesc
     */
    public static fromObject(object: { [k: string]: any }): mahjong_UserLevelDesc;

    /**
     * Creates a plain object from a mahjong_UserLevelDesc message. Also converts values to other types if specified.
     * @param message mahjong_UserLevelDesc
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_UserLevelDesc, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_UserLevelDesc to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_send_prop_ack. */
export interface Imahjong_bc_send_prop_ack {

    /** mahjong_bc_send_prop_ack ret */
    ret: number;

    /** mahjong_bc_send_prop_ack dstPlyGuid */
    dstPlyGuid: (number|Long);

    /** mahjong_bc_send_prop_ack index */
    index: number;

    /** mahjong_bc_send_prop_ack itemNum */
    itemNum: number;
}

/** Represents a mahjong_bc_send_prop_ack. */
export class mahjong_bc_send_prop_ack implements Imahjong_bc_send_prop_ack {

    /**
     * Constructs a new mahjong_bc_send_prop_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_send_prop_ack);

    /** mahjong_bc_send_prop_ack ret. */
    public ret: number;

    /** mahjong_bc_send_prop_ack dstPlyGuid. */
    public dstPlyGuid: (number|Long);

    /** mahjong_bc_send_prop_ack index. */
    public index: number;

    /** mahjong_bc_send_prop_ack itemNum. */
    public itemNum: number;

    /**
     * Creates a new mahjong_bc_send_prop_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_send_prop_ack instance
     */
    public static create(properties?: Imahjong_bc_send_prop_ack): mahjong_bc_send_prop_ack;

    /**
     * Encodes the specified mahjong_bc_send_prop_ack message. Does not implicitly {@link mahjong_bc_send_prop_ack.verify|verify} messages.
     * @param message mahjong_bc_send_prop_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_send_prop_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_send_prop_ack message, length delimited. Does not implicitly {@link mahjong_bc_send_prop_ack.verify|verify} messages.
     * @param message mahjong_bc_send_prop_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_send_prop_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_send_prop_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_send_prop_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_send_prop_ack;

    /**
     * Decodes a mahjong_bc_send_prop_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_send_prop_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_send_prop_ack;

    /**
     * Verifies a mahjong_bc_send_prop_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_send_prop_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_send_prop_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_send_prop_ack;

    /**
     * Creates a plain object from a mahjong_bc_send_prop_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_send_prop_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_send_prop_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_send_prop_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_get_luck_draw_data_list_ack. */
export interface Imahjong_bc_get_luck_draw_data_list_ack {

    /** mahjong_bc_get_luck_draw_data_list_ack ret */
    ret: number;

    /** mahjong_bc_get_luck_draw_data_list_ack items */
    items?: (Imahjong_LuckDrawItemData[]|null);
}

/** Represents a mahjong_bc_get_luck_draw_data_list_ack. */
export class mahjong_bc_get_luck_draw_data_list_ack implements Imahjong_bc_get_luck_draw_data_list_ack {

    /**
     * Constructs a new mahjong_bc_get_luck_draw_data_list_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_get_luck_draw_data_list_ack);

    /** mahjong_bc_get_luck_draw_data_list_ack ret. */
    public ret: number;

    /** mahjong_bc_get_luck_draw_data_list_ack items. */
    public items: Imahjong_LuckDrawItemData[];

    /**
     * Creates a new mahjong_bc_get_luck_draw_data_list_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_get_luck_draw_data_list_ack instance
     */
    public static create(properties?: Imahjong_bc_get_luck_draw_data_list_ack): mahjong_bc_get_luck_draw_data_list_ack;

    /**
     * Encodes the specified mahjong_bc_get_luck_draw_data_list_ack message. Does not implicitly {@link mahjong_bc_get_luck_draw_data_list_ack.verify|verify} messages.
     * @param message mahjong_bc_get_luck_draw_data_list_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_get_luck_draw_data_list_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_get_luck_draw_data_list_ack message, length delimited. Does not implicitly {@link mahjong_bc_get_luck_draw_data_list_ack.verify|verify} messages.
     * @param message mahjong_bc_get_luck_draw_data_list_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_get_luck_draw_data_list_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_get_luck_draw_data_list_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_get_luck_draw_data_list_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_get_luck_draw_data_list_ack;

    /**
     * Decodes a mahjong_bc_get_luck_draw_data_list_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_get_luck_draw_data_list_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_get_luck_draw_data_list_ack;

    /**
     * Verifies a mahjong_bc_get_luck_draw_data_list_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_get_luck_draw_data_list_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_get_luck_draw_data_list_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_get_luck_draw_data_list_ack;

    /**
     * Creates a plain object from a mahjong_bc_get_luck_draw_data_list_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_get_luck_draw_data_list_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_get_luck_draw_data_list_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_get_luck_draw_data_list_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_give_back_win_money_ack. */
export interface Imahjong_bc_give_back_win_money_ack {

    /** mahjong_bc_give_back_win_money_ack ret */
    ret: number;

    /** mahjong_bc_give_back_win_money_ack frdNickname */
    frdNickname: string;

    /** mahjong_bc_give_back_win_money_ack moneyAmount */
    moneyAmount: (number|Long);
}

/** Represents a mahjong_bc_give_back_win_money_ack. */
export class mahjong_bc_give_back_win_money_ack implements Imahjong_bc_give_back_win_money_ack {

    /**
     * Constructs a new mahjong_bc_give_back_win_money_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_give_back_win_money_ack);

    /** mahjong_bc_give_back_win_money_ack ret. */
    public ret: number;

    /** mahjong_bc_give_back_win_money_ack frdNickname. */
    public frdNickname: string;

    /** mahjong_bc_give_back_win_money_ack moneyAmount. */
    public moneyAmount: (number|Long);

    /**
     * Creates a new mahjong_bc_give_back_win_money_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_give_back_win_money_ack instance
     */
    public static create(properties?: Imahjong_bc_give_back_win_money_ack): mahjong_bc_give_back_win_money_ack;

    /**
     * Encodes the specified mahjong_bc_give_back_win_money_ack message. Does not implicitly {@link mahjong_bc_give_back_win_money_ack.verify|verify} messages.
     * @param message mahjong_bc_give_back_win_money_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_give_back_win_money_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_give_back_win_money_ack message, length delimited. Does not implicitly {@link mahjong_bc_give_back_win_money_ack.verify|verify} messages.
     * @param message mahjong_bc_give_back_win_money_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_give_back_win_money_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_give_back_win_money_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_give_back_win_money_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_give_back_win_money_ack;

    /**
     * Decodes a mahjong_bc_give_back_win_money_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_give_back_win_money_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_give_back_win_money_ack;

    /**
     * Verifies a mahjong_bc_give_back_win_money_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_give_back_win_money_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_give_back_win_money_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_give_back_win_money_ack;

    /**
     * Creates a plain object from a mahjong_bc_give_back_win_money_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_give_back_win_money_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_give_back_win_money_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_give_back_win_money_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_player_level_ack. */
export interface Imahjong_lc_get_player_level_ack {

    /** mahjong_lc_get_player_level_ack ret */
    ret: number;

    /** mahjong_lc_get_player_level_ack level */
    level: number;

    /** mahjong_lc_get_player_level_ack exp */
    exp: number;

    /** mahjong_lc_get_player_level_ack nextExp */
    nextExp: number;
}

/** Represents a mahjong_lc_get_player_level_ack. */
export class mahjong_lc_get_player_level_ack implements Imahjong_lc_get_player_level_ack {

    /**
     * Constructs a new mahjong_lc_get_player_level_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_player_level_ack);

    /** mahjong_lc_get_player_level_ack ret. */
    public ret: number;

    /** mahjong_lc_get_player_level_ack level. */
    public level: number;

    /** mahjong_lc_get_player_level_ack exp. */
    public exp: number;

    /** mahjong_lc_get_player_level_ack nextExp. */
    public nextExp: number;

    /**
     * Creates a new mahjong_lc_get_player_level_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_player_level_ack instance
     */
    public static create(properties?: Imahjong_lc_get_player_level_ack): mahjong_lc_get_player_level_ack;

    /**
     * Encodes the specified mahjong_lc_get_player_level_ack message. Does not implicitly {@link mahjong_lc_get_player_level_ack.verify|verify} messages.
     * @param message mahjong_lc_get_player_level_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_player_level_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_player_level_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_player_level_ack.verify|verify} messages.
     * @param message mahjong_lc_get_player_level_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_player_level_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_player_level_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_player_level_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_player_level_ack;

    /**
     * Decodes a mahjong_lc_get_player_level_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_player_level_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_player_level_ack;

    /**
     * Verifies a mahjong_lc_get_player_level_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_player_level_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_player_level_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_player_level_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_player_level_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_player_level_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_player_level_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_player_level_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_get_table_list_ack. */
export interface Imahjong_bc_get_table_list_ack {

    /** mahjong_bc_get_table_list_ack items */
    items?: (Imahjong_TableItemAttr[]|null);
}

/** Represents a mahjong_bc_get_table_list_ack. */
export class mahjong_bc_get_table_list_ack implements Imahjong_bc_get_table_list_ack {

    /**
     * Constructs a new mahjong_bc_get_table_list_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_get_table_list_ack);

    /** mahjong_bc_get_table_list_ack items. */
    public items: Imahjong_TableItemAttr[];

    /**
     * Creates a new mahjong_bc_get_table_list_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_get_table_list_ack instance
     */
    public static create(properties?: Imahjong_bc_get_table_list_ack): mahjong_bc_get_table_list_ack;

    /**
     * Encodes the specified mahjong_bc_get_table_list_ack message. Does not implicitly {@link mahjong_bc_get_table_list_ack.verify|verify} messages.
     * @param message mahjong_bc_get_table_list_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_get_table_list_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_get_table_list_ack message, length delimited. Does not implicitly {@link mahjong_bc_get_table_list_ack.verify|verify} messages.
     * @param message mahjong_bc_get_table_list_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_get_table_list_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_get_table_list_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_get_table_list_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_get_table_list_ack;

    /**
     * Decodes a mahjong_bc_get_table_list_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_get_table_list_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_get_table_list_ack;

    /**
     * Verifies a mahjong_bc_get_table_list_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_get_table_list_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_get_table_list_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_get_table_list_ack;

    /**
     * Creates a plain object from a mahjong_bc_get_table_list_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_get_table_list_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_get_table_list_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_get_table_list_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_chat_req. */
export interface Imahjong_cb_chat_req {

    /** mahjong_cb_chat_req type */
    type: number;

    /** mahjong_cb_chat_req message */
    message: string;
}

/** Represents a mahjong_cb_chat_req. */
export class mahjong_cb_chat_req implements Imahjong_cb_chat_req {

    /**
     * Constructs a new mahjong_cb_chat_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_chat_req);

    /** mahjong_cb_chat_req type. */
    public type: number;

    /** mahjong_cb_chat_req message. */
    public message: string;

    /**
     * Creates a new mahjong_cb_chat_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_chat_req instance
     */
    public static create(properties?: Imahjong_cb_chat_req): mahjong_cb_chat_req;

    /**
     * Encodes the specified mahjong_cb_chat_req message. Does not implicitly {@link mahjong_cb_chat_req.verify|verify} messages.
     * @param message mahjong_cb_chat_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_chat_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_chat_req message, length delimited. Does not implicitly {@link mahjong_cb_chat_req.verify|verify} messages.
     * @param message mahjong_cb_chat_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_chat_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_chat_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_chat_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_chat_req;

    /**
     * Decodes a mahjong_cb_chat_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_chat_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_chat_req;

    /**
     * Verifies a mahjong_cb_chat_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_chat_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_chat_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_chat_req;

    /**
     * Creates a plain object from a mahjong_cb_chat_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_chat_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_chat_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_chat_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_user_data_broadcast_msg_not. */
export interface Imahjong_lc_user_data_broadcast_msg_not {

    /** mahjong_lc_user_data_broadcast_msg_not plyGuid */
    plyGuid: (number|Long);

    /** mahjong_lc_user_data_broadcast_msg_not message */
    message: string;
}

/** Represents a mahjong_lc_user_data_broadcast_msg_not. */
export class mahjong_lc_user_data_broadcast_msg_not implements Imahjong_lc_user_data_broadcast_msg_not {

    /**
     * Constructs a new mahjong_lc_user_data_broadcast_msg_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_user_data_broadcast_msg_not);

    /** mahjong_lc_user_data_broadcast_msg_not plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_lc_user_data_broadcast_msg_not message. */
    public message: string;

    /**
     * Creates a new mahjong_lc_user_data_broadcast_msg_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_user_data_broadcast_msg_not instance
     */
    public static create(properties?: Imahjong_lc_user_data_broadcast_msg_not): mahjong_lc_user_data_broadcast_msg_not;

    /**
     * Encodes the specified mahjong_lc_user_data_broadcast_msg_not message. Does not implicitly {@link mahjong_lc_user_data_broadcast_msg_not.verify|verify} messages.
     * @param message mahjong_lc_user_data_broadcast_msg_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_user_data_broadcast_msg_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_user_data_broadcast_msg_not message, length delimited. Does not implicitly {@link mahjong_lc_user_data_broadcast_msg_not.verify|verify} messages.
     * @param message mahjong_lc_user_data_broadcast_msg_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_user_data_broadcast_msg_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_user_data_broadcast_msg_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_user_data_broadcast_msg_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_user_data_broadcast_msg_not;

    /**
     * Decodes a mahjong_lc_user_data_broadcast_msg_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_user_data_broadcast_msg_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_user_data_broadcast_msg_not;

    /**
     * Verifies a mahjong_lc_user_data_broadcast_msg_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_user_data_broadcast_msg_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_user_data_broadcast_msg_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_user_data_broadcast_msg_not;

    /**
     * Creates a plain object from a mahjong_lc_user_data_broadcast_msg_not message. Also converts values to other types if specified.
     * @param message mahjong_lc_user_data_broadcast_msg_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_user_data_broadcast_msg_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_user_data_broadcast_msg_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_AchieveData. */
export interface Imahjong_AchieveData {

    /** mahjong_AchieveData index */
    index: number;

    /** mahjong_AchieveData value */
    value: number;

    /** mahjong_AchieveData max */
    max: number;

    /** mahjong_AchieveData status */
    status: number;

    /** mahjong_AchieveData moneyAward */
    moneyAward: number;

    /** mahjong_AchieveData giftAward */
    giftAward: number;

    /** mahjong_AchieveData name */
    name: string;

    /** mahjong_AchieveData desc */
    desc: string;
}

/** Represents a mahjong_AchieveData. */
export class mahjong_AchieveData implements Imahjong_AchieveData {

    /**
     * Constructs a new mahjong_AchieveData.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_AchieveData);

    /** mahjong_AchieveData index. */
    public index: number;

    /** mahjong_AchieveData value. */
    public value: number;

    /** mahjong_AchieveData max. */
    public max: number;

    /** mahjong_AchieveData status. */
    public status: number;

    /** mahjong_AchieveData moneyAward. */
    public moneyAward: number;

    /** mahjong_AchieveData giftAward. */
    public giftAward: number;

    /** mahjong_AchieveData name. */
    public name: string;

    /** mahjong_AchieveData desc. */
    public desc: string;

    /**
     * Creates a new mahjong_AchieveData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_AchieveData instance
     */
    public static create(properties?: Imahjong_AchieveData): mahjong_AchieveData;

    /**
     * Encodes the specified mahjong_AchieveData message. Does not implicitly {@link mahjong_AchieveData.verify|verify} messages.
     * @param message mahjong_AchieveData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_AchieveData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_AchieveData message, length delimited. Does not implicitly {@link mahjong_AchieveData.verify|verify} messages.
     * @param message mahjong_AchieveData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_AchieveData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_AchieveData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_AchieveData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_AchieveData;

    /**
     * Decodes a mahjong_AchieveData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_AchieveData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_AchieveData;

    /**
     * Verifies a mahjong_AchieveData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_AchieveData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_AchieveData
     */
    public static fromObject(object: { [k: string]: any }): mahjong_AchieveData;

    /**
     * Creates a plain object from a mahjong_AchieveData message. Also converts values to other types if specified.
     * @param message mahjong_AchieveData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_AchieveData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_AchieveData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_SeasonCardAwardInfo. */
export interface Imahjong_SeasonCardAwardInfo {

    /** mahjong_SeasonCardAwardInfo awardIndex */
    awardIndex: number;

    /** mahjong_SeasonCardAwardInfo awardNum */
    awardNum: number;
}

/** Represents a mahjong_SeasonCardAwardInfo. */
export class mahjong_SeasonCardAwardInfo implements Imahjong_SeasonCardAwardInfo {

    /**
     * Constructs a new mahjong_SeasonCardAwardInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_SeasonCardAwardInfo);

    /** mahjong_SeasonCardAwardInfo awardIndex. */
    public awardIndex: number;

    /** mahjong_SeasonCardAwardInfo awardNum. */
    public awardNum: number;

    /**
     * Creates a new mahjong_SeasonCardAwardInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_SeasonCardAwardInfo instance
     */
    public static create(properties?: Imahjong_SeasonCardAwardInfo): mahjong_SeasonCardAwardInfo;

    /**
     * Encodes the specified mahjong_SeasonCardAwardInfo message. Does not implicitly {@link mahjong_SeasonCardAwardInfo.verify|verify} messages.
     * @param message mahjong_SeasonCardAwardInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_SeasonCardAwardInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_SeasonCardAwardInfo message, length delimited. Does not implicitly {@link mahjong_SeasonCardAwardInfo.verify|verify} messages.
     * @param message mahjong_SeasonCardAwardInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_SeasonCardAwardInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_SeasonCardAwardInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_SeasonCardAwardInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_SeasonCardAwardInfo;

    /**
     * Decodes a mahjong_SeasonCardAwardInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_SeasonCardAwardInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_SeasonCardAwardInfo;

    /**
     * Verifies a mahjong_SeasonCardAwardInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_SeasonCardAwardInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_SeasonCardAwardInfo
     */
    public static fromObject(object: { [k: string]: any }): mahjong_SeasonCardAwardInfo;

    /**
     * Creates a plain object from a mahjong_SeasonCardAwardInfo message. Also converts values to other types if specified.
     * @param message mahjong_SeasonCardAwardInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_SeasonCardAwardInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_SeasonCardAwardInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_join_table_ack. */
export interface Imahjong_bc_join_table_ack {

    /** mahjong_bc_join_table_ack ret */
    ret: number;

    /** mahjong_bc_join_table_ack tableAttrs */
    tableAttrs: Imahjong_TableAttr;

    /** mahjong_bc_join_table_ack errMsg */
    errMsg: string;
}

/** Represents a mahjong_bc_join_table_ack. */
export class mahjong_bc_join_table_ack implements Imahjong_bc_join_table_ack {

    /**
     * Constructs a new mahjong_bc_join_table_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_join_table_ack);

    /** mahjong_bc_join_table_ack ret. */
    public ret: number;

    /** mahjong_bc_join_table_ack tableAttrs. */
    public tableAttrs: Imahjong_TableAttr;

    /** mahjong_bc_join_table_ack errMsg. */
    public errMsg: string;

    /**
     * Creates a new mahjong_bc_join_table_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_join_table_ack instance
     */
    public static create(properties?: Imahjong_bc_join_table_ack): mahjong_bc_join_table_ack;

    /**
     * Encodes the specified mahjong_bc_join_table_ack message. Does not implicitly {@link mahjong_bc_join_table_ack.verify|verify} messages.
     * @param message mahjong_bc_join_table_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_join_table_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_join_table_ack message, length delimited. Does not implicitly {@link mahjong_bc_join_table_ack.verify|verify} messages.
     * @param message mahjong_bc_join_table_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_join_table_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_join_table_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_join_table_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_join_table_ack;

    /**
     * Decodes a mahjong_bc_join_table_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_join_table_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_join_table_ack;

    /**
     * Verifies a mahjong_bc_join_table_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_join_table_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_join_table_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_join_table_ack;

    /**
     * Creates a plain object from a mahjong_bc_join_table_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_join_table_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_join_table_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_join_table_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_get_finished_newbie_award_ack. */
export interface Imahjong_bc_get_finished_newbie_award_ack {

    /** mahjong_bc_get_finished_newbie_award_ack ret */
    ret: number;

    /** mahjong_bc_get_finished_newbie_award_ack status */
    status: number;

    /** mahjong_bc_get_finished_newbie_award_ack index */
    index: number;

    /** mahjong_bc_get_finished_newbie_award_ack num */
    num: number;
}

/** Represents a mahjong_bc_get_finished_newbie_award_ack. */
export class mahjong_bc_get_finished_newbie_award_ack implements Imahjong_bc_get_finished_newbie_award_ack {

    /**
     * Constructs a new mahjong_bc_get_finished_newbie_award_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_get_finished_newbie_award_ack);

    /** mahjong_bc_get_finished_newbie_award_ack ret. */
    public ret: number;

    /** mahjong_bc_get_finished_newbie_award_ack status. */
    public status: number;

    /** mahjong_bc_get_finished_newbie_award_ack index. */
    public index: number;

    /** mahjong_bc_get_finished_newbie_award_ack num. */
    public num: number;

    /**
     * Creates a new mahjong_bc_get_finished_newbie_award_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_get_finished_newbie_award_ack instance
     */
    public static create(properties?: Imahjong_bc_get_finished_newbie_award_ack): mahjong_bc_get_finished_newbie_award_ack;

    /**
     * Encodes the specified mahjong_bc_get_finished_newbie_award_ack message. Does not implicitly {@link mahjong_bc_get_finished_newbie_award_ack.verify|verify} messages.
     * @param message mahjong_bc_get_finished_newbie_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_get_finished_newbie_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_get_finished_newbie_award_ack message, length delimited. Does not implicitly {@link mahjong_bc_get_finished_newbie_award_ack.verify|verify} messages.
     * @param message mahjong_bc_get_finished_newbie_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_get_finished_newbie_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_get_finished_newbie_award_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_get_finished_newbie_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_get_finished_newbie_award_ack;

    /**
     * Decodes a mahjong_bc_get_finished_newbie_award_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_get_finished_newbie_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_get_finished_newbie_award_ack;

    /**
     * Verifies a mahjong_bc_get_finished_newbie_award_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_get_finished_newbie_award_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_get_finished_newbie_award_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_get_finished_newbie_award_ack;

    /**
     * Creates a plain object from a mahjong_bc_get_finished_newbie_award_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_get_finished_newbie_award_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_get_finished_newbie_award_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_get_finished_newbie_award_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_ExtSigninAward. */
export interface Imahjong_ExtSigninAward {

    /** mahjong_ExtSigninAward days */
    days: number;

    /** mahjong_ExtSigninAward name */
    name: string;

    /** mahjong_ExtSigninAward awards */
    awards?: (Imahjong_ItemData[]|null);

    /** mahjong_ExtSigninAward state */
    state: number;
}

/** Represents a mahjong_ExtSigninAward. */
export class mahjong_ExtSigninAward implements Imahjong_ExtSigninAward {

    /**
     * Constructs a new mahjong_ExtSigninAward.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_ExtSigninAward);

    /** mahjong_ExtSigninAward days. */
    public days: number;

    /** mahjong_ExtSigninAward name. */
    public name: string;

    /** mahjong_ExtSigninAward awards. */
    public awards: Imahjong_ItemData[];

    /** mahjong_ExtSigninAward state. */
    public state: number;

    /**
     * Creates a new mahjong_ExtSigninAward instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_ExtSigninAward instance
     */
    public static create(properties?: Imahjong_ExtSigninAward): mahjong_ExtSigninAward;

    /**
     * Encodes the specified mahjong_ExtSigninAward message. Does not implicitly {@link mahjong_ExtSigninAward.verify|verify} messages.
     * @param message mahjong_ExtSigninAward message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_ExtSigninAward, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_ExtSigninAward message, length delimited. Does not implicitly {@link mahjong_ExtSigninAward.verify|verify} messages.
     * @param message mahjong_ExtSigninAward message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_ExtSigninAward, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_ExtSigninAward message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_ExtSigninAward
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_ExtSigninAward;

    /**
     * Decodes a mahjong_ExtSigninAward message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_ExtSigninAward
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_ExtSigninAward;

    /**
     * Verifies a mahjong_ExtSigninAward message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_ExtSigninAward message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_ExtSigninAward
     */
    public static fromObject(object: { [k: string]: any }): mahjong_ExtSigninAward;

    /**
     * Creates a plain object from a mahjong_ExtSigninAward message. Also converts values to other types if specified.
     * @param message mahjong_ExtSigninAward
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_ExtSigninAward, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_ExtSigninAward to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_update_extra_login_award_not. */
export interface Imahjong_lc_update_extra_login_award_not {

    /** mahjong_lc_update_extra_login_award_not items */
    items?: (Imahjong_ExtraLoginAward[]|null);

    /** mahjong_lc_update_extra_login_award_not msg */
    msg: string;
}

/** Represents a mahjong_lc_update_extra_login_award_not. */
export class mahjong_lc_update_extra_login_award_not implements Imahjong_lc_update_extra_login_award_not {

    /**
     * Constructs a new mahjong_lc_update_extra_login_award_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_update_extra_login_award_not);

    /** mahjong_lc_update_extra_login_award_not items. */
    public items: Imahjong_ExtraLoginAward[];

    /** mahjong_lc_update_extra_login_award_not msg. */
    public msg: string;

    /**
     * Creates a new mahjong_lc_update_extra_login_award_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_update_extra_login_award_not instance
     */
    public static create(properties?: Imahjong_lc_update_extra_login_award_not): mahjong_lc_update_extra_login_award_not;

    /**
     * Encodes the specified mahjong_lc_update_extra_login_award_not message. Does not implicitly {@link mahjong_lc_update_extra_login_award_not.verify|verify} messages.
     * @param message mahjong_lc_update_extra_login_award_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_update_extra_login_award_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_update_extra_login_award_not message, length delimited. Does not implicitly {@link mahjong_lc_update_extra_login_award_not.verify|verify} messages.
     * @param message mahjong_lc_update_extra_login_award_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_update_extra_login_award_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_update_extra_login_award_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_update_extra_login_award_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_update_extra_login_award_not;

    /**
     * Decodes a mahjong_lc_update_extra_login_award_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_update_extra_login_award_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_update_extra_login_award_not;

    /**
     * Verifies a mahjong_lc_update_extra_login_award_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_update_extra_login_award_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_update_extra_login_award_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_update_extra_login_award_not;

    /**
     * Creates a plain object from a mahjong_lc_update_extra_login_award_not message. Also converts values to other types if specified.
     * @param message mahjong_lc_update_extra_login_award_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_update_extra_login_award_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_update_extra_login_award_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_user_level_desc_req. */
export interface Imahjong_cl_get_user_level_desc_req {
}

/** Represents a mahjong_cl_get_user_level_desc_req. */
export class mahjong_cl_get_user_level_desc_req implements Imahjong_cl_get_user_level_desc_req {

    /**
     * Constructs a new mahjong_cl_get_user_level_desc_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_user_level_desc_req);

    /**
     * Creates a new mahjong_cl_get_user_level_desc_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_user_level_desc_req instance
     */
    public static create(properties?: Imahjong_cl_get_user_level_desc_req): mahjong_cl_get_user_level_desc_req;

    /**
     * Encodes the specified mahjong_cl_get_user_level_desc_req message. Does not implicitly {@link mahjong_cl_get_user_level_desc_req.verify|verify} messages.
     * @param message mahjong_cl_get_user_level_desc_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_user_level_desc_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_user_level_desc_req message, length delimited. Does not implicitly {@link mahjong_cl_get_user_level_desc_req.verify|verify} messages.
     * @param message mahjong_cl_get_user_level_desc_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_user_level_desc_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_user_level_desc_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_user_level_desc_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_user_level_desc_req;

    /**
     * Decodes a mahjong_cl_get_user_level_desc_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_user_level_desc_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_user_level_desc_req;

    /**
     * Verifies a mahjong_cl_get_user_level_desc_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_user_level_desc_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_user_level_desc_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_user_level_desc_req;

    /**
     * Creates a plain object from a mahjong_cl_get_user_level_desc_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_user_level_desc_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_user_level_desc_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_user_level_desc_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_ATAchieveData. */
export interface Imahjong_ATAchieveData {

    /** mahjong_ATAchieveData gameId */
    gameId: number;

    /** mahjong_ATAchieveData type */
    type: number;

    /** mahjong_ATAchieveData index */
    index: number;

    /** mahjong_ATAchieveData cond */
    cond: number;

    /** mahjong_ATAchieveData value */
    value: number;

    /** mahjong_ATAchieveData max */
    max: number;

    /** mahjong_ATAchieveData status */
    status: number;

    /** mahjong_ATAchieveData merge */
    merge: number;

    /** mahjong_ATAchieveData vecAwards */
    vecAwards?: (Imahjong_ATAchieveAward[]|null);

    /** mahjong_ATAchieveData name */
    name: string;

    /** mahjong_ATAchieveData desc */
    desc: string;
}

/** Represents a mahjong_ATAchieveData. */
export class mahjong_ATAchieveData implements Imahjong_ATAchieveData {

    /**
     * Constructs a new mahjong_ATAchieveData.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_ATAchieveData);

    /** mahjong_ATAchieveData gameId. */
    public gameId: number;

    /** mahjong_ATAchieveData type. */
    public type: number;

    /** mahjong_ATAchieveData index. */
    public index: number;

    /** mahjong_ATAchieveData cond. */
    public cond: number;

    /** mahjong_ATAchieveData value. */
    public value: number;

    /** mahjong_ATAchieveData max. */
    public max: number;

    /** mahjong_ATAchieveData status. */
    public status: number;

    /** mahjong_ATAchieveData merge. */
    public merge: number;

    /** mahjong_ATAchieveData vecAwards. */
    public vecAwards: Imahjong_ATAchieveAward[];

    /** mahjong_ATAchieveData name. */
    public name: string;

    /** mahjong_ATAchieveData desc. */
    public desc: string;

    /**
     * Creates a new mahjong_ATAchieveData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_ATAchieveData instance
     */
    public static create(properties?: Imahjong_ATAchieveData): mahjong_ATAchieveData;

    /**
     * Encodes the specified mahjong_ATAchieveData message. Does not implicitly {@link mahjong_ATAchieveData.verify|verify} messages.
     * @param message mahjong_ATAchieveData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_ATAchieveData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_ATAchieveData message, length delimited. Does not implicitly {@link mahjong_ATAchieveData.verify|verify} messages.
     * @param message mahjong_ATAchieveData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_ATAchieveData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_ATAchieveData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_ATAchieveData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_ATAchieveData;

    /**
     * Decodes a mahjong_ATAchieveData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_ATAchieveData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_ATAchieveData;

    /**
     * Verifies a mahjong_ATAchieveData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_ATAchieveData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_ATAchieveData
     */
    public static fromObject(object: { [k: string]: any }): mahjong_ATAchieveData;

    /**
     * Creates a plain object from a mahjong_ATAchieveData message. Also converts values to other types if specified.
     * @param message mahjong_ATAchieveData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_ATAchieveData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_ATAchieveData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_sync_item_data_notf. */
export interface Imahjong_lc_sync_item_data_notf {

    /** mahjong_lc_sync_item_data_notf itemIndex */
    itemIndex: number;

    /** mahjong_lc_sync_item_data_notf itemNum */
    itemNum: number;
}

/** Represents a mahjong_lc_sync_item_data_notf. */
export class mahjong_lc_sync_item_data_notf implements Imahjong_lc_sync_item_data_notf {

    /**
     * Constructs a new mahjong_lc_sync_item_data_notf.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_sync_item_data_notf);

    /** mahjong_lc_sync_item_data_notf itemIndex. */
    public itemIndex: number;

    /** mahjong_lc_sync_item_data_notf itemNum. */
    public itemNum: number;

    /**
     * Creates a new mahjong_lc_sync_item_data_notf instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_sync_item_data_notf instance
     */
    public static create(properties?: Imahjong_lc_sync_item_data_notf): mahjong_lc_sync_item_data_notf;

    /**
     * Encodes the specified mahjong_lc_sync_item_data_notf message. Does not implicitly {@link mahjong_lc_sync_item_data_notf.verify|verify} messages.
     * @param message mahjong_lc_sync_item_data_notf message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_sync_item_data_notf, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_sync_item_data_notf message, length delimited. Does not implicitly {@link mahjong_lc_sync_item_data_notf.verify|verify} messages.
     * @param message mahjong_lc_sync_item_data_notf message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_sync_item_data_notf, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_sync_item_data_notf message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_sync_item_data_notf
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_sync_item_data_notf;

    /**
     * Decodes a mahjong_lc_sync_item_data_notf message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_sync_item_data_notf
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_sync_item_data_notf;

    /**
     * Verifies a mahjong_lc_sync_item_data_notf message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_sync_item_data_notf message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_sync_item_data_notf
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_sync_item_data_notf;

    /**
     * Creates a plain object from a mahjong_lc_sync_item_data_notf message. Also converts values to other types if specified.
     * @param message mahjong_lc_sync_item_data_notf
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_sync_item_data_notf, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_sync_item_data_notf to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_get_win_round_score_req. */
export interface Imahjong_cb_get_win_round_score_req {

    /** mahjong_cb_get_win_round_score_req plyGuid */
    plyGuid: (number|Long);
}

/** Represents a mahjong_cb_get_win_round_score_req. */
export class mahjong_cb_get_win_round_score_req implements Imahjong_cb_get_win_round_score_req {

    /**
     * Constructs a new mahjong_cb_get_win_round_score_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_get_win_round_score_req);

    /** mahjong_cb_get_win_round_score_req plyGuid. */
    public plyGuid: (number|Long);

    /**
     * Creates a new mahjong_cb_get_win_round_score_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_get_win_round_score_req instance
     */
    public static create(properties?: Imahjong_cb_get_win_round_score_req): mahjong_cb_get_win_round_score_req;

    /**
     * Encodes the specified mahjong_cb_get_win_round_score_req message. Does not implicitly {@link mahjong_cb_get_win_round_score_req.verify|verify} messages.
     * @param message mahjong_cb_get_win_round_score_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_get_win_round_score_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_get_win_round_score_req message, length delimited. Does not implicitly {@link mahjong_cb_get_win_round_score_req.verify|verify} messages.
     * @param message mahjong_cb_get_win_round_score_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_get_win_round_score_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_get_win_round_score_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_get_win_round_score_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_get_win_round_score_req;

    /**
     * Decodes a mahjong_cb_get_win_round_score_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_get_win_round_score_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_get_win_round_score_req;

    /**
     * Verifies a mahjong_cb_get_win_round_score_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_get_win_round_score_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_get_win_round_score_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_get_win_round_score_req;

    /**
     * Creates a plain object from a mahjong_cb_get_win_round_score_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_get_win_round_score_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_get_win_round_score_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_get_win_round_score_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_ExtSigninInfo. */
export interface Imahjong_ExtSigninInfo {

    /** mahjong_ExtSigninInfo signinDays */
    signinDays?: (number[]|null);

    /** mahjong_ExtSigninInfo buqianka */
    buqianka: number;

    /** mahjong_ExtSigninInfo signinAwardTable */
    signinAwardTable: Imahjong_ExtSigninAward2;
}

/** Represents a mahjong_ExtSigninInfo. */
export class mahjong_ExtSigninInfo implements Imahjong_ExtSigninInfo {

    /**
     * Constructs a new mahjong_ExtSigninInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_ExtSigninInfo);

    /** mahjong_ExtSigninInfo signinDays. */
    public signinDays: number[];

    /** mahjong_ExtSigninInfo buqianka. */
    public buqianka: number;

    /** mahjong_ExtSigninInfo signinAwardTable. */
    public signinAwardTable: Imahjong_ExtSigninAward2;

    /**
     * Creates a new mahjong_ExtSigninInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_ExtSigninInfo instance
     */
    public static create(properties?: Imahjong_ExtSigninInfo): mahjong_ExtSigninInfo;

    /**
     * Encodes the specified mahjong_ExtSigninInfo message. Does not implicitly {@link mahjong_ExtSigninInfo.verify|verify} messages.
     * @param message mahjong_ExtSigninInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_ExtSigninInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_ExtSigninInfo message, length delimited. Does not implicitly {@link mahjong_ExtSigninInfo.verify|verify} messages.
     * @param message mahjong_ExtSigninInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_ExtSigninInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_ExtSigninInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_ExtSigninInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_ExtSigninInfo;

    /**
     * Decodes a mahjong_ExtSigninInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_ExtSigninInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_ExtSigninInfo;

    /**
     * Verifies a mahjong_ExtSigninInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_ExtSigninInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_ExtSigninInfo
     */
    public static fromObject(object: { [k: string]: any }): mahjong_ExtSigninInfo;

    /**
     * Creates a plain object from a mahjong_ExtSigninInfo message. Also converts values to other types if specified.
     * @param message mahjong_ExtSigninInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_ExtSigninInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_ExtSigninInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_DwcRoomInfo. */
export interface Imahjong_DwcRoomInfo {

    /** mahjong_DwcRoomInfo autoId */
    autoId: number;

    /** mahjong_DwcRoomInfo jsonContent */
    jsonContent: string;
}

/** Represents a mahjong_DwcRoomInfo. */
export class mahjong_DwcRoomInfo implements Imahjong_DwcRoomInfo {

    /**
     * Constructs a new mahjong_DwcRoomInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_DwcRoomInfo);

    /** mahjong_DwcRoomInfo autoId. */
    public autoId: number;

    /** mahjong_DwcRoomInfo jsonContent. */
    public jsonContent: string;

    /**
     * Creates a new mahjong_DwcRoomInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_DwcRoomInfo instance
     */
    public static create(properties?: Imahjong_DwcRoomInfo): mahjong_DwcRoomInfo;

    /**
     * Encodes the specified mahjong_DwcRoomInfo message. Does not implicitly {@link mahjong_DwcRoomInfo.verify|verify} messages.
     * @param message mahjong_DwcRoomInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_DwcRoomInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_DwcRoomInfo message, length delimited. Does not implicitly {@link mahjong_DwcRoomInfo.verify|verify} messages.
     * @param message mahjong_DwcRoomInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_DwcRoomInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_DwcRoomInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_DwcRoomInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_DwcRoomInfo;

    /**
     * Decodes a mahjong_DwcRoomInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_DwcRoomInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_DwcRoomInfo;

    /**
     * Verifies a mahjong_DwcRoomInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_DwcRoomInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_DwcRoomInfo
     */
    public static fromObject(object: { [k: string]: any }): mahjong_DwcRoomInfo;

    /**
     * Creates a plain object from a mahjong_DwcRoomInfo message. Also converts values to other types if specified.
     * @param message mahjong_DwcRoomInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_DwcRoomInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_DwcRoomInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_user_signin_days_req. */
export interface Imahjong_cl_get_user_signin_days_req {
}

/** Represents a mahjong_cl_get_user_signin_days_req. */
export class mahjong_cl_get_user_signin_days_req implements Imahjong_cl_get_user_signin_days_req {

    /**
     * Constructs a new mahjong_cl_get_user_signin_days_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_user_signin_days_req);

    /**
     * Creates a new mahjong_cl_get_user_signin_days_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_user_signin_days_req instance
     */
    public static create(properties?: Imahjong_cl_get_user_signin_days_req): mahjong_cl_get_user_signin_days_req;

    /**
     * Encodes the specified mahjong_cl_get_user_signin_days_req message. Does not implicitly {@link mahjong_cl_get_user_signin_days_req.verify|verify} messages.
     * @param message mahjong_cl_get_user_signin_days_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_user_signin_days_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_user_signin_days_req message, length delimited. Does not implicitly {@link mahjong_cl_get_user_signin_days_req.verify|verify} messages.
     * @param message mahjong_cl_get_user_signin_days_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_user_signin_days_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_user_signin_days_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_user_signin_days_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_user_signin_days_req;

    /**
     * Decodes a mahjong_cl_get_user_signin_days_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_user_signin_days_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_user_signin_days_req;

    /**
     * Verifies a mahjong_cl_get_user_signin_days_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_user_signin_days_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_user_signin_days_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_user_signin_days_req;

    /**
     * Creates a plain object from a mahjong_cl_get_user_signin_days_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_user_signin_days_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_user_signin_days_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_user_signin_days_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_TableAttr. */
export interface Imahjong_TableAttr {

    /** mahjong_TableAttr tableId */
    tableId: number;

    /** mahjong_TableAttr name */
    name: string;

    /** mahjong_TableAttr lock */
    lock: number;

    /** mahjong_TableAttr players */
    players?: (Imahjong_PlyBaseData[]|null);
}

/** Represents a mahjong_TableAttr. */
export class mahjong_TableAttr implements Imahjong_TableAttr {

    /**
     * Constructs a new mahjong_TableAttr.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_TableAttr);

    /** mahjong_TableAttr tableId. */
    public tableId: number;

    /** mahjong_TableAttr name. */
    public name: string;

    /** mahjong_TableAttr lock. */
    public lock: number;

    /** mahjong_TableAttr players. */
    public players: Imahjong_PlyBaseData[];

    /**
     * Creates a new mahjong_TableAttr instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_TableAttr instance
     */
    public static create(properties?: Imahjong_TableAttr): mahjong_TableAttr;

    /**
     * Encodes the specified mahjong_TableAttr message. Does not implicitly {@link mahjong_TableAttr.verify|verify} messages.
     * @param message mahjong_TableAttr message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_TableAttr, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_TableAttr message, length delimited. Does not implicitly {@link mahjong_TableAttr.verify|verify} messages.
     * @param message mahjong_TableAttr message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_TableAttr, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_TableAttr message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_TableAttr
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_TableAttr;

    /**
     * Decodes a mahjong_TableAttr message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_TableAttr
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_TableAttr;

    /**
     * Verifies a mahjong_TableAttr message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_TableAttr message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_TableAttr
     */
    public static fromObject(object: { [k: string]: any }): mahjong_TableAttr;

    /**
     * Creates a plain object from a mahjong_TableAttr message. Also converts values to other types if specified.
     * @param message mahjong_TableAttr
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_TableAttr, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_TableAttr to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_PlySvrStatus20121227. */
export interface Imahjong_PlySvrStatus20121227 {

    /** mahjong_PlySvrStatus20121227 plyGuid */
    plyGuid: (number|Long);

    /** mahjong_PlySvrStatus20121227 plyNickname */
    plyNickname: string;

    /** mahjong_PlySvrStatus20121227 plyStatus */
    plyStatus: number;

    /** mahjong_PlySvrStatus20121227 gameId */
    gameId: number;

    /** mahjong_PlySvrStatus20121227 loginServerId */
    loginServerId: number;

    /** mahjong_PlySvrStatus20121227 gameServerId */
    gameServerId: number;

    /** mahjong_PlySvrStatus20121227 tableId */
    tableId: number;

    /** mahjong_PlySvrStatus20121227 money */
    money: number;

    /** mahjong_PlySvrStatus20121227 won */
    won: number;

    /** mahjong_PlySvrStatus20121227 lost */
    lost: number;

    /** mahjong_PlySvrStatus20121227 moneyRank */
    moneyRank: number;

    /** mahjong_PlySvrStatus20121227 wonRank */
    wonRank: number;

    /** mahjong_PlySvrStatus20121227 latitude */
    latitude: number;

    /** mahjong_PlySvrStatus20121227 longitude */
    longitude: number;
}

/** Represents a mahjong_PlySvrStatus20121227. */
export class mahjong_PlySvrStatus20121227 implements Imahjong_PlySvrStatus20121227 {

    /**
     * Constructs a new mahjong_PlySvrStatus20121227.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_PlySvrStatus20121227);

    /** mahjong_PlySvrStatus20121227 plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_PlySvrStatus20121227 plyNickname. */
    public plyNickname: string;

    /** mahjong_PlySvrStatus20121227 plyStatus. */
    public plyStatus: number;

    /** mahjong_PlySvrStatus20121227 gameId. */
    public gameId: number;

    /** mahjong_PlySvrStatus20121227 loginServerId. */
    public loginServerId: number;

    /** mahjong_PlySvrStatus20121227 gameServerId. */
    public gameServerId: number;

    /** mahjong_PlySvrStatus20121227 tableId. */
    public tableId: number;

    /** mahjong_PlySvrStatus20121227 money. */
    public money: number;

    /** mahjong_PlySvrStatus20121227 won. */
    public won: number;

    /** mahjong_PlySvrStatus20121227 lost. */
    public lost: number;

    /** mahjong_PlySvrStatus20121227 moneyRank. */
    public moneyRank: number;

    /** mahjong_PlySvrStatus20121227 wonRank. */
    public wonRank: number;

    /** mahjong_PlySvrStatus20121227 latitude. */
    public latitude: number;

    /** mahjong_PlySvrStatus20121227 longitude. */
    public longitude: number;

    /**
     * Creates a new mahjong_PlySvrStatus20121227 instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_PlySvrStatus20121227 instance
     */
    public static create(properties?: Imahjong_PlySvrStatus20121227): mahjong_PlySvrStatus20121227;

    /**
     * Encodes the specified mahjong_PlySvrStatus20121227 message. Does not implicitly {@link mahjong_PlySvrStatus20121227.verify|verify} messages.
     * @param message mahjong_PlySvrStatus20121227 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_PlySvrStatus20121227, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_PlySvrStatus20121227 message, length delimited. Does not implicitly {@link mahjong_PlySvrStatus20121227.verify|verify} messages.
     * @param message mahjong_PlySvrStatus20121227 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_PlySvrStatus20121227, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_PlySvrStatus20121227 message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_PlySvrStatus20121227
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_PlySvrStatus20121227;

    /**
     * Decodes a mahjong_PlySvrStatus20121227 message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_PlySvrStatus20121227
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_PlySvrStatus20121227;

    /**
     * Verifies a mahjong_PlySvrStatus20121227 message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_PlySvrStatus20121227 message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_PlySvrStatus20121227
     */
    public static fromObject(object: { [k: string]: any }): mahjong_PlySvrStatus20121227;

    /**
     * Creates a plain object from a mahjong_PlySvrStatus20121227 message. Also converts values to other types if specified.
     * @param message mahjong_PlySvrStatus20121227
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_PlySvrStatus20121227, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_PlySvrStatus20121227 to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_give_gift_not. */
export interface Imahjong_bc_give_gift_not {

    /** mahjong_bc_give_gift_not srcPlyGuid */
    srcPlyGuid: (number|Long);

    /** mahjong_bc_give_gift_not dstPlyGuid */
    dstPlyGuid: (number|Long);

    /** mahjong_bc_give_gift_not amount */
    amount: number;
}

/** Represents a mahjong_bc_give_gift_not. */
export class mahjong_bc_give_gift_not implements Imahjong_bc_give_gift_not {

    /**
     * Constructs a new mahjong_bc_give_gift_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_give_gift_not);

    /** mahjong_bc_give_gift_not srcPlyGuid. */
    public srcPlyGuid: (number|Long);

    /** mahjong_bc_give_gift_not dstPlyGuid. */
    public dstPlyGuid: (number|Long);

    /** mahjong_bc_give_gift_not amount. */
    public amount: number;

    /**
     * Creates a new mahjong_bc_give_gift_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_give_gift_not instance
     */
    public static create(properties?: Imahjong_bc_give_gift_not): mahjong_bc_give_gift_not;

    /**
     * Encodes the specified mahjong_bc_give_gift_not message. Does not implicitly {@link mahjong_bc_give_gift_not.verify|verify} messages.
     * @param message mahjong_bc_give_gift_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_give_gift_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_give_gift_not message, length delimited. Does not implicitly {@link mahjong_bc_give_gift_not.verify|verify} messages.
     * @param message mahjong_bc_give_gift_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_give_gift_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_give_gift_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_give_gift_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_give_gift_not;

    /**
     * Decodes a mahjong_bc_give_gift_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_give_gift_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_give_gift_not;

    /**
     * Verifies a mahjong_bc_give_gift_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_give_gift_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_give_gift_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_give_gift_not;

    /**
     * Creates a plain object from a mahjong_bc_give_gift_not message. Also converts values to other types if specified.
     * @param message mahjong_bc_give_gift_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_give_gift_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_give_gift_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_user_signin_days_ext_req. */
export interface Imahjong_cl_get_user_signin_days_ext_req {
}

/** Represents a mahjong_cl_get_user_signin_days_ext_req. */
export class mahjong_cl_get_user_signin_days_ext_req implements Imahjong_cl_get_user_signin_days_ext_req {

    /**
     * Constructs a new mahjong_cl_get_user_signin_days_ext_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_user_signin_days_ext_req);

    /**
     * Creates a new mahjong_cl_get_user_signin_days_ext_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_user_signin_days_ext_req instance
     */
    public static create(properties?: Imahjong_cl_get_user_signin_days_ext_req): mahjong_cl_get_user_signin_days_ext_req;

    /**
     * Encodes the specified mahjong_cl_get_user_signin_days_ext_req message. Does not implicitly {@link mahjong_cl_get_user_signin_days_ext_req.verify|verify} messages.
     * @param message mahjong_cl_get_user_signin_days_ext_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_user_signin_days_ext_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_user_signin_days_ext_req message, length delimited. Does not implicitly {@link mahjong_cl_get_user_signin_days_ext_req.verify|verify} messages.
     * @param message mahjong_cl_get_user_signin_days_ext_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_user_signin_days_ext_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_user_signin_days_ext_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_user_signin_days_ext_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_user_signin_days_ext_req;

    /**
     * Decodes a mahjong_cl_get_user_signin_days_ext_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_user_signin_days_ext_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_user_signin_days_ext_req;

    /**
     * Verifies a mahjong_cl_get_user_signin_days_ext_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_user_signin_days_ext_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_user_signin_days_ext_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_user_signin_days_ext_req;

    /**
     * Creates a plain object from a mahjong_cl_get_user_signin_days_ext_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_user_signin_days_ext_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_user_signin_days_ext_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_user_signin_days_ext_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_ply_current_rank_ack. */
export interface Imahjong_lc_get_ply_current_rank_ack {

    /** mahjong_lc_get_ply_current_rank_ack ret */
    ret: number;

    /** mahjong_lc_get_ply_current_rank_ack plyGuid */
    plyGuid: (number|Long);

    /** mahjong_lc_get_ply_current_rank_ack rank */
    rank: number;
}

/** Represents a mahjong_lc_get_ply_current_rank_ack. */
export class mahjong_lc_get_ply_current_rank_ack implements Imahjong_lc_get_ply_current_rank_ack {

    /**
     * Constructs a new mahjong_lc_get_ply_current_rank_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_ply_current_rank_ack);

    /** mahjong_lc_get_ply_current_rank_ack ret. */
    public ret: number;

    /** mahjong_lc_get_ply_current_rank_ack plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_lc_get_ply_current_rank_ack rank. */
    public rank: number;

    /**
     * Creates a new mahjong_lc_get_ply_current_rank_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_ply_current_rank_ack instance
     */
    public static create(properties?: Imahjong_lc_get_ply_current_rank_ack): mahjong_lc_get_ply_current_rank_ack;

    /**
     * Encodes the specified mahjong_lc_get_ply_current_rank_ack message. Does not implicitly {@link mahjong_lc_get_ply_current_rank_ack.verify|verify} messages.
     * @param message mahjong_lc_get_ply_current_rank_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_ply_current_rank_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_ply_current_rank_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_ply_current_rank_ack.verify|verify} messages.
     * @param message mahjong_lc_get_ply_current_rank_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_ply_current_rank_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_ply_current_rank_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_ply_current_rank_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_ply_current_rank_ack;

    /**
     * Decodes a mahjong_lc_get_ply_current_rank_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_ply_current_rank_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_ply_current_rank_ack;

    /**
     * Verifies a mahjong_lc_get_ply_current_rank_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_ply_current_rank_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_ply_current_rank_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_ply_current_rank_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_ply_current_rank_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_ply_current_rank_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_ply_current_rank_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_ply_current_rank_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_get_table_list_ack2. */
export interface Imahjong_bc_get_table_list_ack2 {

    /** mahjong_bc_get_table_list_ack2 items */
    items?: (Imahjong_TableItemAttr2[]|null);
}

/** Represents a mahjong_bc_get_table_list_ack2. */
export class mahjong_bc_get_table_list_ack2 implements Imahjong_bc_get_table_list_ack2 {

    /**
     * Constructs a new mahjong_bc_get_table_list_ack2.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_get_table_list_ack2);

    /** mahjong_bc_get_table_list_ack2 items. */
    public items: Imahjong_TableItemAttr2[];

    /**
     * Creates a new mahjong_bc_get_table_list_ack2 instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_get_table_list_ack2 instance
     */
    public static create(properties?: Imahjong_bc_get_table_list_ack2): mahjong_bc_get_table_list_ack2;

    /**
     * Encodes the specified mahjong_bc_get_table_list_ack2 message. Does not implicitly {@link mahjong_bc_get_table_list_ack2.verify|verify} messages.
     * @param message mahjong_bc_get_table_list_ack2 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_get_table_list_ack2, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_get_table_list_ack2 message, length delimited. Does not implicitly {@link mahjong_bc_get_table_list_ack2.verify|verify} messages.
     * @param message mahjong_bc_get_table_list_ack2 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_get_table_list_ack2, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_get_table_list_ack2 message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_get_table_list_ack2
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_get_table_list_ack2;

    /**
     * Decodes a mahjong_bc_get_table_list_ack2 message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_get_table_list_ack2
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_get_table_list_ack2;

    /**
     * Verifies a mahjong_bc_get_table_list_ack2 message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_get_table_list_ack2 message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_get_table_list_ack2
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_get_table_list_ack2;

    /**
     * Creates a plain object from a mahjong_bc_get_table_list_ack2 message. Also converts values to other types if specified.
     * @param message mahjong_bc_get_table_list_ack2
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_get_table_list_ack2, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_get_table_list_ack2 to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_get_daily_task_award_not. */
export interface Imahjong_bc_get_daily_task_award_not {

    /** mahjong_bc_get_daily_task_award_not index */
    index: number;

    /** mahjong_bc_get_daily_task_award_not name */
    name: string;

    /** mahjong_bc_get_daily_task_award_not desc */
    desc: string;
}

/** Represents a mahjong_bc_get_daily_task_award_not. */
export class mahjong_bc_get_daily_task_award_not implements Imahjong_bc_get_daily_task_award_not {

    /**
     * Constructs a new mahjong_bc_get_daily_task_award_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_get_daily_task_award_not);

    /** mahjong_bc_get_daily_task_award_not index. */
    public index: number;

    /** mahjong_bc_get_daily_task_award_not name. */
    public name: string;

    /** mahjong_bc_get_daily_task_award_not desc. */
    public desc: string;

    /**
     * Creates a new mahjong_bc_get_daily_task_award_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_get_daily_task_award_not instance
     */
    public static create(properties?: Imahjong_bc_get_daily_task_award_not): mahjong_bc_get_daily_task_award_not;

    /**
     * Encodes the specified mahjong_bc_get_daily_task_award_not message. Does not implicitly {@link mahjong_bc_get_daily_task_award_not.verify|verify} messages.
     * @param message mahjong_bc_get_daily_task_award_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_get_daily_task_award_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_get_daily_task_award_not message, length delimited. Does not implicitly {@link mahjong_bc_get_daily_task_award_not.verify|verify} messages.
     * @param message mahjong_bc_get_daily_task_award_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_get_daily_task_award_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_get_daily_task_award_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_get_daily_task_award_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_get_daily_task_award_not;

    /**
     * Decodes a mahjong_bc_get_daily_task_award_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_get_daily_task_award_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_get_daily_task_award_not;

    /**
     * Verifies a mahjong_bc_get_daily_task_award_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_get_daily_task_award_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_get_daily_task_award_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_get_daily_task_award_not;

    /**
     * Creates a plain object from a mahjong_bc_get_daily_task_award_not message. Also converts values to other types if specified.
     * @param message mahjong_bc_get_daily_task_award_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_get_daily_task_award_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_get_daily_task_award_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_remove_safe_amount_req. */
export interface Imahjong_cl_remove_safe_amount_req {

    /** mahjong_cl_remove_safe_amount_req plyGuid */
    plyGuid: (number|Long);

    /** mahjong_cl_remove_safe_amount_req amount */
    amount: (number|Long);

    /** mahjong_cl_remove_safe_amount_req password */
    password: string;
}

/** Represents a mahjong_cl_remove_safe_amount_req. */
export class mahjong_cl_remove_safe_amount_req implements Imahjong_cl_remove_safe_amount_req {

    /**
     * Constructs a new mahjong_cl_remove_safe_amount_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_remove_safe_amount_req);

    /** mahjong_cl_remove_safe_amount_req plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_cl_remove_safe_amount_req amount. */
    public amount: (number|Long);

    /** mahjong_cl_remove_safe_amount_req password. */
    public password: string;

    /**
     * Creates a new mahjong_cl_remove_safe_amount_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_remove_safe_amount_req instance
     */
    public static create(properties?: Imahjong_cl_remove_safe_amount_req): mahjong_cl_remove_safe_amount_req;

    /**
     * Encodes the specified mahjong_cl_remove_safe_amount_req message. Does not implicitly {@link mahjong_cl_remove_safe_amount_req.verify|verify} messages.
     * @param message mahjong_cl_remove_safe_amount_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_remove_safe_amount_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_remove_safe_amount_req message, length delimited. Does not implicitly {@link mahjong_cl_remove_safe_amount_req.verify|verify} messages.
     * @param message mahjong_cl_remove_safe_amount_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_remove_safe_amount_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_remove_safe_amount_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_remove_safe_amount_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_remove_safe_amount_req;

    /**
     * Decodes a mahjong_cl_remove_safe_amount_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_remove_safe_amount_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_remove_safe_amount_req;

    /**
     * Verifies a mahjong_cl_remove_safe_amount_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_remove_safe_amount_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_remove_safe_amount_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_remove_safe_amount_req;

    /**
     * Creates a plain object from a mahjong_cl_remove_safe_amount_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_remove_safe_amount_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_remove_safe_amount_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_remove_safe_amount_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_check_relief_status_ack. */
export interface Imahjong_lc_check_relief_status_ack {

    /** mahjong_lc_check_relief_status_ack ret */
    ret: number;

    /** mahjong_lc_check_relief_status_ack currentRelief */
    currentRelief: number;

    /** mahjong_lc_check_relief_status_ack reliefTimeLeft */
    reliefTimeLeft: number;

    /** mahjong_lc_check_relief_status_ack reliefAwardCount */
    reliefAwardCount: number;

    /** mahjong_lc_check_relief_status_ack reliefCd */
    reliefCd: number;

    /** mahjong_lc_check_relief_status_ack currentRelief_2 */
    currentRelief_2: number;

    /** mahjong_lc_check_relief_status_ack reliefTimesMax */
    reliefTimesMax: number;
}

/** Represents a mahjong_lc_check_relief_status_ack. */
export class mahjong_lc_check_relief_status_ack implements Imahjong_lc_check_relief_status_ack {

    /**
     * Constructs a new mahjong_lc_check_relief_status_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_check_relief_status_ack);

    /** mahjong_lc_check_relief_status_ack ret. */
    public ret: number;

    /** mahjong_lc_check_relief_status_ack currentRelief. */
    public currentRelief: number;

    /** mahjong_lc_check_relief_status_ack reliefTimeLeft. */
    public reliefTimeLeft: number;

    /** mahjong_lc_check_relief_status_ack reliefAwardCount. */
    public reliefAwardCount: number;

    /** mahjong_lc_check_relief_status_ack reliefCd. */
    public reliefCd: number;

    /** mahjong_lc_check_relief_status_ack currentRelief_2. */
    public currentRelief_2: number;

    /** mahjong_lc_check_relief_status_ack reliefTimesMax. */
    public reliefTimesMax: number;

    /**
     * Creates a new mahjong_lc_check_relief_status_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_check_relief_status_ack instance
     */
    public static create(properties?: Imahjong_lc_check_relief_status_ack): mahjong_lc_check_relief_status_ack;

    /**
     * Encodes the specified mahjong_lc_check_relief_status_ack message. Does not implicitly {@link mahjong_lc_check_relief_status_ack.verify|verify} messages.
     * @param message mahjong_lc_check_relief_status_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_check_relief_status_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_check_relief_status_ack message, length delimited. Does not implicitly {@link mahjong_lc_check_relief_status_ack.verify|verify} messages.
     * @param message mahjong_lc_check_relief_status_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_check_relief_status_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_check_relief_status_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_check_relief_status_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_check_relief_status_ack;

    /**
     * Decodes a mahjong_lc_check_relief_status_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_check_relief_status_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_check_relief_status_ack;

    /**
     * Verifies a mahjong_lc_check_relief_status_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_check_relief_status_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_check_relief_status_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_check_relief_status_ack;

    /**
     * Creates a plain object from a mahjong_lc_check_relief_status_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_check_relief_status_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_check_relief_status_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_check_relief_status_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_ExtraLoginAward. */
export interface Imahjong_ExtraLoginAward {

    /** mahjong_ExtraLoginAward type */
    type: number;

    /** mahjong_ExtraLoginAward status */
    status: number;
}

/** Represents a mahjong_ExtraLoginAward. */
export class mahjong_ExtraLoginAward implements Imahjong_ExtraLoginAward {

    /**
     * Constructs a new mahjong_ExtraLoginAward.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_ExtraLoginAward);

    /** mahjong_ExtraLoginAward type. */
    public type: number;

    /** mahjong_ExtraLoginAward status. */
    public status: number;

    /**
     * Creates a new mahjong_ExtraLoginAward instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_ExtraLoginAward instance
     */
    public static create(properties?: Imahjong_ExtraLoginAward): mahjong_ExtraLoginAward;

    /**
     * Encodes the specified mahjong_ExtraLoginAward message. Does not implicitly {@link mahjong_ExtraLoginAward.verify|verify} messages.
     * @param message mahjong_ExtraLoginAward message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_ExtraLoginAward, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_ExtraLoginAward message, length delimited. Does not implicitly {@link mahjong_ExtraLoginAward.verify|verify} messages.
     * @param message mahjong_ExtraLoginAward message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_ExtraLoginAward, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_ExtraLoginAward message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_ExtraLoginAward
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_ExtraLoginAward;

    /**
     * Decodes a mahjong_ExtraLoginAward message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_ExtraLoginAward
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_ExtraLoginAward;

    /**
     * Verifies a mahjong_ExtraLoginAward message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_ExtraLoginAward message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_ExtraLoginAward
     */
    public static fromObject(object: { [k: string]: any }): mahjong_ExtraLoginAward;

    /**
     * Creates a plain object from a mahjong_ExtraLoginAward message. Also converts values to other types if specified.
     * @param message mahjong_ExtraLoginAward
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_ExtraLoginAward, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_ExtraLoginAward to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_user_accumulate_signin_days_req. */
export interface Imahjong_cl_get_user_accumulate_signin_days_req {
}

/** Represents a mahjong_cl_get_user_accumulate_signin_days_req. */
export class mahjong_cl_get_user_accumulate_signin_days_req implements Imahjong_cl_get_user_accumulate_signin_days_req {

    /**
     * Constructs a new mahjong_cl_get_user_accumulate_signin_days_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_user_accumulate_signin_days_req);

    /**
     * Creates a new mahjong_cl_get_user_accumulate_signin_days_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_user_accumulate_signin_days_req instance
     */
    public static create(properties?: Imahjong_cl_get_user_accumulate_signin_days_req): mahjong_cl_get_user_accumulate_signin_days_req;

    /**
     * Encodes the specified mahjong_cl_get_user_accumulate_signin_days_req message. Does not implicitly {@link mahjong_cl_get_user_accumulate_signin_days_req.verify|verify} messages.
     * @param message mahjong_cl_get_user_accumulate_signin_days_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_user_accumulate_signin_days_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_user_accumulate_signin_days_req message, length delimited. Does not implicitly {@link mahjong_cl_get_user_accumulate_signin_days_req.verify|verify} messages.
     * @param message mahjong_cl_get_user_accumulate_signin_days_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_user_accumulate_signin_days_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_user_accumulate_signin_days_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_user_accumulate_signin_days_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_user_accumulate_signin_days_req;

    /**
     * Decodes a mahjong_cl_get_user_accumulate_signin_days_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_user_accumulate_signin_days_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_user_accumulate_signin_days_req;

    /**
     * Verifies a mahjong_cl_get_user_accumulate_signin_days_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_user_accumulate_signin_days_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_user_accumulate_signin_days_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_user_accumulate_signin_days_req;

    /**
     * Creates a plain object from a mahjong_cl_get_user_accumulate_signin_days_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_user_accumulate_signin_days_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_user_accumulate_signin_days_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_user_accumulate_signin_days_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_get_online_award_ack. */
export interface Imahjong_bc_get_online_award_ack {

    /** mahjong_bc_get_online_award_ack ret */
    ret: number;

    /** mahjong_bc_get_online_award_ack remain */
    remain: number;

    /** mahjong_bc_get_online_award_ack money */
    money: number;
}

/** Represents a mahjong_bc_get_online_award_ack. */
export class mahjong_bc_get_online_award_ack implements Imahjong_bc_get_online_award_ack {

    /**
     * Constructs a new mahjong_bc_get_online_award_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_get_online_award_ack);

    /** mahjong_bc_get_online_award_ack ret. */
    public ret: number;

    /** mahjong_bc_get_online_award_ack remain. */
    public remain: number;

    /** mahjong_bc_get_online_award_ack money. */
    public money: number;

    /**
     * Creates a new mahjong_bc_get_online_award_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_get_online_award_ack instance
     */
    public static create(properties?: Imahjong_bc_get_online_award_ack): mahjong_bc_get_online_award_ack;

    /**
     * Encodes the specified mahjong_bc_get_online_award_ack message. Does not implicitly {@link mahjong_bc_get_online_award_ack.verify|verify} messages.
     * @param message mahjong_bc_get_online_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_get_online_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_get_online_award_ack message, length delimited. Does not implicitly {@link mahjong_bc_get_online_award_ack.verify|verify} messages.
     * @param message mahjong_bc_get_online_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_get_online_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_get_online_award_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_get_online_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_get_online_award_ack;

    /**
     * Decodes a mahjong_bc_get_online_award_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_get_online_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_get_online_award_ack;

    /**
     * Verifies a mahjong_bc_get_online_award_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_get_online_award_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_get_online_award_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_get_online_award_ack;

    /**
     * Creates a plain object from a mahjong_bc_get_online_award_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_get_online_award_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_get_online_award_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_get_online_award_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_continuous_game_award_ack. */
export interface Imahjong_lc_get_continuous_game_award_ack {

    /** mahjong_lc_get_continuous_game_award_ack ret */
    ret: number;

    /** mahjong_lc_get_continuous_game_award_ack money */
    money: (number|Long);
}

/** Represents a mahjong_lc_get_continuous_game_award_ack. */
export class mahjong_lc_get_continuous_game_award_ack implements Imahjong_lc_get_continuous_game_award_ack {

    /**
     * Constructs a new mahjong_lc_get_continuous_game_award_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_continuous_game_award_ack);

    /** mahjong_lc_get_continuous_game_award_ack ret. */
    public ret: number;

    /** mahjong_lc_get_continuous_game_award_ack money. */
    public money: (number|Long);

    /**
     * Creates a new mahjong_lc_get_continuous_game_award_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_continuous_game_award_ack instance
     */
    public static create(properties?: Imahjong_lc_get_continuous_game_award_ack): mahjong_lc_get_continuous_game_award_ack;

    /**
     * Encodes the specified mahjong_lc_get_continuous_game_award_ack message. Does not implicitly {@link mahjong_lc_get_continuous_game_award_ack.verify|verify} messages.
     * @param message mahjong_lc_get_continuous_game_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_continuous_game_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_continuous_game_award_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_continuous_game_award_ack.verify|verify} messages.
     * @param message mahjong_lc_get_continuous_game_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_continuous_game_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_continuous_game_award_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_continuous_game_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_continuous_game_award_ack;

    /**
     * Decodes a mahjong_lc_get_continuous_game_award_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_continuous_game_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_continuous_game_award_ack;

    /**
     * Verifies a mahjong_lc_get_continuous_game_award_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_continuous_game_award_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_continuous_game_award_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_continuous_game_award_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_continuous_game_award_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_continuous_game_award_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_continuous_game_award_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_continuous_game_award_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_update_feel_value_not. */
export interface Imahjong_bc_update_feel_value_not {

    /** mahjong_bc_update_feel_value_not frdUid */
    frdUid: (number|Long);

    /** mahjong_bc_update_feel_value_not frdNickname */
    frdNickname: string;

    /** mahjong_bc_update_feel_value_not feelValue */
    feelValue: number;
}

/** Represents a mahjong_bc_update_feel_value_not. */
export class mahjong_bc_update_feel_value_not implements Imahjong_bc_update_feel_value_not {

    /**
     * Constructs a new mahjong_bc_update_feel_value_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_update_feel_value_not);

    /** mahjong_bc_update_feel_value_not frdUid. */
    public frdUid: (number|Long);

    /** mahjong_bc_update_feel_value_not frdNickname. */
    public frdNickname: string;

    /** mahjong_bc_update_feel_value_not feelValue. */
    public feelValue: number;

    /**
     * Creates a new mahjong_bc_update_feel_value_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_update_feel_value_not instance
     */
    public static create(properties?: Imahjong_bc_update_feel_value_not): mahjong_bc_update_feel_value_not;

    /**
     * Encodes the specified mahjong_bc_update_feel_value_not message. Does not implicitly {@link mahjong_bc_update_feel_value_not.verify|verify} messages.
     * @param message mahjong_bc_update_feel_value_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_update_feel_value_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_update_feel_value_not message, length delimited. Does not implicitly {@link mahjong_bc_update_feel_value_not.verify|verify} messages.
     * @param message mahjong_bc_update_feel_value_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_update_feel_value_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_update_feel_value_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_update_feel_value_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_update_feel_value_not;

    /**
     * Decodes a mahjong_bc_update_feel_value_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_update_feel_value_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_update_feel_value_not;

    /**
     * Verifies a mahjong_bc_update_feel_value_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_update_feel_value_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_update_feel_value_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_update_feel_value_not;

    /**
     * Creates a plain object from a mahjong_bc_update_feel_value_not message. Also converts values to other types if specified.
     * @param message mahjong_bc_update_feel_value_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_update_feel_value_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_update_feel_value_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_get_relief_req. */
export interface Imahjong_cb_get_relief_req {
}

/** Represents a mahjong_cb_get_relief_req. */
export class mahjong_cb_get_relief_req implements Imahjong_cb_get_relief_req {

    /**
     * Constructs a new mahjong_cb_get_relief_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_get_relief_req);

    /**
     * Creates a new mahjong_cb_get_relief_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_get_relief_req instance
     */
    public static create(properties?: Imahjong_cb_get_relief_req): mahjong_cb_get_relief_req;

    /**
     * Encodes the specified mahjong_cb_get_relief_req message. Does not implicitly {@link mahjong_cb_get_relief_req.verify|verify} messages.
     * @param message mahjong_cb_get_relief_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_get_relief_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_get_relief_req message, length delimited. Does not implicitly {@link mahjong_cb_get_relief_req.verify|verify} messages.
     * @param message mahjong_cb_get_relief_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_get_relief_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_get_relief_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_get_relief_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_get_relief_req;

    /**
     * Decodes a mahjong_cb_get_relief_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_get_relief_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_get_relief_req;

    /**
     * Verifies a mahjong_cb_get_relief_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_get_relief_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_get_relief_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_get_relief_req;

    /**
     * Creates a plain object from a mahjong_cb_get_relief_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_get_relief_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_get_relief_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_get_relief_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_ServerData. */
export interface Imahjong_ServerData {

    /** mahjong_ServerData gameId */
    gameId: number;

    /** mahjong_ServerData serverId */
    serverId: number;

    /** mahjong_ServerData serverName */
    serverName: string;

    /** mahjong_ServerData serverKey */
    serverKey: string;

    /** mahjong_ServerData serverAddr */
    serverAddr: string;

    /** mahjong_ServerData serverPort */
    serverPort: number;

    /** mahjong_ServerData baseBet */
    baseBet: number;

    /** mahjong_ServerData minMoney */
    minMoney: number;

    /** mahjong_ServerData onlinePlayerNum */
    onlinePlayerNum: number;
}

/** Represents a mahjong_ServerData. */
export class mahjong_ServerData implements Imahjong_ServerData {

    /**
     * Constructs a new mahjong_ServerData.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_ServerData);

    /** mahjong_ServerData gameId. */
    public gameId: number;

    /** mahjong_ServerData serverId. */
    public serverId: number;

    /** mahjong_ServerData serverName. */
    public serverName: string;

    /** mahjong_ServerData serverKey. */
    public serverKey: string;

    /** mahjong_ServerData serverAddr. */
    public serverAddr: string;

    /** mahjong_ServerData serverPort. */
    public serverPort: number;

    /** mahjong_ServerData baseBet. */
    public baseBet: number;

    /** mahjong_ServerData minMoney. */
    public minMoney: number;

    /** mahjong_ServerData onlinePlayerNum. */
    public onlinePlayerNum: number;

    /**
     * Creates a new mahjong_ServerData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_ServerData instance
     */
    public static create(properties?: Imahjong_ServerData): mahjong_ServerData;

    /**
     * Encodes the specified mahjong_ServerData message. Does not implicitly {@link mahjong_ServerData.verify|verify} messages.
     * @param message mahjong_ServerData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_ServerData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_ServerData message, length delimited. Does not implicitly {@link mahjong_ServerData.verify|verify} messages.
     * @param message mahjong_ServerData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_ServerData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_ServerData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_ServerData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_ServerData;

    /**
     * Decodes a mahjong_ServerData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_ServerData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_ServerData;

    /**
     * Verifies a mahjong_ServerData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_ServerData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_ServerData
     */
    public static fromObject(object: { [k: string]: any }): mahjong_ServerData;

    /**
     * Creates a plain object from a mahjong_ServerData message. Also converts values to other types if specified.
     * @param message mahjong_ServerData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_ServerData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_ServerData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_achieve_list_ack. */
export interface Imahjong_lc_get_achieve_list_ack {

    /** mahjong_lc_get_achieve_list_ack items */
    items?: (Imahjong_AchieveData[]|null);
}

/** Represents a mahjong_lc_get_achieve_list_ack. */
export class mahjong_lc_get_achieve_list_ack implements Imahjong_lc_get_achieve_list_ack {

    /**
     * Constructs a new mahjong_lc_get_achieve_list_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_achieve_list_ack);

    /** mahjong_lc_get_achieve_list_ack items. */
    public items: Imahjong_AchieveData[];

    /**
     * Creates a new mahjong_lc_get_achieve_list_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_achieve_list_ack instance
     */
    public static create(properties?: Imahjong_lc_get_achieve_list_ack): mahjong_lc_get_achieve_list_ack;

    /**
     * Encodes the specified mahjong_lc_get_achieve_list_ack message. Does not implicitly {@link mahjong_lc_get_achieve_list_ack.verify|verify} messages.
     * @param message mahjong_lc_get_achieve_list_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_achieve_list_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_achieve_list_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_achieve_list_ack.verify|verify} messages.
     * @param message mahjong_lc_get_achieve_list_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_achieve_list_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_achieve_list_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_achieve_list_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_achieve_list_ack;

    /**
     * Decodes a mahjong_lc_get_achieve_list_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_achieve_list_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_achieve_list_ack;

    /**
     * Verifies a mahjong_lc_get_achieve_list_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_achieve_list_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_achieve_list_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_achieve_list_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_achieve_list_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_achieve_list_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_achieve_list_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_achieve_list_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_update_ply_data_not. */
export interface Imahjong_bc_update_ply_data_not {

    /** mahjong_bc_update_ply_data_not plyGuid */
    plyGuid: (number|Long);

    /** mahjong_bc_update_ply_data_not uptReason */
    uptReason: number;

    /** mahjong_bc_update_ply_data_not uptType */
    uptType: number;

    /** mahjong_bc_update_ply_data_not variant */
    variant: number;

    /** mahjong_bc_update_ply_data_not amount */
    amount: (number|Long);
}

/** Represents a mahjong_bc_update_ply_data_not. */
export class mahjong_bc_update_ply_data_not implements Imahjong_bc_update_ply_data_not {

    /**
     * Constructs a new mahjong_bc_update_ply_data_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_update_ply_data_not);

    /** mahjong_bc_update_ply_data_not plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_bc_update_ply_data_not uptReason. */
    public uptReason: number;

    /** mahjong_bc_update_ply_data_not uptType. */
    public uptType: number;

    /** mahjong_bc_update_ply_data_not variant. */
    public variant: number;

    /** mahjong_bc_update_ply_data_not amount. */
    public amount: (number|Long);

    /**
     * Creates a new mahjong_bc_update_ply_data_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_update_ply_data_not instance
     */
    public static create(properties?: Imahjong_bc_update_ply_data_not): mahjong_bc_update_ply_data_not;

    /**
     * Encodes the specified mahjong_bc_update_ply_data_not message. Does not implicitly {@link mahjong_bc_update_ply_data_not.verify|verify} messages.
     * @param message mahjong_bc_update_ply_data_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_update_ply_data_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_update_ply_data_not message, length delimited. Does not implicitly {@link mahjong_bc_update_ply_data_not.verify|verify} messages.
     * @param message mahjong_bc_update_ply_data_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_update_ply_data_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_update_ply_data_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_update_ply_data_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_update_ply_data_not;

    /**
     * Decodes a mahjong_bc_update_ply_data_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_update_ply_data_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_update_ply_data_not;

    /**
     * Verifies a mahjong_bc_update_ply_data_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_update_ply_data_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_update_ply_data_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_update_ply_data_not;

    /**
     * Creates a plain object from a mahjong_bc_update_ply_data_not message. Also converts values to other types if specified.
     * @param message mahjong_bc_update_ply_data_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_update_ply_data_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_update_ply_data_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_turntable_login_award_ack. */
export interface Imahjong_lc_get_turntable_login_award_ack {

    /** mahjong_lc_get_turntable_login_award_ack ret */
    ret: number;

    /** mahjong_lc_get_turntable_login_award_ack awardItems */
    awardItems?: (Imahjong_ItemData[]|null);
}

/** Represents a mahjong_lc_get_turntable_login_award_ack. */
export class mahjong_lc_get_turntable_login_award_ack implements Imahjong_lc_get_turntable_login_award_ack {

    /**
     * Constructs a new mahjong_lc_get_turntable_login_award_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_turntable_login_award_ack);

    /** mahjong_lc_get_turntable_login_award_ack ret. */
    public ret: number;

    /** mahjong_lc_get_turntable_login_award_ack awardItems. */
    public awardItems: Imahjong_ItemData[];

    /**
     * Creates a new mahjong_lc_get_turntable_login_award_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_turntable_login_award_ack instance
     */
    public static create(properties?: Imahjong_lc_get_turntable_login_award_ack): mahjong_lc_get_turntable_login_award_ack;

    /**
     * Encodes the specified mahjong_lc_get_turntable_login_award_ack message. Does not implicitly {@link mahjong_lc_get_turntable_login_award_ack.verify|verify} messages.
     * @param message mahjong_lc_get_turntable_login_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_turntable_login_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_turntable_login_award_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_turntable_login_award_ack.verify|verify} messages.
     * @param message mahjong_lc_get_turntable_login_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_turntable_login_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_turntable_login_award_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_turntable_login_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_turntable_login_award_ack;

    /**
     * Decodes a mahjong_lc_get_turntable_login_award_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_turntable_login_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_turntable_login_award_ack;

    /**
     * Verifies a mahjong_lc_get_turntable_login_award_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_turntable_login_award_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_turntable_login_award_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_turntable_login_award_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_turntable_login_award_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_turntable_login_award_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_turntable_login_award_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_turntable_login_award_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_award_type_not. */
export interface Imahjong_bc_award_type_not {

    /** mahjong_bc_award_type_not type */
    type?: (number[]|null);
}

/** Represents a mahjong_bc_award_type_not. */
export class mahjong_bc_award_type_not implements Imahjong_bc_award_type_not {

    /**
     * Constructs a new mahjong_bc_award_type_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_award_type_not);

    /** mahjong_bc_award_type_not type. */
    public type: number[];

    /**
     * Creates a new mahjong_bc_award_type_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_award_type_not instance
     */
    public static create(properties?: Imahjong_bc_award_type_not): mahjong_bc_award_type_not;

    /**
     * Encodes the specified mahjong_bc_award_type_not message. Does not implicitly {@link mahjong_bc_award_type_not.verify|verify} messages.
     * @param message mahjong_bc_award_type_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_award_type_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_award_type_not message, length delimited. Does not implicitly {@link mahjong_bc_award_type_not.verify|verify} messages.
     * @param message mahjong_bc_award_type_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_award_type_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_award_type_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_award_type_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_award_type_not;

    /**
     * Decodes a mahjong_bc_award_type_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_award_type_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_award_type_not;

    /**
     * Verifies a mahjong_bc_award_type_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_award_type_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_award_type_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_award_type_not;

    /**
     * Creates a plain object from a mahjong_bc_award_type_not message. Also converts values to other types if specified.
     * @param message mahjong_bc_award_type_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_award_type_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_award_type_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_player_game_list_ack. */
export interface Imahjong_lc_get_player_game_list_ack {

    /** mahjong_lc_get_player_game_list_ack ret */
    ret: number;

    /** mahjong_lc_get_player_game_list_ack serverStatus */
    serverStatus?: (Imahjong_ServerData2[]|null);
}

/** Represents a mahjong_lc_get_player_game_list_ack. */
export class mahjong_lc_get_player_game_list_ack implements Imahjong_lc_get_player_game_list_ack {

    /**
     * Constructs a new mahjong_lc_get_player_game_list_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_player_game_list_ack);

    /** mahjong_lc_get_player_game_list_ack ret. */
    public ret: number;

    /** mahjong_lc_get_player_game_list_ack serverStatus. */
    public serverStatus: Imahjong_ServerData2[];

    /**
     * Creates a new mahjong_lc_get_player_game_list_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_player_game_list_ack instance
     */
    public static create(properties?: Imahjong_lc_get_player_game_list_ack): mahjong_lc_get_player_game_list_ack;

    /**
     * Encodes the specified mahjong_lc_get_player_game_list_ack message. Does not implicitly {@link mahjong_lc_get_player_game_list_ack.verify|verify} messages.
     * @param message mahjong_lc_get_player_game_list_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_player_game_list_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_player_game_list_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_player_game_list_ack.verify|verify} messages.
     * @param message mahjong_lc_get_player_game_list_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_player_game_list_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_player_game_list_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_player_game_list_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_player_game_list_ack;

    /**
     * Decodes a mahjong_lc_get_player_game_list_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_player_game_list_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_player_game_list_ack;

    /**
     * Verifies a mahjong_lc_get_player_game_list_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_player_game_list_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_player_game_list_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_player_game_list_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_player_game_list_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_player_game_list_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_player_game_list_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_player_game_list_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_SigninInfo. */
export interface Imahjong_SigninInfo {

    /** mahjong_SigninInfo signinDays */
    signinDays?: (number[]|null);

    /** mahjong_SigninInfo buqianka */
    buqianka: number;

    /** mahjong_SigninInfo signinAward */
    signinAward: Imahjong_SigninAward2;
}

/** Represents a mahjong_SigninInfo. */
export class mahjong_SigninInfo implements Imahjong_SigninInfo {

    /**
     * Constructs a new mahjong_SigninInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_SigninInfo);

    /** mahjong_SigninInfo signinDays. */
    public signinDays: number[];

    /** mahjong_SigninInfo buqianka. */
    public buqianka: number;

    /** mahjong_SigninInfo signinAward. */
    public signinAward: Imahjong_SigninAward2;

    /**
     * Creates a new mahjong_SigninInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_SigninInfo instance
     */
    public static create(properties?: Imahjong_SigninInfo): mahjong_SigninInfo;

    /**
     * Encodes the specified mahjong_SigninInfo message. Does not implicitly {@link mahjong_SigninInfo.verify|verify} messages.
     * @param message mahjong_SigninInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_SigninInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_SigninInfo message, length delimited. Does not implicitly {@link mahjong_SigninInfo.verify|verify} messages.
     * @param message mahjong_SigninInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_SigninInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_SigninInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_SigninInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_SigninInfo;

    /**
     * Decodes a mahjong_SigninInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_SigninInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_SigninInfo;

    /**
     * Verifies a mahjong_SigninInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_SigninInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_SigninInfo
     */
    public static fromObject(object: { [k: string]: any }): mahjong_SigninInfo;

    /**
     * Creates a plain object from a mahjong_SigninInfo message. Also converts values to other types if specified.
     * @param message mahjong_SigninInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_SigninInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_SigninInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_game_get_score_noti. */
export interface Imahjong_bc_game_get_score_noti {

    /** mahjong_bc_game_get_score_noti rankScore */
    rankScore: number;
}

/** Represents a mahjong_bc_game_get_score_noti. */
export class mahjong_bc_game_get_score_noti implements Imahjong_bc_game_get_score_noti {

    /**
     * Constructs a new mahjong_bc_game_get_score_noti.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_game_get_score_noti);

    /** mahjong_bc_game_get_score_noti rankScore. */
    public rankScore: number;

    /**
     * Creates a new mahjong_bc_game_get_score_noti instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_game_get_score_noti instance
     */
    public static create(properties?: Imahjong_bc_game_get_score_noti): mahjong_bc_game_get_score_noti;

    /**
     * Encodes the specified mahjong_bc_game_get_score_noti message. Does not implicitly {@link mahjong_bc_game_get_score_noti.verify|verify} messages.
     * @param message mahjong_bc_game_get_score_noti message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_game_get_score_noti, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_game_get_score_noti message, length delimited. Does not implicitly {@link mahjong_bc_game_get_score_noti.verify|verify} messages.
     * @param message mahjong_bc_game_get_score_noti message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_game_get_score_noti, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_game_get_score_noti message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_game_get_score_noti
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_game_get_score_noti;

    /**
     * Decodes a mahjong_bc_game_get_score_noti message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_game_get_score_noti
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_game_get_score_noti;

    /**
     * Verifies a mahjong_bc_game_get_score_noti message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_game_get_score_noti message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_game_get_score_noti
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_game_get_score_noti;

    /**
     * Creates a plain object from a mahjong_bc_game_get_score_noti message. Also converts values to other types if specified.
     * @param message mahjong_bc_game_get_score_noti
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_game_get_score_noti, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_game_get_score_noti to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_season_card_status_ack. */
export interface Imahjong_lc_get_season_card_status_ack {

    /** mahjong_lc_get_season_card_status_ack ret */
    ret: number;

    /** mahjong_lc_get_season_card_status_ack startDate */
    startDate: number;

    /** mahjong_lc_get_season_card_status_ack endDate */
    endDate: number;

    /** mahjong_lc_get_season_card_status_ack cardType */
    cardType: number;
}

/** Represents a mahjong_lc_get_season_card_status_ack. */
export class mahjong_lc_get_season_card_status_ack implements Imahjong_lc_get_season_card_status_ack {

    /**
     * Constructs a new mahjong_lc_get_season_card_status_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_season_card_status_ack);

    /** mahjong_lc_get_season_card_status_ack ret. */
    public ret: number;

    /** mahjong_lc_get_season_card_status_ack startDate. */
    public startDate: number;

    /** mahjong_lc_get_season_card_status_ack endDate. */
    public endDate: number;

    /** mahjong_lc_get_season_card_status_ack cardType. */
    public cardType: number;

    /**
     * Creates a new mahjong_lc_get_season_card_status_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_season_card_status_ack instance
     */
    public static create(properties?: Imahjong_lc_get_season_card_status_ack): mahjong_lc_get_season_card_status_ack;

    /**
     * Encodes the specified mahjong_lc_get_season_card_status_ack message. Does not implicitly {@link mahjong_lc_get_season_card_status_ack.verify|verify} messages.
     * @param message mahjong_lc_get_season_card_status_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_season_card_status_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_season_card_status_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_season_card_status_ack.verify|verify} messages.
     * @param message mahjong_lc_get_season_card_status_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_season_card_status_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_season_card_status_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_season_card_status_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_season_card_status_ack;

    /**
     * Decodes a mahjong_lc_get_season_card_status_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_season_card_status_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_season_card_status_ack;

    /**
     * Verifies a mahjong_lc_get_season_card_status_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_season_card_status_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_season_card_status_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_season_card_status_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_season_card_status_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_season_card_status_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_season_card_status_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_season_card_status_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_create_table_ack20121227. */
export interface Imahjong_bc_create_table_ack20121227 {

    /** mahjong_bc_create_table_ack20121227 ret */
    ret: number;

    /** mahjong_bc_create_table_ack20121227 tableAttrs */
    tableAttrs: Imahjong_TableAttr20121227;
}

/** Represents a mahjong_bc_create_table_ack20121227. */
export class mahjong_bc_create_table_ack20121227 implements Imahjong_bc_create_table_ack20121227 {

    /**
     * Constructs a new mahjong_bc_create_table_ack20121227.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_create_table_ack20121227);

    /** mahjong_bc_create_table_ack20121227 ret. */
    public ret: number;

    /** mahjong_bc_create_table_ack20121227 tableAttrs. */
    public tableAttrs: Imahjong_TableAttr20121227;

    /**
     * Creates a new mahjong_bc_create_table_ack20121227 instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_create_table_ack20121227 instance
     */
    public static create(properties?: Imahjong_bc_create_table_ack20121227): mahjong_bc_create_table_ack20121227;

    /**
     * Encodes the specified mahjong_bc_create_table_ack20121227 message. Does not implicitly {@link mahjong_bc_create_table_ack20121227.verify|verify} messages.
     * @param message mahjong_bc_create_table_ack20121227 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_create_table_ack20121227, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_create_table_ack20121227 message, length delimited. Does not implicitly {@link mahjong_bc_create_table_ack20121227.verify|verify} messages.
     * @param message mahjong_bc_create_table_ack20121227 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_create_table_ack20121227, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_create_table_ack20121227 message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_create_table_ack20121227
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_create_table_ack20121227;

    /**
     * Decodes a mahjong_bc_create_table_ack20121227 message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_create_table_ack20121227
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_create_table_ack20121227;

    /**
     * Verifies a mahjong_bc_create_table_ack20121227 message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_create_table_ack20121227 message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_create_table_ack20121227
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_create_table_ack20121227;

    /**
     * Creates a plain object from a mahjong_bc_create_table_ack20121227 message. Also converts values to other types if specified.
     * @param message mahjong_bc_create_table_ack20121227
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_create_table_ack20121227, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_create_table_ack20121227 to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_three_draw_data_ack. */
export interface Imahjong_lc_get_three_draw_data_ack {

    /** mahjong_lc_get_three_draw_data_ack ret */
    ret: number;

    /** mahjong_lc_get_three_draw_data_ack times */
    times: number;
}

/** Represents a mahjong_lc_get_three_draw_data_ack. */
export class mahjong_lc_get_three_draw_data_ack implements Imahjong_lc_get_three_draw_data_ack {

    /**
     * Constructs a new mahjong_lc_get_three_draw_data_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_three_draw_data_ack);

    /** mahjong_lc_get_three_draw_data_ack ret. */
    public ret: number;

    /** mahjong_lc_get_three_draw_data_ack times. */
    public times: number;

    /**
     * Creates a new mahjong_lc_get_three_draw_data_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_three_draw_data_ack instance
     */
    public static create(properties?: Imahjong_lc_get_three_draw_data_ack): mahjong_lc_get_three_draw_data_ack;

    /**
     * Encodes the specified mahjong_lc_get_three_draw_data_ack message. Does not implicitly {@link mahjong_lc_get_three_draw_data_ack.verify|verify} messages.
     * @param message mahjong_lc_get_three_draw_data_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_three_draw_data_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_three_draw_data_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_three_draw_data_ack.verify|verify} messages.
     * @param message mahjong_lc_get_three_draw_data_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_three_draw_data_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_three_draw_data_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_three_draw_data_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_three_draw_data_ack;

    /**
     * Decodes a mahjong_lc_get_three_draw_data_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_three_draw_data_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_three_draw_data_ack;

    /**
     * Verifies a mahjong_lc_get_three_draw_data_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_three_draw_data_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_three_draw_data_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_three_draw_data_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_three_draw_data_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_three_draw_data_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_three_draw_data_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_three_draw_data_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_server_status_req. */
export interface Imahjong_cl_get_server_status_req {

    /** mahjong_cl_get_server_status_req gameId */
    gameId: number;
}

/** Represents a mahjong_cl_get_server_status_req. */
export class mahjong_cl_get_server_status_req implements Imahjong_cl_get_server_status_req {

    /**
     * Constructs a new mahjong_cl_get_server_status_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_server_status_req);

    /** mahjong_cl_get_server_status_req gameId. */
    public gameId: number;

    /**
     * Creates a new mahjong_cl_get_server_status_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_server_status_req instance
     */
    public static create(properties?: Imahjong_cl_get_server_status_req): mahjong_cl_get_server_status_req;

    /**
     * Encodes the specified mahjong_cl_get_server_status_req message. Does not implicitly {@link mahjong_cl_get_server_status_req.verify|verify} messages.
     * @param message mahjong_cl_get_server_status_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_server_status_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_server_status_req message, length delimited. Does not implicitly {@link mahjong_cl_get_server_status_req.verify|verify} messages.
     * @param message mahjong_cl_get_server_status_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_server_status_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_server_status_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_server_status_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_server_status_req;

    /**
     * Decodes a mahjong_cl_get_server_status_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_server_status_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_server_status_req;

    /**
     * Verifies a mahjong_cl_get_server_status_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_server_status_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_server_status_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_server_status_req;

    /**
     * Creates a plain object from a mahjong_cl_get_server_status_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_server_status_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_server_status_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_server_status_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_achieve_ext_award_req. */
export interface Imahjong_cl_get_achieve_ext_award_req {

    /** mahjong_cl_get_achieve_ext_award_req index */
    index: number;
}

/** Represents a mahjong_cl_get_achieve_ext_award_req. */
export class mahjong_cl_get_achieve_ext_award_req implements Imahjong_cl_get_achieve_ext_award_req {

    /**
     * Constructs a new mahjong_cl_get_achieve_ext_award_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_achieve_ext_award_req);

    /** mahjong_cl_get_achieve_ext_award_req index. */
    public index: number;

    /**
     * Creates a new mahjong_cl_get_achieve_ext_award_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_achieve_ext_award_req instance
     */
    public static create(properties?: Imahjong_cl_get_achieve_ext_award_req): mahjong_cl_get_achieve_ext_award_req;

    /**
     * Encodes the specified mahjong_cl_get_achieve_ext_award_req message. Does not implicitly {@link mahjong_cl_get_achieve_ext_award_req.verify|verify} messages.
     * @param message mahjong_cl_get_achieve_ext_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_achieve_ext_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_achieve_ext_award_req message, length delimited. Does not implicitly {@link mahjong_cl_get_achieve_ext_award_req.verify|verify} messages.
     * @param message mahjong_cl_get_achieve_ext_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_achieve_ext_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_achieve_ext_award_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_achieve_ext_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_achieve_ext_award_req;

    /**
     * Decodes a mahjong_cl_get_achieve_ext_award_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_achieve_ext_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_achieve_ext_award_req;

    /**
     * Verifies a mahjong_cl_get_achieve_ext_award_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_achieve_ext_award_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_achieve_ext_award_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_achieve_ext_award_req;

    /**
     * Creates a plain object from a mahjong_cl_get_achieve_ext_award_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_achieve_ext_award_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_achieve_ext_award_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_achieve_ext_award_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_sys_feel_not. */
export interface Imahjong_lc_sys_feel_not {

    /** mahjong_lc_sys_feel_not sendGuid */
    sendGuid: (number|Long);
}

/** Represents a mahjong_lc_sys_feel_not. */
export class mahjong_lc_sys_feel_not implements Imahjong_lc_sys_feel_not {

    /**
     * Constructs a new mahjong_lc_sys_feel_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_sys_feel_not);

    /** mahjong_lc_sys_feel_not sendGuid. */
    public sendGuid: (number|Long);

    /**
     * Creates a new mahjong_lc_sys_feel_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_sys_feel_not instance
     */
    public static create(properties?: Imahjong_lc_sys_feel_not): mahjong_lc_sys_feel_not;

    /**
     * Encodes the specified mahjong_lc_sys_feel_not message. Does not implicitly {@link mahjong_lc_sys_feel_not.verify|verify} messages.
     * @param message mahjong_lc_sys_feel_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_sys_feel_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_sys_feel_not message, length delimited. Does not implicitly {@link mahjong_lc_sys_feel_not.verify|verify} messages.
     * @param message mahjong_lc_sys_feel_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_sys_feel_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_sys_feel_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_sys_feel_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_sys_feel_not;

    /**
     * Decodes a mahjong_lc_sys_feel_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_sys_feel_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_sys_feel_not;

    /**
     * Verifies a mahjong_lc_sys_feel_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_sys_feel_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_sys_feel_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_sys_feel_not;

    /**
     * Creates a plain object from a mahjong_lc_sys_feel_not message. Also converts values to other types if specified.
     * @param message mahjong_lc_sys_feel_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_sys_feel_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_sys_feel_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_get_win_round_score_ack. */
export interface Imahjong_bc_get_win_round_score_ack {

    /** mahjong_bc_get_win_round_score_ack ret */
    ret: number;

    /** mahjong_bc_get_win_round_score_ack plyGuid */
    plyGuid: (number|Long);

    /** mahjong_bc_get_win_round_score_ack num */
    num: number;

    /** mahjong_bc_get_win_round_score_ack score */
    score: (number|Long);

    /** mahjong_bc_get_win_round_score_ack maxNum */
    maxNum: number;

    /** mahjong_bc_get_win_round_score_ack maxScore */
    maxScore: (number|Long);
}

/** Represents a mahjong_bc_get_win_round_score_ack. */
export class mahjong_bc_get_win_round_score_ack implements Imahjong_bc_get_win_round_score_ack {

    /**
     * Constructs a new mahjong_bc_get_win_round_score_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_get_win_round_score_ack);

    /** mahjong_bc_get_win_round_score_ack ret. */
    public ret: number;

    /** mahjong_bc_get_win_round_score_ack plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_bc_get_win_round_score_ack num. */
    public num: number;

    /** mahjong_bc_get_win_round_score_ack score. */
    public score: (number|Long);

    /** mahjong_bc_get_win_round_score_ack maxNum. */
    public maxNum: number;

    /** mahjong_bc_get_win_round_score_ack maxScore. */
    public maxScore: (number|Long);

    /**
     * Creates a new mahjong_bc_get_win_round_score_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_get_win_round_score_ack instance
     */
    public static create(properties?: Imahjong_bc_get_win_round_score_ack): mahjong_bc_get_win_round_score_ack;

    /**
     * Encodes the specified mahjong_bc_get_win_round_score_ack message. Does not implicitly {@link mahjong_bc_get_win_round_score_ack.verify|verify} messages.
     * @param message mahjong_bc_get_win_round_score_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_get_win_round_score_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_get_win_round_score_ack message, length delimited. Does not implicitly {@link mahjong_bc_get_win_round_score_ack.verify|verify} messages.
     * @param message mahjong_bc_get_win_round_score_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_get_win_round_score_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_get_win_round_score_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_get_win_round_score_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_get_win_round_score_ack;

    /**
     * Decodes a mahjong_bc_get_win_round_score_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_get_win_round_score_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_get_win_round_score_ack;

    /**
     * Verifies a mahjong_bc_get_win_round_score_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_get_win_round_score_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_get_win_round_score_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_get_win_round_score_ack;

    /**
     * Creates a plain object from a mahjong_bc_get_win_round_score_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_get_win_round_score_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_get_win_round_score_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_get_win_round_score_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_achieve_award_ack. */
export interface Imahjong_lc_get_achieve_award_ack {

    /** mahjong_lc_get_achieve_award_ack ret */
    ret: number;

    /** mahjong_lc_get_achieve_award_ack money */
    money: number;

    /** mahjong_lc_get_achieve_award_ack gift */
    gift: number;
}

/** Represents a mahjong_lc_get_achieve_award_ack. */
export class mahjong_lc_get_achieve_award_ack implements Imahjong_lc_get_achieve_award_ack {

    /**
     * Constructs a new mahjong_lc_get_achieve_award_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_achieve_award_ack);

    /** mahjong_lc_get_achieve_award_ack ret. */
    public ret: number;

    /** mahjong_lc_get_achieve_award_ack money. */
    public money: number;

    /** mahjong_lc_get_achieve_award_ack gift. */
    public gift: number;

    /**
     * Creates a new mahjong_lc_get_achieve_award_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_achieve_award_ack instance
     */
    public static create(properties?: Imahjong_lc_get_achieve_award_ack): mahjong_lc_get_achieve_award_ack;

    /**
     * Encodes the specified mahjong_lc_get_achieve_award_ack message. Does not implicitly {@link mahjong_lc_get_achieve_award_ack.verify|verify} messages.
     * @param message mahjong_lc_get_achieve_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_achieve_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_achieve_award_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_achieve_award_ack.verify|verify} messages.
     * @param message mahjong_lc_get_achieve_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_achieve_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_achieve_award_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_achieve_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_achieve_award_ack;

    /**
     * Decodes a mahjong_lc_get_achieve_award_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_achieve_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_achieve_award_ack;

    /**
     * Verifies a mahjong_lc_get_achieve_award_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_achieve_award_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_achieve_award_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_achieve_award_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_achieve_award_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_achieve_award_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_achieve_award_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_achieve_award_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_fetion_rank_list_req. */
export interface Imahjong_cl_get_fetion_rank_list_req {
}

/** Represents a mahjong_cl_get_fetion_rank_list_req. */
export class mahjong_cl_get_fetion_rank_list_req implements Imahjong_cl_get_fetion_rank_list_req {

    /**
     * Constructs a new mahjong_cl_get_fetion_rank_list_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_fetion_rank_list_req);

    /**
     * Creates a new mahjong_cl_get_fetion_rank_list_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_fetion_rank_list_req instance
     */
    public static create(properties?: Imahjong_cl_get_fetion_rank_list_req): mahjong_cl_get_fetion_rank_list_req;

    /**
     * Encodes the specified mahjong_cl_get_fetion_rank_list_req message. Does not implicitly {@link mahjong_cl_get_fetion_rank_list_req.verify|verify} messages.
     * @param message mahjong_cl_get_fetion_rank_list_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_fetion_rank_list_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_fetion_rank_list_req message, length delimited. Does not implicitly {@link mahjong_cl_get_fetion_rank_list_req.verify|verify} messages.
     * @param message mahjong_cl_get_fetion_rank_list_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_fetion_rank_list_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_fetion_rank_list_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_fetion_rank_list_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_fetion_rank_list_req;

    /**
     * Decodes a mahjong_cl_get_fetion_rank_list_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_fetion_rank_list_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_fetion_rank_list_req;

    /**
     * Verifies a mahjong_cl_get_fetion_rank_list_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_fetion_rank_list_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_fetion_rank_list_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_fetion_rank_list_req;

    /**
     * Creates a plain object from a mahjong_cl_get_fetion_rank_list_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_fetion_rank_list_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_fetion_rank_list_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_fetion_rank_list_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_get_spec_props_list_ack. */
export interface Imahjong_bc_get_spec_props_list_ack {

    /** mahjong_bc_get_spec_props_list_ack ret */
    ret: number;

    /** mahjong_bc_get_spec_props_list_ack props */
    props?: (Imahjong_SpecProps[]|null);
}

/** Represents a mahjong_bc_get_spec_props_list_ack. */
export class mahjong_bc_get_spec_props_list_ack implements Imahjong_bc_get_spec_props_list_ack {

    /**
     * Constructs a new mahjong_bc_get_spec_props_list_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_get_spec_props_list_ack);

    /** mahjong_bc_get_spec_props_list_ack ret. */
    public ret: number;

    /** mahjong_bc_get_spec_props_list_ack props. */
    public props: Imahjong_SpecProps[];

    /**
     * Creates a new mahjong_bc_get_spec_props_list_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_get_spec_props_list_ack instance
     */
    public static create(properties?: Imahjong_bc_get_spec_props_list_ack): mahjong_bc_get_spec_props_list_ack;

    /**
     * Encodes the specified mahjong_bc_get_spec_props_list_ack message. Does not implicitly {@link mahjong_bc_get_spec_props_list_ack.verify|verify} messages.
     * @param message mahjong_bc_get_spec_props_list_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_get_spec_props_list_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_get_spec_props_list_ack message, length delimited. Does not implicitly {@link mahjong_bc_get_spec_props_list_ack.verify|verify} messages.
     * @param message mahjong_bc_get_spec_props_list_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_get_spec_props_list_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_get_spec_props_list_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_get_spec_props_list_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_get_spec_props_list_ack;

    /**
     * Decodes a mahjong_bc_get_spec_props_list_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_get_spec_props_list_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_get_spec_props_list_ack;

    /**
     * Verifies a mahjong_bc_get_spec_props_list_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_get_spec_props_list_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_get_spec_props_list_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_get_spec_props_list_ack;

    /**
     * Creates a plain object from a mahjong_bc_get_spec_props_list_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_get_spec_props_list_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_get_spec_props_list_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_get_spec_props_list_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_get_relief_ack. */
export interface Imahjong_bc_get_relief_ack {

    /** mahjong_bc_get_relief_ack ret */
    ret: number;
}

/** Represents a mahjong_bc_get_relief_ack. */
export class mahjong_bc_get_relief_ack implements Imahjong_bc_get_relief_ack {

    /**
     * Constructs a new mahjong_bc_get_relief_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_get_relief_ack);

    /** mahjong_bc_get_relief_ack ret. */
    public ret: number;

    /**
     * Creates a new mahjong_bc_get_relief_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_get_relief_ack instance
     */
    public static create(properties?: Imahjong_bc_get_relief_ack): mahjong_bc_get_relief_ack;

    /**
     * Encodes the specified mahjong_bc_get_relief_ack message. Does not implicitly {@link mahjong_bc_get_relief_ack.verify|verify} messages.
     * @param message mahjong_bc_get_relief_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_get_relief_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_get_relief_ack message, length delimited. Does not implicitly {@link mahjong_bc_get_relief_ack.verify|verify} messages.
     * @param message mahjong_bc_get_relief_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_get_relief_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_get_relief_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_get_relief_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_get_relief_ack;

    /**
     * Decodes a mahjong_bc_get_relief_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_get_relief_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_get_relief_ack;

    /**
     * Verifies a mahjong_bc_get_relief_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_get_relief_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_get_relief_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_get_relief_ack;

    /**
     * Creates a plain object from a mahjong_bc_get_relief_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_get_relief_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_get_relief_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_get_relief_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_ServerData2Ext. */
export interface Imahjong_ServerData2Ext {

    /** mahjong_ServerData2Ext gameId */
    gameId: number;

    /** mahjong_ServerData2Ext serverId */
    serverId: number;

    /** mahjong_ServerData2Ext serverName */
    serverName: string;

    /** mahjong_ServerData2Ext serverKey */
    serverKey: string;

    /** mahjong_ServerData2Ext serverAddr */
    serverAddr: string;

    /** mahjong_ServerData2Ext serverPort */
    serverPort: number;

    /** mahjong_ServerData2Ext baseBet */
    baseBet: number;

    /** mahjong_ServerData2Ext minMoney */
    minMoney: number;

    /** mahjong_ServerData2Ext onlinePlayerNum */
    onlinePlayerNum: number;

    /** mahjong_ServerData2Ext channelId */
    channelId: number;

    /** mahjong_ServerData2Ext extParam */
    extParam: string;

    /** mahjong_ServerData2Ext serverType */
    serverType: number;
}

/** Represents a mahjong_ServerData2Ext. */
export class mahjong_ServerData2Ext implements Imahjong_ServerData2Ext {

    /**
     * Constructs a new mahjong_ServerData2Ext.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_ServerData2Ext);

    /** mahjong_ServerData2Ext gameId. */
    public gameId: number;

    /** mahjong_ServerData2Ext serverId. */
    public serverId: number;

    /** mahjong_ServerData2Ext serverName. */
    public serverName: string;

    /** mahjong_ServerData2Ext serverKey. */
    public serverKey: string;

    /** mahjong_ServerData2Ext serverAddr. */
    public serverAddr: string;

    /** mahjong_ServerData2Ext serverPort. */
    public serverPort: number;

    /** mahjong_ServerData2Ext baseBet. */
    public baseBet: number;

    /** mahjong_ServerData2Ext minMoney. */
    public minMoney: number;

    /** mahjong_ServerData2Ext onlinePlayerNum. */
    public onlinePlayerNum: number;

    /** mahjong_ServerData2Ext channelId. */
    public channelId: number;

    /** mahjong_ServerData2Ext extParam. */
    public extParam: string;

    /** mahjong_ServerData2Ext serverType. */
    public serverType: number;

    /**
     * Creates a new mahjong_ServerData2Ext instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_ServerData2Ext instance
     */
    public static create(properties?: Imahjong_ServerData2Ext): mahjong_ServerData2Ext;

    /**
     * Encodes the specified mahjong_ServerData2Ext message. Does not implicitly {@link mahjong_ServerData2Ext.verify|verify} messages.
     * @param message mahjong_ServerData2Ext message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_ServerData2Ext, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_ServerData2Ext message, length delimited. Does not implicitly {@link mahjong_ServerData2Ext.verify|verify} messages.
     * @param message mahjong_ServerData2Ext message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_ServerData2Ext, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_ServerData2Ext message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_ServerData2Ext
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_ServerData2Ext;

    /**
     * Decodes a mahjong_ServerData2Ext message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_ServerData2Ext
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_ServerData2Ext;

    /**
     * Verifies a mahjong_ServerData2Ext message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_ServerData2Ext message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_ServerData2Ext
     */
    public static fromObject(object: { [k: string]: any }): mahjong_ServerData2Ext;

    /**
     * Creates a plain object from a mahjong_ServerData2Ext message. Also converts values to other types if specified.
     * @param message mahjong_ServerData2Ext
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_ServerData2Ext, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_ServerData2Ext to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_ply_city_data_ack. */
export interface Imahjong_lc_get_ply_city_data_ack {

    /** mahjong_lc_get_ply_city_data_ack plyGuid */
    plyGuid: (number|Long);

    /** mahjong_lc_get_ply_city_data_ack nProv */
    nProv: number;

    /** mahjong_lc_get_ply_city_data_ack nCity */
    nCity: number;

    /** mahjong_lc_get_ply_city_data_ack nCounty */
    nCounty: number;
}

/** Represents a mahjong_lc_get_ply_city_data_ack. */
export class mahjong_lc_get_ply_city_data_ack implements Imahjong_lc_get_ply_city_data_ack {

    /**
     * Constructs a new mahjong_lc_get_ply_city_data_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_ply_city_data_ack);

    /** mahjong_lc_get_ply_city_data_ack plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_lc_get_ply_city_data_ack nProv. */
    public nProv: number;

    /** mahjong_lc_get_ply_city_data_ack nCity. */
    public nCity: number;

    /** mahjong_lc_get_ply_city_data_ack nCounty. */
    public nCounty: number;

    /**
     * Creates a new mahjong_lc_get_ply_city_data_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_ply_city_data_ack instance
     */
    public static create(properties?: Imahjong_lc_get_ply_city_data_ack): mahjong_lc_get_ply_city_data_ack;

    /**
     * Encodes the specified mahjong_lc_get_ply_city_data_ack message. Does not implicitly {@link mahjong_lc_get_ply_city_data_ack.verify|verify} messages.
     * @param message mahjong_lc_get_ply_city_data_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_ply_city_data_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_ply_city_data_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_ply_city_data_ack.verify|verify} messages.
     * @param message mahjong_lc_get_ply_city_data_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_ply_city_data_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_ply_city_data_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_ply_city_data_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_ply_city_data_ack;

    /**
     * Decodes a mahjong_lc_get_ply_city_data_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_ply_city_data_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_ply_city_data_ack;

    /**
     * Verifies a mahjong_lc_get_ply_city_data_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_ply_city_data_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_ply_city_data_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_ply_city_data_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_ply_city_data_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_ply_city_data_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_ply_city_data_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_ply_city_data_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_use_spec_props_req. */
export interface Imahjong_cb_use_spec_props_req {

    /** mahjong_cb_use_spec_props_req dstPlyGuid */
    dstPlyGuid: (number|Long);

    /** mahjong_cb_use_spec_props_req index */
    index: number;

    /** mahjong_cb_use_spec_props_req amount */
    amount: number;
}

/** Represents a mahjong_cb_use_spec_props_req. */
export class mahjong_cb_use_spec_props_req implements Imahjong_cb_use_spec_props_req {

    /**
     * Constructs a new mahjong_cb_use_spec_props_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_use_spec_props_req);

    /** mahjong_cb_use_spec_props_req dstPlyGuid. */
    public dstPlyGuid: (number|Long);

    /** mahjong_cb_use_spec_props_req index. */
    public index: number;

    /** mahjong_cb_use_spec_props_req amount. */
    public amount: number;

    /**
     * Creates a new mahjong_cb_use_spec_props_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_use_spec_props_req instance
     */
    public static create(properties?: Imahjong_cb_use_spec_props_req): mahjong_cb_use_spec_props_req;

    /**
     * Encodes the specified mahjong_cb_use_spec_props_req message. Does not implicitly {@link mahjong_cb_use_spec_props_req.verify|verify} messages.
     * @param message mahjong_cb_use_spec_props_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_use_spec_props_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_use_spec_props_req message, length delimited. Does not implicitly {@link mahjong_cb_use_spec_props_req.verify|verify} messages.
     * @param message mahjong_cb_use_spec_props_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_use_spec_props_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_use_spec_props_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_use_spec_props_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_use_spec_props_req;

    /**
     * Decodes a mahjong_cb_use_spec_props_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_use_spec_props_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_use_spec_props_req;

    /**
     * Verifies a mahjong_cb_use_spec_props_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_use_spec_props_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_use_spec_props_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_use_spec_props_req;

    /**
     * Creates a plain object from a mahjong_cb_use_spec_props_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_use_spec_props_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_use_spec_props_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_use_spec_props_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_rp_relief_ack. */
export interface Imahjong_lc_get_rp_relief_ack {

    /** mahjong_lc_get_rp_relief_ack ret */
    ret: number;
}

/** Represents a mahjong_lc_get_rp_relief_ack. */
export class mahjong_lc_get_rp_relief_ack implements Imahjong_lc_get_rp_relief_ack {

    /**
     * Constructs a new mahjong_lc_get_rp_relief_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_rp_relief_ack);

    /** mahjong_lc_get_rp_relief_ack ret. */
    public ret: number;

    /**
     * Creates a new mahjong_lc_get_rp_relief_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_rp_relief_ack instance
     */
    public static create(properties?: Imahjong_lc_get_rp_relief_ack): mahjong_lc_get_rp_relief_ack;

    /**
     * Encodes the specified mahjong_lc_get_rp_relief_ack message. Does not implicitly {@link mahjong_lc_get_rp_relief_ack.verify|verify} messages.
     * @param message mahjong_lc_get_rp_relief_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_rp_relief_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_rp_relief_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_rp_relief_ack.verify|verify} messages.
     * @param message mahjong_lc_get_rp_relief_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_rp_relief_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_rp_relief_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_rp_relief_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_rp_relief_ack;

    /**
     * Decodes a mahjong_lc_get_rp_relief_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_rp_relief_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_rp_relief_ack;

    /**
     * Verifies a mahjong_lc_get_rp_relief_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_rp_relief_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_rp_relief_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_rp_relief_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_rp_relief_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_rp_relief_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_rp_relief_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_rp_relief_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_LoginAward2. */
export interface Imahjong_LoginAward2 {

    /** mahjong_LoginAward2 today */
    today: number;

    /** mahjong_LoginAward2 loginAward */
    loginAward?: (Imahjong_LoginAward[]|null);
}

/** Represents a mahjong_LoginAward2. */
export class mahjong_LoginAward2 implements Imahjong_LoginAward2 {

    /**
     * Constructs a new mahjong_LoginAward2.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_LoginAward2);

    /** mahjong_LoginAward2 today. */
    public today: number;

    /** mahjong_LoginAward2 loginAward. */
    public loginAward: Imahjong_LoginAward[];

    /**
     * Creates a new mahjong_LoginAward2 instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_LoginAward2 instance
     */
    public static create(properties?: Imahjong_LoginAward2): mahjong_LoginAward2;

    /**
     * Encodes the specified mahjong_LoginAward2 message. Does not implicitly {@link mahjong_LoginAward2.verify|verify} messages.
     * @param message mahjong_LoginAward2 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_LoginAward2, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_LoginAward2 message, length delimited. Does not implicitly {@link mahjong_LoginAward2.verify|verify} messages.
     * @param message mahjong_LoginAward2 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_LoginAward2, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_LoginAward2 message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_LoginAward2
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_LoginAward2;

    /**
     * Decodes a mahjong_LoginAward2 message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_LoginAward2
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_LoginAward2;

    /**
     * Verifies a mahjong_LoginAward2 message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_LoginAward2 message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_LoginAward2
     */
    public static fromObject(object: { [k: string]: any }): mahjong_LoginAward2;

    /**
     * Creates a plain object from a mahjong_LoginAward2 message. Also converts values to other types if specified.
     * @param message mahjong_LoginAward2
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_LoginAward2, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_LoginAward2 to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_get_spec_props_list_req. */
export interface Imahjong_cb_get_spec_props_list_req {
}

/** Represents a mahjong_cb_get_spec_props_list_req. */
export class mahjong_cb_get_spec_props_list_req implements Imahjong_cb_get_spec_props_list_req {

    /**
     * Constructs a new mahjong_cb_get_spec_props_list_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_get_spec_props_list_req);

    /**
     * Creates a new mahjong_cb_get_spec_props_list_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_get_spec_props_list_req instance
     */
    public static create(properties?: Imahjong_cb_get_spec_props_list_req): mahjong_cb_get_spec_props_list_req;

    /**
     * Encodes the specified mahjong_cb_get_spec_props_list_req message. Does not implicitly {@link mahjong_cb_get_spec_props_list_req.verify|verify} messages.
     * @param message mahjong_cb_get_spec_props_list_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_get_spec_props_list_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_get_spec_props_list_req message, length delimited. Does not implicitly {@link mahjong_cb_get_spec_props_list_req.verify|verify} messages.
     * @param message mahjong_cb_get_spec_props_list_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_get_spec_props_list_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_get_spec_props_list_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_get_spec_props_list_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_get_spec_props_list_req;

    /**
     * Decodes a mahjong_cb_get_spec_props_list_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_get_spec_props_list_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_get_spec_props_list_req;

    /**
     * Verifies a mahjong_cb_get_spec_props_list_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_get_spec_props_list_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_get_spec_props_list_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_get_spec_props_list_req;

    /**
     * Creates a plain object from a mahjong_cb_get_spec_props_list_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_get_spec_props_list_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_get_spec_props_list_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_get_spec_props_list_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_all_frd_feel_value_ack. */
export interface Imahjong_lc_get_all_frd_feel_value_ack {
}

/** Represents a mahjong_lc_get_all_frd_feel_value_ack. */
export class mahjong_lc_get_all_frd_feel_value_ack implements Imahjong_lc_get_all_frd_feel_value_ack {

    /**
     * Constructs a new mahjong_lc_get_all_frd_feel_value_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_all_frd_feel_value_ack);

    /**
     * Creates a new mahjong_lc_get_all_frd_feel_value_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_all_frd_feel_value_ack instance
     */
    public static create(properties?: Imahjong_lc_get_all_frd_feel_value_ack): mahjong_lc_get_all_frd_feel_value_ack;

    /**
     * Encodes the specified mahjong_lc_get_all_frd_feel_value_ack message. Does not implicitly {@link mahjong_lc_get_all_frd_feel_value_ack.verify|verify} messages.
     * @param message mahjong_lc_get_all_frd_feel_value_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_all_frd_feel_value_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_all_frd_feel_value_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_all_frd_feel_value_ack.verify|verify} messages.
     * @param message mahjong_lc_get_all_frd_feel_value_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_all_frd_feel_value_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_all_frd_feel_value_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_all_frd_feel_value_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_all_frd_feel_value_ack;

    /**
     * Decodes a mahjong_lc_get_all_frd_feel_value_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_all_frd_feel_value_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_all_frd_feel_value_ack;

    /**
     * Verifies a mahjong_lc_get_all_frd_feel_value_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_all_frd_feel_value_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_all_frd_feel_value_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_all_frd_feel_value_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_all_frd_feel_value_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_all_frd_feel_value_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_all_frd_feel_value_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_all_frd_feel_value_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_trumpet_req. */
export interface Imahjong_cl_trumpet_req {

    /** mahjong_cl_trumpet_req type */
    type: number;

    /** mahjong_cl_trumpet_req message */
    message: string;

    /** mahjong_cl_trumpet_req gameId */
    gameId: number;
}

/** Represents a mahjong_cl_trumpet_req. */
export class mahjong_cl_trumpet_req implements Imahjong_cl_trumpet_req {

    /**
     * Constructs a new mahjong_cl_trumpet_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_trumpet_req);

    /** mahjong_cl_trumpet_req type. */
    public type: number;

    /** mahjong_cl_trumpet_req message. */
    public message: string;

    /** mahjong_cl_trumpet_req gameId. */
    public gameId: number;

    /**
     * Creates a new mahjong_cl_trumpet_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_trumpet_req instance
     */
    public static create(properties?: Imahjong_cl_trumpet_req): mahjong_cl_trumpet_req;

    /**
     * Encodes the specified mahjong_cl_trumpet_req message. Does not implicitly {@link mahjong_cl_trumpet_req.verify|verify} messages.
     * @param message mahjong_cl_trumpet_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_trumpet_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_trumpet_req message, length delimited. Does not implicitly {@link mahjong_cl_trumpet_req.verify|verify} messages.
     * @param message mahjong_cl_trumpet_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_trumpet_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_trumpet_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_trumpet_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_trumpet_req;

    /**
     * Decodes a mahjong_cl_trumpet_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_trumpet_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_trumpet_req;

    /**
     * Verifies a mahjong_cl_trumpet_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_trumpet_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_trumpet_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_trumpet_req;

    /**
     * Creates a plain object from a mahjong_cl_trumpet_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_trumpet_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_trumpet_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_trumpet_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_turntable_login_award_config_req. */
export interface Imahjong_cl_get_turntable_login_award_config_req {

    /** mahjong_cl_get_turntable_login_award_config_req gameId */
    gameId: number;
}

/** Represents a mahjong_cl_get_turntable_login_award_config_req. */
export class mahjong_cl_get_turntable_login_award_config_req implements Imahjong_cl_get_turntable_login_award_config_req {

    /**
     * Constructs a new mahjong_cl_get_turntable_login_award_config_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_turntable_login_award_config_req);

    /** mahjong_cl_get_turntable_login_award_config_req gameId. */
    public gameId: number;

    /**
     * Creates a new mahjong_cl_get_turntable_login_award_config_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_turntable_login_award_config_req instance
     */
    public static create(properties?: Imahjong_cl_get_turntable_login_award_config_req): mahjong_cl_get_turntable_login_award_config_req;

    /**
     * Encodes the specified mahjong_cl_get_turntable_login_award_config_req message. Does not implicitly {@link mahjong_cl_get_turntable_login_award_config_req.verify|verify} messages.
     * @param message mahjong_cl_get_turntable_login_award_config_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_turntable_login_award_config_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_turntable_login_award_config_req message, length delimited. Does not implicitly {@link mahjong_cl_get_turntable_login_award_config_req.verify|verify} messages.
     * @param message mahjong_cl_get_turntable_login_award_config_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_turntable_login_award_config_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_turntable_login_award_config_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_turntable_login_award_config_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_turntable_login_award_config_req;

    /**
     * Decodes a mahjong_cl_get_turntable_login_award_config_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_turntable_login_award_config_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_turntable_login_award_config_req;

    /**
     * Verifies a mahjong_cl_get_turntable_login_award_config_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_turntable_login_award_config_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_turntable_login_award_config_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_turntable_login_award_config_req;

    /**
     * Creates a plain object from a mahjong_cl_get_turntable_login_award_config_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_turntable_login_award_config_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_turntable_login_award_config_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_turntable_login_award_config_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_send_friend_msg_req. */
export interface Imahjong_cl_send_friend_msg_req {

    /** mahjong_cl_send_friend_msg_req rcvGuid */
    rcvGuid: (number|Long);

    /** mahjong_cl_send_friend_msg_req type */
    type: number;

    /** mahjong_cl_send_friend_msg_req message */
    message: string;
}

/** Represents a mahjong_cl_send_friend_msg_req. */
export class mahjong_cl_send_friend_msg_req implements Imahjong_cl_send_friend_msg_req {

    /**
     * Constructs a new mahjong_cl_send_friend_msg_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_send_friend_msg_req);

    /** mahjong_cl_send_friend_msg_req rcvGuid. */
    public rcvGuid: (number|Long);

    /** mahjong_cl_send_friend_msg_req type. */
    public type: number;

    /** mahjong_cl_send_friend_msg_req message. */
    public message: string;

    /**
     * Creates a new mahjong_cl_send_friend_msg_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_send_friend_msg_req instance
     */
    public static create(properties?: Imahjong_cl_send_friend_msg_req): mahjong_cl_send_friend_msg_req;

    /**
     * Encodes the specified mahjong_cl_send_friend_msg_req message. Does not implicitly {@link mahjong_cl_send_friend_msg_req.verify|verify} messages.
     * @param message mahjong_cl_send_friend_msg_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_send_friend_msg_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_send_friend_msg_req message, length delimited. Does not implicitly {@link mahjong_cl_send_friend_msg_req.verify|verify} messages.
     * @param message mahjong_cl_send_friend_msg_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_send_friend_msg_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_send_friend_msg_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_send_friend_msg_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_send_friend_msg_req;

    /**
     * Decodes a mahjong_cl_send_friend_msg_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_send_friend_msg_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_send_friend_msg_req;

    /**
     * Verifies a mahjong_cl_send_friend_msg_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_send_friend_msg_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_send_friend_msg_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_send_friend_msg_req;

    /**
     * Creates a plain object from a mahjong_cl_send_friend_msg_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_send_friend_msg_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_send_friend_msg_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_send_friend_msg_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_set_password_safe_ack. */
export interface Imahjong_lc_set_password_safe_ack {

    /** mahjong_lc_set_password_safe_ack ret */
    ret: number;

    /** mahjong_lc_set_password_safe_ack plyGuid */
    plyGuid: (number|Long);
}

/** Represents a mahjong_lc_set_password_safe_ack. */
export class mahjong_lc_set_password_safe_ack implements Imahjong_lc_set_password_safe_ack {

    /**
     * Constructs a new mahjong_lc_set_password_safe_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_set_password_safe_ack);

    /** mahjong_lc_set_password_safe_ack ret. */
    public ret: number;

    /** mahjong_lc_set_password_safe_ack plyGuid. */
    public plyGuid: (number|Long);

    /**
     * Creates a new mahjong_lc_set_password_safe_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_set_password_safe_ack instance
     */
    public static create(properties?: Imahjong_lc_set_password_safe_ack): mahjong_lc_set_password_safe_ack;

    /**
     * Encodes the specified mahjong_lc_set_password_safe_ack message. Does not implicitly {@link mahjong_lc_set_password_safe_ack.verify|verify} messages.
     * @param message mahjong_lc_set_password_safe_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_set_password_safe_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_set_password_safe_ack message, length delimited. Does not implicitly {@link mahjong_lc_set_password_safe_ack.verify|verify} messages.
     * @param message mahjong_lc_set_password_safe_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_set_password_safe_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_set_password_safe_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_set_password_safe_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_set_password_safe_ack;

    /**
     * Decodes a mahjong_lc_set_password_safe_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_set_password_safe_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_set_password_safe_ack;

    /**
     * Verifies a mahjong_lc_set_password_safe_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_set_password_safe_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_set_password_safe_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_set_password_safe_ack;

    /**
     * Creates a plain object from a mahjong_lc_set_password_safe_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_set_password_safe_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_set_password_safe_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_set_password_safe_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_ExtraRelief. */
export interface Imahjong_ExtraRelief {

    /** mahjong_ExtraRelief id */
    id: number;

    /** mahjong_ExtraRelief gameId */
    gameId: number;

    /** mahjong_ExtraRelief status */
    status: number;

    /** mahjong_ExtraRelief param */
    param: string;
}

/** Represents a mahjong_ExtraRelief. */
export class mahjong_ExtraRelief implements Imahjong_ExtraRelief {

    /**
     * Constructs a new mahjong_ExtraRelief.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_ExtraRelief);

    /** mahjong_ExtraRelief id. */
    public id: number;

    /** mahjong_ExtraRelief gameId. */
    public gameId: number;

    /** mahjong_ExtraRelief status. */
    public status: number;

    /** mahjong_ExtraRelief param. */
    public param: string;

    /**
     * Creates a new mahjong_ExtraRelief instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_ExtraRelief instance
     */
    public static create(properties?: Imahjong_ExtraRelief): mahjong_ExtraRelief;

    /**
     * Encodes the specified mahjong_ExtraRelief message. Does not implicitly {@link mahjong_ExtraRelief.verify|verify} messages.
     * @param message mahjong_ExtraRelief message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_ExtraRelief, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_ExtraRelief message, length delimited. Does not implicitly {@link mahjong_ExtraRelief.verify|verify} messages.
     * @param message mahjong_ExtraRelief message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_ExtraRelief, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_ExtraRelief message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_ExtraRelief
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_ExtraRelief;

    /**
     * Decodes a mahjong_ExtraRelief message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_ExtraRelief
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_ExtraRelief;

    /**
     * Verifies a mahjong_ExtraRelief message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_ExtraRelief message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_ExtraRelief
     */
    public static fromObject(object: { [k: string]: any }): mahjong_ExtraRelief;

    /**
     * Creates a plain object from a mahjong_ExtraRelief message. Also converts values to other types if specified.
     * @param message mahjong_ExtraRelief
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_ExtraRelief, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_ExtraRelief to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_reload_user_data_ack. */
export interface Imahjong_lc_reload_user_data_ack {

    /** mahjong_lc_reload_user_data_ack ret */
    ret: number;

    /** mahjong_lc_reload_user_data_ack money */
    money: (number|Long);

    /** mahjong_lc_reload_user_data_ack gift */
    gift: number;

    /** mahjong_lc_reload_user_data_ack level */
    level: number;

    /** mahjong_lc_reload_user_data_ack param */
    param: string;
}

/** Represents a mahjong_lc_reload_user_data_ack. */
export class mahjong_lc_reload_user_data_ack implements Imahjong_lc_reload_user_data_ack {

    /**
     * Constructs a new mahjong_lc_reload_user_data_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_reload_user_data_ack);

    /** mahjong_lc_reload_user_data_ack ret. */
    public ret: number;

    /** mahjong_lc_reload_user_data_ack money. */
    public money: (number|Long);

    /** mahjong_lc_reload_user_data_ack gift. */
    public gift: number;

    /** mahjong_lc_reload_user_data_ack level. */
    public level: number;

    /** mahjong_lc_reload_user_data_ack param. */
    public param: string;

    /**
     * Creates a new mahjong_lc_reload_user_data_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_reload_user_data_ack instance
     */
    public static create(properties?: Imahjong_lc_reload_user_data_ack): mahjong_lc_reload_user_data_ack;

    /**
     * Encodes the specified mahjong_lc_reload_user_data_ack message. Does not implicitly {@link mahjong_lc_reload_user_data_ack.verify|verify} messages.
     * @param message mahjong_lc_reload_user_data_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_reload_user_data_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_reload_user_data_ack message, length delimited. Does not implicitly {@link mahjong_lc_reload_user_data_ack.verify|verify} messages.
     * @param message mahjong_lc_reload_user_data_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_reload_user_data_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_reload_user_data_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_reload_user_data_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_reload_user_data_ack;

    /**
     * Decodes a mahjong_lc_reload_user_data_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_reload_user_data_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_reload_user_data_ack;

    /**
     * Verifies a mahjong_lc_reload_user_data_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_reload_user_data_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_reload_user_data_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_reload_user_data_ack;

    /**
     * Creates a plain object from a mahjong_lc_reload_user_data_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_reload_user_data_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_reload_user_data_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_reload_user_data_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_RankItem. */
export interface Imahjong_RankItem {

    /** mahjong_RankItem index */
    index: number;

    /** mahjong_RankItem plyGuid */
    plyGuid: (number|Long);

    /** mahjong_RankItem plyNickname */
    plyNickname: string;

    /** mahjong_RankItem plyStatus */
    plyStatus: number;

    /** mahjong_RankItem serverId */
    serverId: number;

    /** mahjong_RankItem tableId */
    tableId: number;

    /** mahjong_RankItem param1 */
    param1: number;

    /** mahjong_RankItem param2 */
    param2: number;
}

/** Represents a mahjong_RankItem. */
export class mahjong_RankItem implements Imahjong_RankItem {

    /**
     * Constructs a new mahjong_RankItem.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_RankItem);

    /** mahjong_RankItem index. */
    public index: number;

    /** mahjong_RankItem plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_RankItem plyNickname. */
    public plyNickname: string;

    /** mahjong_RankItem plyStatus. */
    public plyStatus: number;

    /** mahjong_RankItem serverId. */
    public serverId: number;

    /** mahjong_RankItem tableId. */
    public tableId: number;

    /** mahjong_RankItem param1. */
    public param1: number;

    /** mahjong_RankItem param2. */
    public param2: number;

    /**
     * Creates a new mahjong_RankItem instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_RankItem instance
     */
    public static create(properties?: Imahjong_RankItem): mahjong_RankItem;

    /**
     * Encodes the specified mahjong_RankItem message. Does not implicitly {@link mahjong_RankItem.verify|verify} messages.
     * @param message mahjong_RankItem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_RankItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_RankItem message, length delimited. Does not implicitly {@link mahjong_RankItem.verify|verify} messages.
     * @param message mahjong_RankItem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_RankItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_RankItem message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_RankItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_RankItem;

    /**
     * Decodes a mahjong_RankItem message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_RankItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_RankItem;

    /**
     * Verifies a mahjong_RankItem message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_RankItem message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_RankItem
     */
    public static fromObject(object: { [k: string]: any }): mahjong_RankItem;

    /**
     * Creates a plain object from a mahjong_RankItem message. Also converts values to other types if specified.
     * @param message mahjong_RankItem
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_RankItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_RankItem to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_OnlineRankItem. */
export interface Imahjong_OnlineRankItem {

    /** mahjong_OnlineRankItem index */
    index: number;

    /** mahjong_OnlineRankItem plyGuid */
    plyGuid: (number|Long);

    /** mahjong_OnlineRankItem plyNickname */
    plyNickname: string;

    /** mahjong_OnlineRankItem plyStatus */
    plyStatus: number;

    /** mahjong_OnlineRankItem gameId */
    gameId: number;

    /** mahjong_OnlineRankItem serverId */
    serverId: number;

    /** mahjong_OnlineRankItem tableId */
    tableId: number;

    /** mahjong_OnlineRankItem vip */
    vip: number;

    /** mahjong_OnlineRankItem level */
    level: number;

    /** mahjong_OnlineRankItem exp */
    exp: number;

    /** mahjong_OnlineRankItem money */
    money: (number|Long);

    /** mahjong_OnlineRankItem param1 */
    param1: number;

    /** mahjong_OnlineRankItem param2 */
    param2: number;
}

/** Represents a mahjong_OnlineRankItem. */
export class mahjong_OnlineRankItem implements Imahjong_OnlineRankItem {

    /**
     * Constructs a new mahjong_OnlineRankItem.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_OnlineRankItem);

    /** mahjong_OnlineRankItem index. */
    public index: number;

    /** mahjong_OnlineRankItem plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_OnlineRankItem plyNickname. */
    public plyNickname: string;

    /** mahjong_OnlineRankItem plyStatus. */
    public plyStatus: number;

    /** mahjong_OnlineRankItem gameId. */
    public gameId: number;

    /** mahjong_OnlineRankItem serverId. */
    public serverId: number;

    /** mahjong_OnlineRankItem tableId. */
    public tableId: number;

    /** mahjong_OnlineRankItem vip. */
    public vip: number;

    /** mahjong_OnlineRankItem level. */
    public level: number;

    /** mahjong_OnlineRankItem exp. */
    public exp: number;

    /** mahjong_OnlineRankItem money. */
    public money: (number|Long);

    /** mahjong_OnlineRankItem param1. */
    public param1: number;

    /** mahjong_OnlineRankItem param2. */
    public param2: number;

    /**
     * Creates a new mahjong_OnlineRankItem instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_OnlineRankItem instance
     */
    public static create(properties?: Imahjong_OnlineRankItem): mahjong_OnlineRankItem;

    /**
     * Encodes the specified mahjong_OnlineRankItem message. Does not implicitly {@link mahjong_OnlineRankItem.verify|verify} messages.
     * @param message mahjong_OnlineRankItem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_OnlineRankItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_OnlineRankItem message, length delimited. Does not implicitly {@link mahjong_OnlineRankItem.verify|verify} messages.
     * @param message mahjong_OnlineRankItem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_OnlineRankItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_OnlineRankItem message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_OnlineRankItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_OnlineRankItem;

    /**
     * Decodes a mahjong_OnlineRankItem message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_OnlineRankItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_OnlineRankItem;

    /**
     * Verifies a mahjong_OnlineRankItem message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_OnlineRankItem message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_OnlineRankItem
     */
    public static fromObject(object: { [k: string]: any }): mahjong_OnlineRankItem;

    /**
     * Creates a plain object from a mahjong_OnlineRankItem message. Also converts values to other types if specified.
     * @param message mahjong_OnlineRankItem
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_OnlineRankItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_OnlineRankItem to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_continuous_landing_get_reward_req. */
export interface Imahjong_cl_continuous_landing_get_reward_req {

    /** mahjong_cl_continuous_landing_get_reward_req subGameId */
    subGameId: number;
}

/** Represents a mahjong_cl_continuous_landing_get_reward_req. */
export class mahjong_cl_continuous_landing_get_reward_req implements Imahjong_cl_continuous_landing_get_reward_req {

    /**
     * Constructs a new mahjong_cl_continuous_landing_get_reward_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_continuous_landing_get_reward_req);

    /** mahjong_cl_continuous_landing_get_reward_req subGameId. */
    public subGameId: number;

    /**
     * Creates a new mahjong_cl_continuous_landing_get_reward_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_continuous_landing_get_reward_req instance
     */
    public static create(properties?: Imahjong_cl_continuous_landing_get_reward_req): mahjong_cl_continuous_landing_get_reward_req;

    /**
     * Encodes the specified mahjong_cl_continuous_landing_get_reward_req message. Does not implicitly {@link mahjong_cl_continuous_landing_get_reward_req.verify|verify} messages.
     * @param message mahjong_cl_continuous_landing_get_reward_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_continuous_landing_get_reward_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_continuous_landing_get_reward_req message, length delimited. Does not implicitly {@link mahjong_cl_continuous_landing_get_reward_req.verify|verify} messages.
     * @param message mahjong_cl_continuous_landing_get_reward_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_continuous_landing_get_reward_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_continuous_landing_get_reward_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_continuous_landing_get_reward_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_continuous_landing_get_reward_req;

    /**
     * Decodes a mahjong_cl_continuous_landing_get_reward_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_continuous_landing_get_reward_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_continuous_landing_get_reward_req;

    /**
     * Verifies a mahjong_cl_continuous_landing_get_reward_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_continuous_landing_get_reward_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_continuous_landing_get_reward_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_continuous_landing_get_reward_req;

    /**
     * Creates a plain object from a mahjong_cl_continuous_landing_get_reward_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_continuous_landing_get_reward_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_continuous_landing_get_reward_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_continuous_landing_get_reward_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_robot_money_status. */
export interface Imahjong_robot_money_status {

    /** mahjong_robot_money_status money */
    money: number;

    /** mahjong_robot_money_status robotNum */
    robotNum: number;
}

/** Represents a mahjong_robot_money_status. */
export class mahjong_robot_money_status implements Imahjong_robot_money_status {

    /**
     * Constructs a new mahjong_robot_money_status.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_robot_money_status);

    /** mahjong_robot_money_status money. */
    public money: number;

    /** mahjong_robot_money_status robotNum. */
    public robotNum: number;

    /**
     * Creates a new mahjong_robot_money_status instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_robot_money_status instance
     */
    public static create(properties?: Imahjong_robot_money_status): mahjong_robot_money_status;

    /**
     * Encodes the specified mahjong_robot_money_status message. Does not implicitly {@link mahjong_robot_money_status.verify|verify} messages.
     * @param message mahjong_robot_money_status message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_robot_money_status, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_robot_money_status message, length delimited. Does not implicitly {@link mahjong_robot_money_status.verify|verify} messages.
     * @param message mahjong_robot_money_status message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_robot_money_status, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_robot_money_status message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_robot_money_status
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_robot_money_status;

    /**
     * Decodes a mahjong_robot_money_status message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_robot_money_status
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_robot_money_status;

    /**
     * Verifies a mahjong_robot_money_status message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_robot_money_status message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_robot_money_status
     */
    public static fromObject(object: { [k: string]: any }): mahjong_robot_money_status;

    /**
     * Creates a plain object from a mahjong_robot_money_status message. Also converts values to other types if specified.
     * @param message mahjong_robot_money_status
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_robot_money_status, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_robot_money_status to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_AssistInfoData. */
export interface Imahjong_AssistInfoData {

    /** mahjong_AssistInfoData index */
    index: number;

    /** mahjong_AssistInfoData num */
    num: number;

    /** mahjong_AssistInfoData gameId */
    gameId: number;
}

/** Represents a mahjong_AssistInfoData. */
export class mahjong_AssistInfoData implements Imahjong_AssistInfoData {

    /**
     * Constructs a new mahjong_AssistInfoData.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_AssistInfoData);

    /** mahjong_AssistInfoData index. */
    public index: number;

    /** mahjong_AssistInfoData num. */
    public num: number;

    /** mahjong_AssistInfoData gameId. */
    public gameId: number;

    /**
     * Creates a new mahjong_AssistInfoData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_AssistInfoData instance
     */
    public static create(properties?: Imahjong_AssistInfoData): mahjong_AssistInfoData;

    /**
     * Encodes the specified mahjong_AssistInfoData message. Does not implicitly {@link mahjong_AssistInfoData.verify|verify} messages.
     * @param message mahjong_AssistInfoData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_AssistInfoData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_AssistInfoData message, length delimited. Does not implicitly {@link mahjong_AssistInfoData.verify|verify} messages.
     * @param message mahjong_AssistInfoData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_AssistInfoData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_AssistInfoData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_AssistInfoData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_AssistInfoData;

    /**
     * Decodes a mahjong_AssistInfoData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_AssistInfoData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_AssistInfoData;

    /**
     * Verifies a mahjong_AssistInfoData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_AssistInfoData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_AssistInfoData
     */
    public static fromObject(object: { [k: string]: any }): mahjong_AssistInfoData;

    /**
     * Creates a plain object from a mahjong_AssistInfoData message. Also converts values to other types if specified.
     * @param message mahjong_AssistInfoData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_AssistInfoData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_AssistInfoData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_FriendMsg. */
export interface Imahjong_FriendMsg {

    /** mahjong_FriendMsg rcvPlyGuid */
    rcvPlyGuid: (number|Long);

    /** mahjong_FriendMsg sndPlyGuid */
    sndPlyGuid: (number|Long);

    /** mahjong_FriendMsg sndNickname */
    sndNickname: string;

    /** mahjong_FriendMsg message */
    message: string;

    /** mahjong_FriendMsg type */
    type: number;

    /** mahjong_FriendMsg time */
    time: number;
}

/** Represents a mahjong_FriendMsg. */
export class mahjong_FriendMsg implements Imahjong_FriendMsg {

    /**
     * Constructs a new mahjong_FriendMsg.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_FriendMsg);

    /** mahjong_FriendMsg rcvPlyGuid. */
    public rcvPlyGuid: (number|Long);

    /** mahjong_FriendMsg sndPlyGuid. */
    public sndPlyGuid: (number|Long);

    /** mahjong_FriendMsg sndNickname. */
    public sndNickname: string;

    /** mahjong_FriendMsg message. */
    public message: string;

    /** mahjong_FriendMsg type. */
    public type: number;

    /** mahjong_FriendMsg time. */
    public time: number;

    /**
     * Creates a new mahjong_FriendMsg instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_FriendMsg instance
     */
    public static create(properties?: Imahjong_FriendMsg): mahjong_FriendMsg;

    /**
     * Encodes the specified mahjong_FriendMsg message. Does not implicitly {@link mahjong_FriendMsg.verify|verify} messages.
     * @param message mahjong_FriendMsg message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_FriendMsg, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_FriendMsg message, length delimited. Does not implicitly {@link mahjong_FriendMsg.verify|verify} messages.
     * @param message mahjong_FriendMsg message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_FriendMsg, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_FriendMsg message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_FriendMsg
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_FriendMsg;

    /**
     * Decodes a mahjong_FriendMsg message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_FriendMsg
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_FriendMsg;

    /**
     * Verifies a mahjong_FriendMsg message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_FriendMsg message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_FriendMsg
     */
    public static fromObject(object: { [k: string]: any }): mahjong_FriendMsg;

    /**
     * Creates a plain object from a mahjong_FriendMsg message. Also converts values to other types if specified.
     * @param message mahjong_FriendMsg
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_FriendMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_FriendMsg to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_send_vip_data_change_not. */
export interface Imahjong_lc_send_vip_data_change_not {

    /** mahjong_lc_send_vip_data_change_not vipLevel */
    vipLevel: number;

    /** mahjong_lc_send_vip_data_change_not vipRate */
    vipRate: number;

    /** mahjong_lc_send_vip_data_change_not nextVipneedMoney */
    nextVipneedMoney: number;

    /** mahjong_lc_send_vip_data_change_not param */
    param: string;
}

/** Represents a mahjong_lc_send_vip_data_change_not. */
export class mahjong_lc_send_vip_data_change_not implements Imahjong_lc_send_vip_data_change_not {

    /**
     * Constructs a new mahjong_lc_send_vip_data_change_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_send_vip_data_change_not);

    /** mahjong_lc_send_vip_data_change_not vipLevel. */
    public vipLevel: number;

    /** mahjong_lc_send_vip_data_change_not vipRate. */
    public vipRate: number;

    /** mahjong_lc_send_vip_data_change_not nextVipneedMoney. */
    public nextVipneedMoney: number;

    /** mahjong_lc_send_vip_data_change_not param. */
    public param: string;

    /**
     * Creates a new mahjong_lc_send_vip_data_change_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_send_vip_data_change_not instance
     */
    public static create(properties?: Imahjong_lc_send_vip_data_change_not): mahjong_lc_send_vip_data_change_not;

    /**
     * Encodes the specified mahjong_lc_send_vip_data_change_not message. Does not implicitly {@link mahjong_lc_send_vip_data_change_not.verify|verify} messages.
     * @param message mahjong_lc_send_vip_data_change_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_send_vip_data_change_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_send_vip_data_change_not message, length delimited. Does not implicitly {@link mahjong_lc_send_vip_data_change_not.verify|verify} messages.
     * @param message mahjong_lc_send_vip_data_change_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_send_vip_data_change_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_send_vip_data_change_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_send_vip_data_change_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_send_vip_data_change_not;

    /**
     * Decodes a mahjong_lc_send_vip_data_change_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_send_vip_data_change_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_send_vip_data_change_not;

    /**
     * Verifies a mahjong_lc_send_vip_data_change_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_send_vip_data_change_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_send_vip_data_change_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_send_vip_data_change_not;

    /**
     * Creates a plain object from a mahjong_lc_send_vip_data_change_not message. Also converts values to other types if specified.
     * @param message mahjong_lc_send_vip_data_change_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_send_vip_data_change_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_send_vip_data_change_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_update_achieve_req. */
export interface Imahjong_cl_update_achieve_req {

    /** mahjong_cl_update_achieve_req index */
    index: number;
}

/** Represents a mahjong_cl_update_achieve_req. */
export class mahjong_cl_update_achieve_req implements Imahjong_cl_update_achieve_req {

    /**
     * Constructs a new mahjong_cl_update_achieve_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_update_achieve_req);

    /** mahjong_cl_update_achieve_req index. */
    public index: number;

    /**
     * Creates a new mahjong_cl_update_achieve_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_update_achieve_req instance
     */
    public static create(properties?: Imahjong_cl_update_achieve_req): mahjong_cl_update_achieve_req;

    /**
     * Encodes the specified mahjong_cl_update_achieve_req message. Does not implicitly {@link mahjong_cl_update_achieve_req.verify|verify} messages.
     * @param message mahjong_cl_update_achieve_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_update_achieve_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_update_achieve_req message, length delimited. Does not implicitly {@link mahjong_cl_update_achieve_req.verify|verify} messages.
     * @param message mahjong_cl_update_achieve_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_update_achieve_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_update_achieve_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_update_achieve_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_update_achieve_req;

    /**
     * Decodes a mahjong_cl_update_achieve_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_update_achieve_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_update_achieve_req;

    /**
     * Verifies a mahjong_cl_update_achieve_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_update_achieve_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_update_achieve_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_update_achieve_req;

    /**
     * Creates a plain object from a mahjong_cl_update_achieve_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_update_achieve_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_update_achieve_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_update_achieve_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_VipData. */
export interface Imahjong_VipData {

    /** mahjong_VipData level */
    level: number;

    /** mahjong_VipData nexLevelTotalDays */
    nexLevelTotalDays: number;

    /** mahjong_VipData autoUpgradeDay */
    autoUpgradeDay: number;

    /** mahjong_VipData loginAward */
    loginAward: number;

    /** mahjong_VipData friendCount */
    friendCount: number;

    /** mahjong_VipData nextLevelDueDays */
    nextLevelDueDays: number;

    /** mahjong_VipData remainDueDays */
    remainDueDays: number;

    /** mahjong_VipData status */
    status: number;
}

/** Represents a mahjong_VipData. */
export class mahjong_VipData implements Imahjong_VipData {

    /**
     * Constructs a new mahjong_VipData.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_VipData);

    /** mahjong_VipData level. */
    public level: number;

    /** mahjong_VipData nexLevelTotalDays. */
    public nexLevelTotalDays: number;

    /** mahjong_VipData autoUpgradeDay. */
    public autoUpgradeDay: number;

    /** mahjong_VipData loginAward. */
    public loginAward: number;

    /** mahjong_VipData friendCount. */
    public friendCount: number;

    /** mahjong_VipData nextLevelDueDays. */
    public nextLevelDueDays: number;

    /** mahjong_VipData remainDueDays. */
    public remainDueDays: number;

    /** mahjong_VipData status. */
    public status: number;

    /**
     * Creates a new mahjong_VipData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_VipData instance
     */
    public static create(properties?: Imahjong_VipData): mahjong_VipData;

    /**
     * Encodes the specified mahjong_VipData message. Does not implicitly {@link mahjong_VipData.verify|verify} messages.
     * @param message mahjong_VipData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_VipData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_VipData message, length delimited. Does not implicitly {@link mahjong_VipData.verify|verify} messages.
     * @param message mahjong_VipData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_VipData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_VipData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_VipData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_VipData;

    /**
     * Decodes a mahjong_VipData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_VipData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_VipData;

    /**
     * Verifies a mahjong_VipData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_VipData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_VipData
     */
    public static fromObject(object: { [k: string]: any }): mahjong_VipData;

    /**
     * Creates a plain object from a mahjong_VipData message. Also converts values to other types if specified.
     * @param message mahjong_VipData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_VipData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_VipData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_TableInfo. */
export interface Imahjong_TableInfo {

    /** mahjong_TableInfo inviteCode */
    inviteCode: number;

    /** mahjong_TableInfo gameId */
    gameId: number;

    /** mahjong_TableInfo serverId */
    serverId: number;

    /** mahjong_TableInfo tableId */
    tableId: number;

    /** mahjong_TableInfo clubId */
    clubId: number;

    /** mahjong_TableInfo baseScore */
    baseScore: number;

    /** mahjong_TableInfo createTime */
    createTime: number;

    /** mahjong_TableInfo flag */
    flag: number;

    /** mahjong_TableInfo tableTime */
    tableTime: number;

    /** mahjong_TableInfo ownerGuid */
    ownerGuid: (number|Long);

    /** mahjong_TableInfo maxPlayerNum */
    maxPlayerNum: number;

    /** mahjong_TableInfo name */
    name: string;

    /** mahjong_TableInfo gameJson */
    gameJson: string;

    /** mahjong_TableInfo plyGuids */
    plyGuids?: ((number|Long)[]|null);

    /** mahjong_TableInfo curTableTime */
    curTableTime: number;

    /** mahjong_TableInfo status */
    status: number;

    /** mahjong_TableInfo startGameTime */
    startGameTime: number;

    /** mahjong_TableInfo ruleId */
    ruleId: number;

    /** mahjong_TableInfo tableNo */
    tableNo: number;
}

/** Represents a mahjong_TableInfo. */
export class mahjong_TableInfo implements Imahjong_TableInfo {

    /**
     * Constructs a new mahjong_TableInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_TableInfo);

    /** mahjong_TableInfo inviteCode. */
    public inviteCode: number;

    /** mahjong_TableInfo gameId. */
    public gameId: number;

    /** mahjong_TableInfo serverId. */
    public serverId: number;

    /** mahjong_TableInfo tableId. */
    public tableId: number;

    /** mahjong_TableInfo clubId. */
    public clubId: number;

    /** mahjong_TableInfo baseScore. */
    public baseScore: number;

    /** mahjong_TableInfo createTime. */
    public createTime: number;

    /** mahjong_TableInfo flag. */
    public flag: number;

    /** mahjong_TableInfo tableTime. */
    public tableTime: number;

    /** mahjong_TableInfo ownerGuid. */
    public ownerGuid: (number|Long);

    /** mahjong_TableInfo maxPlayerNum. */
    public maxPlayerNum: number;

    /** mahjong_TableInfo name. */
    public name: string;

    /** mahjong_TableInfo gameJson. */
    public gameJson: string;

    /** mahjong_TableInfo plyGuids. */
    public plyGuids: (number|Long)[];

    /** mahjong_TableInfo curTableTime. */
    public curTableTime: number;

    /** mahjong_TableInfo status. */
    public status: number;

    /** mahjong_TableInfo startGameTime. */
    public startGameTime: number;

    /** mahjong_TableInfo ruleId. */
    public ruleId: number;

    /** mahjong_TableInfo tableNo. */
    public tableNo: number;

    /**
     * Creates a new mahjong_TableInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_TableInfo instance
     */
    public static create(properties?: Imahjong_TableInfo): mahjong_TableInfo;

    /**
     * Encodes the specified mahjong_TableInfo message. Does not implicitly {@link mahjong_TableInfo.verify|verify} messages.
     * @param message mahjong_TableInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_TableInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_TableInfo message, length delimited. Does not implicitly {@link mahjong_TableInfo.verify|verify} messages.
     * @param message mahjong_TableInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_TableInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_TableInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_TableInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_TableInfo;

    /**
     * Decodes a mahjong_TableInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_TableInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_TableInfo;

    /**
     * Verifies a mahjong_TableInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_TableInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_TableInfo
     */
    public static fromObject(object: { [k: string]: any }): mahjong_TableInfo;

    /**
     * Creates a plain object from a mahjong_TableInfo message. Also converts values to other types if specified.
     * @param message mahjong_TableInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_TableInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_TableInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_gm_get_srv_status_ack. */
export interface Imahjong_gm_get_srv_status_ack {
}

/** Represents a mahjong_gm_get_srv_status_ack. */
export class mahjong_gm_get_srv_status_ack implements Imahjong_gm_get_srv_status_ack {

    /**
     * Constructs a new mahjong_gm_get_srv_status_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_gm_get_srv_status_ack);

    /**
     * Creates a new mahjong_gm_get_srv_status_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_gm_get_srv_status_ack instance
     */
    public static create(properties?: Imahjong_gm_get_srv_status_ack): mahjong_gm_get_srv_status_ack;

    /**
     * Encodes the specified mahjong_gm_get_srv_status_ack message. Does not implicitly {@link mahjong_gm_get_srv_status_ack.verify|verify} messages.
     * @param message mahjong_gm_get_srv_status_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_gm_get_srv_status_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_gm_get_srv_status_ack message, length delimited. Does not implicitly {@link mahjong_gm_get_srv_status_ack.verify|verify} messages.
     * @param message mahjong_gm_get_srv_status_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_gm_get_srv_status_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_gm_get_srv_status_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_gm_get_srv_status_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_gm_get_srv_status_ack;

    /**
     * Decodes a mahjong_gm_get_srv_status_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_gm_get_srv_status_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_gm_get_srv_status_ack;

    /**
     * Verifies a mahjong_gm_get_srv_status_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_gm_get_srv_status_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_gm_get_srv_status_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_gm_get_srv_status_ack;

    /**
     * Creates a plain object from a mahjong_gm_get_srv_status_ack message. Also converts values to other types if specified.
     * @param message mahjong_gm_get_srv_status_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_gm_get_srv_status_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_gm_get_srv_status_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_get_player_feel_value_req. */
export interface Imahjong_cb_get_player_feel_value_req {

    /** mahjong_cb_get_player_feel_value_req plyGuid */
    plyGuid: (number|Long);
}

/** Represents a mahjong_cb_get_player_feel_value_req. */
export class mahjong_cb_get_player_feel_value_req implements Imahjong_cb_get_player_feel_value_req {

    /**
     * Constructs a new mahjong_cb_get_player_feel_value_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_get_player_feel_value_req);

    /** mahjong_cb_get_player_feel_value_req plyGuid. */
    public plyGuid: (number|Long);

    /**
     * Creates a new mahjong_cb_get_player_feel_value_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_get_player_feel_value_req instance
     */
    public static create(properties?: Imahjong_cb_get_player_feel_value_req): mahjong_cb_get_player_feel_value_req;

    /**
     * Encodes the specified mahjong_cb_get_player_feel_value_req message. Does not implicitly {@link mahjong_cb_get_player_feel_value_req.verify|verify} messages.
     * @param message mahjong_cb_get_player_feel_value_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_get_player_feel_value_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_get_player_feel_value_req message, length delimited. Does not implicitly {@link mahjong_cb_get_player_feel_value_req.verify|verify} messages.
     * @param message mahjong_cb_get_player_feel_value_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_get_player_feel_value_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_get_player_feel_value_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_get_player_feel_value_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_get_player_feel_value_req;

    /**
     * Decodes a mahjong_cb_get_player_feel_value_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_get_player_feel_value_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_get_player_feel_value_req;

    /**
     * Verifies a mahjong_cb_get_player_feel_value_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_get_player_feel_value_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_get_player_feel_value_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_get_player_feel_value_req;

    /**
     * Creates a plain object from a mahjong_cb_get_player_feel_value_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_get_player_feel_value_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_get_player_feel_value_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_get_player_feel_value_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_update_big_card_user_info_req. */
export interface Imahjong_cb_update_big_card_user_info_req {

    /** mahjong_cb_update_big_card_user_info_req playerId */
    playerId: string;

    /** mahjong_cb_update_big_card_user_info_req sessionId */
    sessionId: string;
}

/** Represents a mahjong_cb_update_big_card_user_info_req. */
export class mahjong_cb_update_big_card_user_info_req implements Imahjong_cb_update_big_card_user_info_req {

    /**
     * Constructs a new mahjong_cb_update_big_card_user_info_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_update_big_card_user_info_req);

    /** mahjong_cb_update_big_card_user_info_req playerId. */
    public playerId: string;

    /** mahjong_cb_update_big_card_user_info_req sessionId. */
    public sessionId: string;

    /**
     * Creates a new mahjong_cb_update_big_card_user_info_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_update_big_card_user_info_req instance
     */
    public static create(properties?: Imahjong_cb_update_big_card_user_info_req): mahjong_cb_update_big_card_user_info_req;

    /**
     * Encodes the specified mahjong_cb_update_big_card_user_info_req message. Does not implicitly {@link mahjong_cb_update_big_card_user_info_req.verify|verify} messages.
     * @param message mahjong_cb_update_big_card_user_info_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_update_big_card_user_info_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_update_big_card_user_info_req message, length delimited. Does not implicitly {@link mahjong_cb_update_big_card_user_info_req.verify|verify} messages.
     * @param message mahjong_cb_update_big_card_user_info_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_update_big_card_user_info_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_update_big_card_user_info_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_update_big_card_user_info_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_update_big_card_user_info_req;

    /**
     * Decodes a mahjong_cb_update_big_card_user_info_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_update_big_card_user_info_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_update_big_card_user_info_req;

    /**
     * Verifies a mahjong_cb_update_big_card_user_info_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_update_big_card_user_info_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_update_big_card_user_info_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_update_big_card_user_info_req;

    /**
     * Creates a plain object from a mahjong_cb_update_big_card_user_info_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_update_big_card_user_info_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_update_big_card_user_info_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_update_big_card_user_info_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_relief_times_req. */
export interface Imahjong_cl_get_relief_times_req {
}

/** Represents a mahjong_cl_get_relief_times_req. */
export class mahjong_cl_get_relief_times_req implements Imahjong_cl_get_relief_times_req {

    /**
     * Constructs a new mahjong_cl_get_relief_times_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_relief_times_req);

    /**
     * Creates a new mahjong_cl_get_relief_times_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_relief_times_req instance
     */
    public static create(properties?: Imahjong_cl_get_relief_times_req): mahjong_cl_get_relief_times_req;

    /**
     * Encodes the specified mahjong_cl_get_relief_times_req message. Does not implicitly {@link mahjong_cl_get_relief_times_req.verify|verify} messages.
     * @param message mahjong_cl_get_relief_times_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_relief_times_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_relief_times_req message, length delimited. Does not implicitly {@link mahjong_cl_get_relief_times_req.verify|verify} messages.
     * @param message mahjong_cl_get_relief_times_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_relief_times_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_relief_times_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_relief_times_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_relief_times_req;

    /**
     * Decodes a mahjong_cl_get_relief_times_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_relief_times_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_relief_times_req;

    /**
     * Verifies a mahjong_cl_get_relief_times_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_relief_times_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_relief_times_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_relief_times_req;

    /**
     * Creates a plain object from a mahjong_cl_get_relief_times_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_relief_times_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_relief_times_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_relief_times_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_user_join_table_req. */
export interface Imahjong_cb_user_join_table_req {

    /** mahjong_cb_user_join_table_req tableId */
    tableId: number;

    /** mahjong_cb_user_join_table_req chairId */
    chairId: number;
}

/** Represents a mahjong_cb_user_join_table_req. */
export class mahjong_cb_user_join_table_req implements Imahjong_cb_user_join_table_req {

    /**
     * Constructs a new mahjong_cb_user_join_table_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_user_join_table_req);

    /** mahjong_cb_user_join_table_req tableId. */
    public tableId: number;

    /** mahjong_cb_user_join_table_req chairId. */
    public chairId: number;

    /**
     * Creates a new mahjong_cb_user_join_table_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_user_join_table_req instance
     */
    public static create(properties?: Imahjong_cb_user_join_table_req): mahjong_cb_user_join_table_req;

    /**
     * Encodes the specified mahjong_cb_user_join_table_req message. Does not implicitly {@link mahjong_cb_user_join_table_req.verify|verify} messages.
     * @param message mahjong_cb_user_join_table_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_user_join_table_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_user_join_table_req message, length delimited. Does not implicitly {@link mahjong_cb_user_join_table_req.verify|verify} messages.
     * @param message mahjong_cb_user_join_table_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_user_join_table_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_user_join_table_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_user_join_table_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_user_join_table_req;

    /**
     * Decodes a mahjong_cb_user_join_table_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_user_join_table_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_user_join_table_req;

    /**
     * Verifies a mahjong_cb_user_join_table_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_user_join_table_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_user_join_table_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_user_join_table_req;

    /**
     * Creates a plain object from a mahjong_cb_user_join_table_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_user_join_table_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_user_join_table_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_user_join_table_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_gm_get_srv_status_req. */
export interface Imahjong_gm_get_srv_status_req {

    /** mahjong_gm_get_srv_status_req type */
    type: number;
}

/** Represents a mahjong_gm_get_srv_status_req. */
export class mahjong_gm_get_srv_status_req implements Imahjong_gm_get_srv_status_req {

    /**
     * Constructs a new mahjong_gm_get_srv_status_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_gm_get_srv_status_req);

    /** mahjong_gm_get_srv_status_req type. */
    public type: number;

    /**
     * Creates a new mahjong_gm_get_srv_status_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_gm_get_srv_status_req instance
     */
    public static create(properties?: Imahjong_gm_get_srv_status_req): mahjong_gm_get_srv_status_req;

    /**
     * Encodes the specified mahjong_gm_get_srv_status_req message. Does not implicitly {@link mahjong_gm_get_srv_status_req.verify|verify} messages.
     * @param message mahjong_gm_get_srv_status_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_gm_get_srv_status_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_gm_get_srv_status_req message, length delimited. Does not implicitly {@link mahjong_gm_get_srv_status_req.verify|verify} messages.
     * @param message mahjong_gm_get_srv_status_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_gm_get_srv_status_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_gm_get_srv_status_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_gm_get_srv_status_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_gm_get_srv_status_req;

    /**
     * Decodes a mahjong_gm_get_srv_status_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_gm_get_srv_status_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_gm_get_srv_status_req;

    /**
     * Verifies a mahjong_gm_get_srv_status_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_gm_get_srv_status_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_gm_get_srv_status_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_gm_get_srv_status_req;

    /**
     * Creates a plain object from a mahjong_gm_get_srv_status_req message. Also converts values to other types if specified.
     * @param message mahjong_gm_get_srv_status_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_gm_get_srv_status_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_gm_get_srv_status_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_message_not. */
export interface Imahjong_bc_message_not {

    /** mahjong_bc_message_not type */
    type: number;

    /** mahjong_bc_message_not message */
    message: string;
}

/** Represents a mahjong_bc_message_not. */
export class mahjong_bc_message_not implements Imahjong_bc_message_not {

    /**
     * Constructs a new mahjong_bc_message_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_message_not);

    /** mahjong_bc_message_not type. */
    public type: number;

    /** mahjong_bc_message_not message. */
    public message: string;

    /**
     * Creates a new mahjong_bc_message_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_message_not instance
     */
    public static create(properties?: Imahjong_bc_message_not): mahjong_bc_message_not;

    /**
     * Encodes the specified mahjong_bc_message_not message. Does not implicitly {@link mahjong_bc_message_not.verify|verify} messages.
     * @param message mahjong_bc_message_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_message_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_message_not message, length delimited. Does not implicitly {@link mahjong_bc_message_not.verify|verify} messages.
     * @param message mahjong_bc_message_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_message_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_message_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_message_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_message_not;

    /**
     * Decodes a mahjong_bc_message_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_message_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_message_not;

    /**
     * Verifies a mahjong_bc_message_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_message_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_message_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_message_not;

    /**
     * Creates a plain object from a mahjong_bc_message_not message. Also converts values to other types if specified.
     * @param message mahjong_bc_message_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_message_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_message_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_spec_trumpet_req. */
export interface Imahjong_cl_spec_trumpet_req {

    /** mahjong_cl_spec_trumpet_req gameId */
    gameId: number;

    /** mahjong_cl_spec_trumpet_req message */
    message: string;

    /** mahjong_cl_spec_trumpet_req image */
    image: string;
}

/** Represents a mahjong_cl_spec_trumpet_req. */
export class mahjong_cl_spec_trumpet_req implements Imahjong_cl_spec_trumpet_req {

    /**
     * Constructs a new mahjong_cl_spec_trumpet_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_spec_trumpet_req);

    /** mahjong_cl_spec_trumpet_req gameId. */
    public gameId: number;

    /** mahjong_cl_spec_trumpet_req message. */
    public message: string;

    /** mahjong_cl_spec_trumpet_req image. */
    public image: string;

    /**
     * Creates a new mahjong_cl_spec_trumpet_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_spec_trumpet_req instance
     */
    public static create(properties?: Imahjong_cl_spec_trumpet_req): mahjong_cl_spec_trumpet_req;

    /**
     * Encodes the specified mahjong_cl_spec_trumpet_req message. Does not implicitly {@link mahjong_cl_spec_trumpet_req.verify|verify} messages.
     * @param message mahjong_cl_spec_trumpet_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_spec_trumpet_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_spec_trumpet_req message, length delimited. Does not implicitly {@link mahjong_cl_spec_trumpet_req.verify|verify} messages.
     * @param message mahjong_cl_spec_trumpet_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_spec_trumpet_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_spec_trumpet_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_spec_trumpet_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_spec_trumpet_req;

    /**
     * Decodes a mahjong_cl_spec_trumpet_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_spec_trumpet_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_spec_trumpet_req;

    /**
     * Verifies a mahjong_cl_spec_trumpet_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_spec_trumpet_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_spec_trumpet_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_spec_trumpet_req;

    /**
     * Creates a plain object from a mahjong_cl_spec_trumpet_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_spec_trumpet_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_spec_trumpet_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_spec_trumpet_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_user_good_card_ack. */
export interface Imahjong_lc_get_user_good_card_ack {

    /** mahjong_lc_get_user_good_card_ack ret */
    ret: number;

    /** mahjong_lc_get_user_good_card_ack num */
    num: number;
}

/** Represents a mahjong_lc_get_user_good_card_ack. */
export class mahjong_lc_get_user_good_card_ack implements Imahjong_lc_get_user_good_card_ack {

    /**
     * Constructs a new mahjong_lc_get_user_good_card_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_user_good_card_ack);

    /** mahjong_lc_get_user_good_card_ack ret. */
    public ret: number;

    /** mahjong_lc_get_user_good_card_ack num. */
    public num: number;

    /**
     * Creates a new mahjong_lc_get_user_good_card_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_user_good_card_ack instance
     */
    public static create(properties?: Imahjong_lc_get_user_good_card_ack): mahjong_lc_get_user_good_card_ack;

    /**
     * Encodes the specified mahjong_lc_get_user_good_card_ack message. Does not implicitly {@link mahjong_lc_get_user_good_card_ack.verify|verify} messages.
     * @param message mahjong_lc_get_user_good_card_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_user_good_card_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_user_good_card_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_user_good_card_ack.verify|verify} messages.
     * @param message mahjong_lc_get_user_good_card_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_user_good_card_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_user_good_card_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_user_good_card_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_user_good_card_ack;

    /**
     * Decodes a mahjong_lc_get_user_good_card_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_user_good_card_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_user_good_card_ack;

    /**
     * Verifies a mahjong_lc_get_user_good_card_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_user_good_card_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_user_good_card_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_user_good_card_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_user_good_card_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_user_good_card_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_user_good_card_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_user_good_card_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_relief_ack. */
export interface Imahjong_lc_get_relief_ack {

    /** mahjong_lc_get_relief_ack ret */
    ret: number;
}

/** Represents a mahjong_lc_get_relief_ack. */
export class mahjong_lc_get_relief_ack implements Imahjong_lc_get_relief_ack {

    /**
     * Constructs a new mahjong_lc_get_relief_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_relief_ack);

    /** mahjong_lc_get_relief_ack ret. */
    public ret: number;

    /**
     * Creates a new mahjong_lc_get_relief_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_relief_ack instance
     */
    public static create(properties?: Imahjong_lc_get_relief_ack): mahjong_lc_get_relief_ack;

    /**
     * Encodes the specified mahjong_lc_get_relief_ack message. Does not implicitly {@link mahjong_lc_get_relief_ack.verify|verify} messages.
     * @param message mahjong_lc_get_relief_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_relief_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_relief_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_relief_ack.verify|verify} messages.
     * @param message mahjong_lc_get_relief_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_relief_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_relief_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_relief_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_relief_ack;

    /**
     * Decodes a mahjong_lc_get_relief_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_relief_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_relief_ack;

    /**
     * Verifies a mahjong_lc_get_relief_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_relief_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_relief_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_relief_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_relief_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_relief_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_relief_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_relief_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_verity_ticket_ack. */
export interface Imahjong_lc_verity_ticket_ack {

    /** mahjong_lc_verity_ticket_ack ret */
    ret: number;

    /** mahjong_lc_verity_ticket_ack plyLobbyData */
    plyLobbyData: Imahjong_PlyLobbyData;

    /** mahjong_lc_verity_ticket_ack plyStatus */
    plyStatus: Imahjong_PlayerStatus;

    /** mahjong_lc_verity_ticket_ack plyLoginAward */
    plyLoginAward: Imahjong_LoginAward;

    /** mahjong_lc_verity_ticket_ack plyItems */
    plyItems?: (Imahjong_ItemData[]|null);

    /** mahjong_lc_verity_ticket_ack plyLoginAward2 */
    plyLoginAward2: Imahjong_LoginAward2;

    /** mahjong_lc_verity_ticket_ack plyVip */
    plyVip: Imahjong_VipData;

    /** mahjong_lc_verity_ticket_ack timeStamp */
    timeStamp: number;
}

/** Represents a mahjong_lc_verity_ticket_ack. */
export class mahjong_lc_verity_ticket_ack implements Imahjong_lc_verity_ticket_ack {

    /**
     * Constructs a new mahjong_lc_verity_ticket_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_verity_ticket_ack);

    /** mahjong_lc_verity_ticket_ack ret. */
    public ret: number;

    /** mahjong_lc_verity_ticket_ack plyLobbyData. */
    public plyLobbyData: Imahjong_PlyLobbyData;

    /** mahjong_lc_verity_ticket_ack plyStatus. */
    public plyStatus: Imahjong_PlayerStatus;

    /** mahjong_lc_verity_ticket_ack plyLoginAward. */
    public plyLoginAward: Imahjong_LoginAward;

    /** mahjong_lc_verity_ticket_ack plyItems. */
    public plyItems: Imahjong_ItemData[];

    /** mahjong_lc_verity_ticket_ack plyLoginAward2. */
    public plyLoginAward2: Imahjong_LoginAward2;

    /** mahjong_lc_verity_ticket_ack plyVip. */
    public plyVip: Imahjong_VipData;

    /** mahjong_lc_verity_ticket_ack timeStamp. */
    public timeStamp: number;

    /**
     * Creates a new mahjong_lc_verity_ticket_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_verity_ticket_ack instance
     */
    public static create(properties?: Imahjong_lc_verity_ticket_ack): mahjong_lc_verity_ticket_ack;

    /**
     * Encodes the specified mahjong_lc_verity_ticket_ack message. Does not implicitly {@link mahjong_lc_verity_ticket_ack.verify|verify} messages.
     * @param message mahjong_lc_verity_ticket_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_verity_ticket_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_verity_ticket_ack message, length delimited. Does not implicitly {@link mahjong_lc_verity_ticket_ack.verify|verify} messages.
     * @param message mahjong_lc_verity_ticket_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_verity_ticket_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_verity_ticket_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_verity_ticket_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_verity_ticket_ack;

    /**
     * Decodes a mahjong_lc_verity_ticket_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_verity_ticket_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_verity_ticket_ack;

    /**
     * Verifies a mahjong_lc_verity_ticket_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_verity_ticket_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_verity_ticket_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_verity_ticket_ack;

    /**
     * Creates a plain object from a mahjong_lc_verity_ticket_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_verity_ticket_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_verity_ticket_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_verity_ticket_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_extra_relief_award_ack. */
export interface Imahjong_lc_get_extra_relief_award_ack {

    /** mahjong_lc_get_extra_relief_award_ack id */
    id: number;

    /** mahjong_lc_get_extra_relief_award_ack ret */
    ret: number;

    /** mahjong_lc_get_extra_relief_award_ack itemId */
    itemId: number;

    /** mahjong_lc_get_extra_relief_award_ack itemNum */
    itemNum: number;
}

/** Represents a mahjong_lc_get_extra_relief_award_ack. */
export class mahjong_lc_get_extra_relief_award_ack implements Imahjong_lc_get_extra_relief_award_ack {

    /**
     * Constructs a new mahjong_lc_get_extra_relief_award_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_extra_relief_award_ack);

    /** mahjong_lc_get_extra_relief_award_ack id. */
    public id: number;

    /** mahjong_lc_get_extra_relief_award_ack ret. */
    public ret: number;

    /** mahjong_lc_get_extra_relief_award_ack itemId. */
    public itemId: number;

    /** mahjong_lc_get_extra_relief_award_ack itemNum. */
    public itemNum: number;

    /**
     * Creates a new mahjong_lc_get_extra_relief_award_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_extra_relief_award_ack instance
     */
    public static create(properties?: Imahjong_lc_get_extra_relief_award_ack): mahjong_lc_get_extra_relief_award_ack;

    /**
     * Encodes the specified mahjong_lc_get_extra_relief_award_ack message. Does not implicitly {@link mahjong_lc_get_extra_relief_award_ack.verify|verify} messages.
     * @param message mahjong_lc_get_extra_relief_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_extra_relief_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_extra_relief_award_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_extra_relief_award_ack.verify|verify} messages.
     * @param message mahjong_lc_get_extra_relief_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_extra_relief_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_extra_relief_award_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_extra_relief_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_extra_relief_award_ack;

    /**
     * Decodes a mahjong_lc_get_extra_relief_award_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_extra_relief_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_extra_relief_award_ack;

    /**
     * Verifies a mahjong_lc_get_extra_relief_award_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_extra_relief_award_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_extra_relief_award_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_extra_relief_award_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_extra_relief_award_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_extra_relief_award_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_extra_relief_award_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_extra_relief_award_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_TableAttr20121227. */
export interface Imahjong_TableAttr20121227 {

    /** mahjong_TableAttr20121227 tableId */
    tableId: number;

    /** mahjong_TableAttr20121227 name */
    name: string;

    /** mahjong_TableAttr20121227 lock */
    lock: number;

    /** mahjong_TableAttr20121227 players */
    players?: (Imahjong_PlyBaseData20121227[]|null);
}

/** Represents a mahjong_TableAttr20121227. */
export class mahjong_TableAttr20121227 implements Imahjong_TableAttr20121227 {

    /**
     * Constructs a new mahjong_TableAttr20121227.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_TableAttr20121227);

    /** mahjong_TableAttr20121227 tableId. */
    public tableId: number;

    /** mahjong_TableAttr20121227 name. */
    public name: string;

    /** mahjong_TableAttr20121227 lock. */
    public lock: number;

    /** mahjong_TableAttr20121227 players. */
    public players: Imahjong_PlyBaseData20121227[];

    /**
     * Creates a new mahjong_TableAttr20121227 instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_TableAttr20121227 instance
     */
    public static create(properties?: Imahjong_TableAttr20121227): mahjong_TableAttr20121227;

    /**
     * Encodes the specified mahjong_TableAttr20121227 message. Does not implicitly {@link mahjong_TableAttr20121227.verify|verify} messages.
     * @param message mahjong_TableAttr20121227 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_TableAttr20121227, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_TableAttr20121227 message, length delimited. Does not implicitly {@link mahjong_TableAttr20121227.verify|verify} messages.
     * @param message mahjong_TableAttr20121227 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_TableAttr20121227, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_TableAttr20121227 message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_TableAttr20121227
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_TableAttr20121227;

    /**
     * Decodes a mahjong_TableAttr20121227 message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_TableAttr20121227
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_TableAttr20121227;

    /**
     * Verifies a mahjong_TableAttr20121227 message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_TableAttr20121227 message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_TableAttr20121227
     */
    public static fromObject(object: { [k: string]: any }): mahjong_TableAttr20121227;

    /**
     * Creates a plain object from a mahjong_TableAttr20121227 message. Also converts values to other types if specified.
     * @param message mahjong_TableAttr20121227
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_TableAttr20121227, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_TableAttr20121227 to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_MergedAchieveData. */
export interface Imahjong_MergedAchieveData {

    /** mahjong_MergedAchieveData gameId */
    gameId: number;

    /** mahjong_MergedAchieveData type */
    type: number;

    /** mahjong_MergedAchieveData index */
    index: number;

    /** mahjong_MergedAchieveData cond */
    cond: number;

    /** mahjong_MergedAchieveData value */
    value: number;

    /** mahjong_MergedAchieveData max */
    max: number;

    /** mahjong_MergedAchieveData status */
    status: number;

    /** mahjong_MergedAchieveData moneyAward */
    moneyAward: number;

    /** mahjong_MergedAchieveData giftAward */
    giftAward: number;

    /** mahjong_MergedAchieveData award_0 */
    award_0: number;

    /** mahjong_MergedAchieveData award_1 */
    award_1: number;

    /** mahjong_MergedAchieveData award_2 */
    award_2: number;

    /** mahjong_MergedAchieveData award_3 */
    award_3: number;

    /** mahjong_MergedAchieveData award_4 */
    award_4: number;

    /** mahjong_MergedAchieveData name */
    name: string;

    /** mahjong_MergedAchieveData desc */
    desc: string;
}

/** Represents a mahjong_MergedAchieveData. */
export class mahjong_MergedAchieveData implements Imahjong_MergedAchieveData {

    /**
     * Constructs a new mahjong_MergedAchieveData.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_MergedAchieveData);

    /** mahjong_MergedAchieveData gameId. */
    public gameId: number;

    /** mahjong_MergedAchieveData type. */
    public type: number;

    /** mahjong_MergedAchieveData index. */
    public index: number;

    /** mahjong_MergedAchieveData cond. */
    public cond: number;

    /** mahjong_MergedAchieveData value. */
    public value: number;

    /** mahjong_MergedAchieveData max. */
    public max: number;

    /** mahjong_MergedAchieveData status. */
    public status: number;

    /** mahjong_MergedAchieveData moneyAward. */
    public moneyAward: number;

    /** mahjong_MergedAchieveData giftAward. */
    public giftAward: number;

    /** mahjong_MergedAchieveData award_0. */
    public award_0: number;

    /** mahjong_MergedAchieveData award_1. */
    public award_1: number;

    /** mahjong_MergedAchieveData award_2. */
    public award_2: number;

    /** mahjong_MergedAchieveData award_3. */
    public award_3: number;

    /** mahjong_MergedAchieveData award_4. */
    public award_4: number;

    /** mahjong_MergedAchieveData name. */
    public name: string;

    /** mahjong_MergedAchieveData desc. */
    public desc: string;

    /**
     * Creates a new mahjong_MergedAchieveData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_MergedAchieveData instance
     */
    public static create(properties?: Imahjong_MergedAchieveData): mahjong_MergedAchieveData;

    /**
     * Encodes the specified mahjong_MergedAchieveData message. Does not implicitly {@link mahjong_MergedAchieveData.verify|verify} messages.
     * @param message mahjong_MergedAchieveData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_MergedAchieveData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_MergedAchieveData message, length delimited. Does not implicitly {@link mahjong_MergedAchieveData.verify|verify} messages.
     * @param message mahjong_MergedAchieveData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_MergedAchieveData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_MergedAchieveData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_MergedAchieveData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_MergedAchieveData;

    /**
     * Decodes a mahjong_MergedAchieveData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_MergedAchieveData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_MergedAchieveData;

    /**
     * Verifies a mahjong_MergedAchieveData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_MergedAchieveData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_MergedAchieveData
     */
    public static fromObject(object: { [k: string]: any }): mahjong_MergedAchieveData;

    /**
     * Creates a plain object from a mahjong_MergedAchieveData message. Also converts values to other types if specified.
     * @param message mahjong_MergedAchieveData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_MergedAchieveData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_MergedAchieveData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_merged_daily_task_data_req. */
export interface Imahjong_cl_get_merged_daily_task_data_req {

    /** mahjong_cl_get_merged_daily_task_data_req gameId */
    gameId?: (number[]|null);

    /** mahjong_cl_get_merged_daily_task_data_req scmjFlag */
    scmjFlag: number;
}

/** Represents a mahjong_cl_get_merged_daily_task_data_req. */
export class mahjong_cl_get_merged_daily_task_data_req implements Imahjong_cl_get_merged_daily_task_data_req {

    /**
     * Constructs a new mahjong_cl_get_merged_daily_task_data_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_merged_daily_task_data_req);

    /** mahjong_cl_get_merged_daily_task_data_req gameId. */
    public gameId: number[];

    /** mahjong_cl_get_merged_daily_task_data_req scmjFlag. */
    public scmjFlag: number;

    /**
     * Creates a new mahjong_cl_get_merged_daily_task_data_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_merged_daily_task_data_req instance
     */
    public static create(properties?: Imahjong_cl_get_merged_daily_task_data_req): mahjong_cl_get_merged_daily_task_data_req;

    /**
     * Encodes the specified mahjong_cl_get_merged_daily_task_data_req message. Does not implicitly {@link mahjong_cl_get_merged_daily_task_data_req.verify|verify} messages.
     * @param message mahjong_cl_get_merged_daily_task_data_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_merged_daily_task_data_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_merged_daily_task_data_req message, length delimited. Does not implicitly {@link mahjong_cl_get_merged_daily_task_data_req.verify|verify} messages.
     * @param message mahjong_cl_get_merged_daily_task_data_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_merged_daily_task_data_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_merged_daily_task_data_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_merged_daily_task_data_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_merged_daily_task_data_req;

    /**
     * Decodes a mahjong_cl_get_merged_daily_task_data_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_merged_daily_task_data_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_merged_daily_task_data_req;

    /**
     * Verifies a mahjong_cl_get_merged_daily_task_data_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_merged_daily_task_data_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_merged_daily_task_data_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_merged_daily_task_data_req;

    /**
     * Creates a plain object from a mahjong_cl_get_merged_daily_task_data_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_merged_daily_task_data_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_merged_daily_task_data_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_merged_daily_task_data_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_PlayerTaskData. */
export interface Imahjong_PlayerTaskData {

    /** mahjong_PlayerTaskData taskType */
    taskType: number;

    /** mahjong_PlayerTaskData lastTaskIndex */
    lastTaskIndex: number;

    /** mahjong_PlayerTaskData curVal */
    curVal: number;
}

/** Represents a mahjong_PlayerTaskData. */
export class mahjong_PlayerTaskData implements Imahjong_PlayerTaskData {

    /**
     * Constructs a new mahjong_PlayerTaskData.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_PlayerTaskData);

    /** mahjong_PlayerTaskData taskType. */
    public taskType: number;

    /** mahjong_PlayerTaskData lastTaskIndex. */
    public lastTaskIndex: number;

    /** mahjong_PlayerTaskData curVal. */
    public curVal: number;

    /**
     * Creates a new mahjong_PlayerTaskData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_PlayerTaskData instance
     */
    public static create(properties?: Imahjong_PlayerTaskData): mahjong_PlayerTaskData;

    /**
     * Encodes the specified mahjong_PlayerTaskData message. Does not implicitly {@link mahjong_PlayerTaskData.verify|verify} messages.
     * @param message mahjong_PlayerTaskData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_PlayerTaskData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_PlayerTaskData message, length delimited. Does not implicitly {@link mahjong_PlayerTaskData.verify|verify} messages.
     * @param message mahjong_PlayerTaskData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_PlayerTaskData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_PlayerTaskData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_PlayerTaskData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_PlayerTaskData;

    /**
     * Decodes a mahjong_PlayerTaskData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_PlayerTaskData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_PlayerTaskData;

    /**
     * Verifies a mahjong_PlayerTaskData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_PlayerTaskData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_PlayerTaskData
     */
    public static fromObject(object: { [k: string]: any }): mahjong_PlayerTaskData;

    /**
     * Creates a plain object from a mahjong_PlayerTaskData message. Also converts values to other types if specified.
     * @param message mahjong_PlayerTaskData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_PlayerTaskData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_PlayerTaskData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_spec_trumpet_ack. */
export interface Imahjong_lc_spec_trumpet_ack {

    /** mahjong_lc_spec_trumpet_ack ret */
    ret: number;

    /** mahjong_lc_spec_trumpet_ack msg */
    msg: string;
}

/** Represents a mahjong_lc_spec_trumpet_ack. */
export class mahjong_lc_spec_trumpet_ack implements Imahjong_lc_spec_trumpet_ack {

    /**
     * Constructs a new mahjong_lc_spec_trumpet_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_spec_trumpet_ack);

    /** mahjong_lc_spec_trumpet_ack ret. */
    public ret: number;

    /** mahjong_lc_spec_trumpet_ack msg. */
    public msg: string;

    /**
     * Creates a new mahjong_lc_spec_trumpet_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_spec_trumpet_ack instance
     */
    public static create(properties?: Imahjong_lc_spec_trumpet_ack): mahjong_lc_spec_trumpet_ack;

    /**
     * Encodes the specified mahjong_lc_spec_trumpet_ack message. Does not implicitly {@link mahjong_lc_spec_trumpet_ack.verify|verify} messages.
     * @param message mahjong_lc_spec_trumpet_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_spec_trumpet_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_spec_trumpet_ack message, length delimited. Does not implicitly {@link mahjong_lc_spec_trumpet_ack.verify|verify} messages.
     * @param message mahjong_lc_spec_trumpet_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_spec_trumpet_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_spec_trumpet_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_spec_trumpet_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_spec_trumpet_ack;

    /**
     * Decodes a mahjong_lc_spec_trumpet_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_spec_trumpet_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_spec_trumpet_ack;

    /**
     * Verifies a mahjong_lc_spec_trumpet_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_spec_trumpet_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_spec_trumpet_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_spec_trumpet_ack;

    /**
     * Creates a plain object from a mahjong_lc_spec_trumpet_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_spec_trumpet_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_spec_trumpet_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_spec_trumpet_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_get_online_award_items_req. */
export interface Imahjong_cb_get_online_award_items_req {
}

/** Represents a mahjong_cb_get_online_award_items_req. */
export class mahjong_cb_get_online_award_items_req implements Imahjong_cb_get_online_award_items_req {

    /**
     * Constructs a new mahjong_cb_get_online_award_items_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_get_online_award_items_req);

    /**
     * Creates a new mahjong_cb_get_online_award_items_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_get_online_award_items_req instance
     */
    public static create(properties?: Imahjong_cb_get_online_award_items_req): mahjong_cb_get_online_award_items_req;

    /**
     * Encodes the specified mahjong_cb_get_online_award_items_req message. Does not implicitly {@link mahjong_cb_get_online_award_items_req.verify|verify} messages.
     * @param message mahjong_cb_get_online_award_items_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_get_online_award_items_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_get_online_award_items_req message, length delimited. Does not implicitly {@link mahjong_cb_get_online_award_items_req.verify|verify} messages.
     * @param message mahjong_cb_get_online_award_items_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_get_online_award_items_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_get_online_award_items_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_get_online_award_items_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_get_online_award_items_req;

    /**
     * Decodes a mahjong_cb_get_online_award_items_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_get_online_award_items_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_get_online_award_items_req;

    /**
     * Verifies a mahjong_cb_get_online_award_items_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_get_online_award_items_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_get_online_award_items_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_get_online_award_items_req;

    /**
     * Creates a plain object from a mahjong_cb_get_online_award_items_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_get_online_award_items_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_get_online_award_items_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_get_online_award_items_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_RoundAwardItem. */
export interface Imahjong_RoundAwardItem {

    /** mahjong_RoundAwardItem rounds */
    rounds: number;

    /** mahjong_RoundAwardItem money */
    money: number;

    /** mahjong_RoundAwardItem status */
    status: number;
}

/** Represents a mahjong_RoundAwardItem. */
export class mahjong_RoundAwardItem implements Imahjong_RoundAwardItem {

    /**
     * Constructs a new mahjong_RoundAwardItem.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_RoundAwardItem);

    /** mahjong_RoundAwardItem rounds. */
    public rounds: number;

    /** mahjong_RoundAwardItem money. */
    public money: number;

    /** mahjong_RoundAwardItem status. */
    public status: number;

    /**
     * Creates a new mahjong_RoundAwardItem instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_RoundAwardItem instance
     */
    public static create(properties?: Imahjong_RoundAwardItem): mahjong_RoundAwardItem;

    /**
     * Encodes the specified mahjong_RoundAwardItem message. Does not implicitly {@link mahjong_RoundAwardItem.verify|verify} messages.
     * @param message mahjong_RoundAwardItem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_RoundAwardItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_RoundAwardItem message, length delimited. Does not implicitly {@link mahjong_RoundAwardItem.verify|verify} messages.
     * @param message mahjong_RoundAwardItem message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_RoundAwardItem, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_RoundAwardItem message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_RoundAwardItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_RoundAwardItem;

    /**
     * Decodes a mahjong_RoundAwardItem message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_RoundAwardItem
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_RoundAwardItem;

    /**
     * Verifies a mahjong_RoundAwardItem message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_RoundAwardItem message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_RoundAwardItem
     */
    public static fromObject(object: { [k: string]: any }): mahjong_RoundAwardItem;

    /**
     * Creates a plain object from a mahjong_RoundAwardItem message. Also converts values to other types if specified.
     * @param message mahjong_RoundAwardItem
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_RoundAwardItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_RoundAwardItem to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_achieve_ext_list_req. */
export interface Imahjong_cl_get_achieve_ext_list_req {

    /** mahjong_cl_get_achieve_ext_list_req type */
    type: number;
}

/** Represents a mahjong_cl_get_achieve_ext_list_req. */
export class mahjong_cl_get_achieve_ext_list_req implements Imahjong_cl_get_achieve_ext_list_req {

    /**
     * Constructs a new mahjong_cl_get_achieve_ext_list_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_achieve_ext_list_req);

    /** mahjong_cl_get_achieve_ext_list_req type. */
    public type: number;

    /**
     * Creates a new mahjong_cl_get_achieve_ext_list_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_achieve_ext_list_req instance
     */
    public static create(properties?: Imahjong_cl_get_achieve_ext_list_req): mahjong_cl_get_achieve_ext_list_req;

    /**
     * Encodes the specified mahjong_cl_get_achieve_ext_list_req message. Does not implicitly {@link mahjong_cl_get_achieve_ext_list_req.verify|verify} messages.
     * @param message mahjong_cl_get_achieve_ext_list_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_achieve_ext_list_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_achieve_ext_list_req message, length delimited. Does not implicitly {@link mahjong_cl_get_achieve_ext_list_req.verify|verify} messages.
     * @param message mahjong_cl_get_achieve_ext_list_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_achieve_ext_list_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_achieve_ext_list_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_achieve_ext_list_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_achieve_ext_list_req;

    /**
     * Decodes a mahjong_cl_get_achieve_ext_list_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_achieve_ext_list_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_achieve_ext_list_req;

    /**
     * Verifies a mahjong_cl_get_achieve_ext_list_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_achieve_ext_list_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_achieve_ext_list_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_achieve_ext_list_req;

    /**
     * Creates a plain object from a mahjong_cl_get_achieve_ext_list_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_achieve_ext_list_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_achieve_ext_list_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_achieve_ext_list_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_get_task_system_req. */
export interface Imahjong_cb_get_task_system_req {
}

/** Represents a mahjong_cb_get_task_system_req. */
export class mahjong_cb_get_task_system_req implements Imahjong_cb_get_task_system_req {

    /**
     * Constructs a new mahjong_cb_get_task_system_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_get_task_system_req);

    /**
     * Creates a new mahjong_cb_get_task_system_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_get_task_system_req instance
     */
    public static create(properties?: Imahjong_cb_get_task_system_req): mahjong_cb_get_task_system_req;

    /**
     * Encodes the specified mahjong_cb_get_task_system_req message. Does not implicitly {@link mahjong_cb_get_task_system_req.verify|verify} messages.
     * @param message mahjong_cb_get_task_system_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_get_task_system_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_get_task_system_req message, length delimited. Does not implicitly {@link mahjong_cb_get_task_system_req.verify|verify} messages.
     * @param message mahjong_cb_get_task_system_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_get_task_system_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_get_task_system_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_get_task_system_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_get_task_system_req;

    /**
     * Decodes a mahjong_cb_get_task_system_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_get_task_system_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_get_task_system_req;

    /**
     * Verifies a mahjong_cb_get_task_system_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_get_task_system_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_get_task_system_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_get_task_system_req;

    /**
     * Creates a plain object from a mahjong_cb_get_task_system_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_get_task_system_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_get_task_system_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_get_task_system_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_daily_task_list_req. */
export interface Imahjong_cl_get_daily_task_list_req {
}

/** Represents a mahjong_cl_get_daily_task_list_req. */
export class mahjong_cl_get_daily_task_list_req implements Imahjong_cl_get_daily_task_list_req {

    /**
     * Constructs a new mahjong_cl_get_daily_task_list_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_daily_task_list_req);

    /**
     * Creates a new mahjong_cl_get_daily_task_list_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_daily_task_list_req instance
     */
    public static create(properties?: Imahjong_cl_get_daily_task_list_req): mahjong_cl_get_daily_task_list_req;

    /**
     * Encodes the specified mahjong_cl_get_daily_task_list_req message. Does not implicitly {@link mahjong_cl_get_daily_task_list_req.verify|verify} messages.
     * @param message mahjong_cl_get_daily_task_list_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_daily_task_list_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_daily_task_list_req message, length delimited. Does not implicitly {@link mahjong_cl_get_daily_task_list_req.verify|verify} messages.
     * @param message mahjong_cl_get_daily_task_list_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_daily_task_list_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_daily_task_list_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_daily_task_list_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_daily_task_list_req;

    /**
     * Decodes a mahjong_cl_get_daily_task_list_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_daily_task_list_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_daily_task_list_req;

    /**
     * Verifies a mahjong_cl_get_daily_task_list_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_daily_task_list_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_daily_task_list_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_daily_task_list_req;

    /**
     * Creates a plain object from a mahjong_cl_get_daily_task_list_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_daily_task_list_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_daily_task_list_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_daily_task_list_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_synthesis_monkey_req. */
export interface Imahjong_cl_synthesis_monkey_req {

    /** mahjong_cl_synthesis_monkey_req flag */
    flag: number;

    /** mahjong_cl_synthesis_monkey_req nMonkeyType */
    nMonkeyType: number;
}

/** Represents a mahjong_cl_synthesis_monkey_req. */
export class mahjong_cl_synthesis_monkey_req implements Imahjong_cl_synthesis_monkey_req {

    /**
     * Constructs a new mahjong_cl_synthesis_monkey_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_synthesis_monkey_req);

    /** mahjong_cl_synthesis_monkey_req flag. */
    public flag: number;

    /** mahjong_cl_synthesis_monkey_req nMonkeyType. */
    public nMonkeyType: number;

    /**
     * Creates a new mahjong_cl_synthesis_monkey_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_synthesis_monkey_req instance
     */
    public static create(properties?: Imahjong_cl_synthesis_monkey_req): mahjong_cl_synthesis_monkey_req;

    /**
     * Encodes the specified mahjong_cl_synthesis_monkey_req message. Does not implicitly {@link mahjong_cl_synthesis_monkey_req.verify|verify} messages.
     * @param message mahjong_cl_synthesis_monkey_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_synthesis_monkey_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_synthesis_monkey_req message, length delimited. Does not implicitly {@link mahjong_cl_synthesis_monkey_req.verify|verify} messages.
     * @param message mahjong_cl_synthesis_monkey_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_synthesis_monkey_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_synthesis_monkey_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_synthesis_monkey_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_synthesis_monkey_req;

    /**
     * Decodes a mahjong_cl_synthesis_monkey_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_synthesis_monkey_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_synthesis_monkey_req;

    /**
     * Verifies a mahjong_cl_synthesis_monkey_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_synthesis_monkey_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_synthesis_monkey_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_synthesis_monkey_req;

    /**
     * Creates a plain object from a mahjong_cl_synthesis_monkey_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_synthesis_monkey_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_synthesis_monkey_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_synthesis_monkey_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_merged_daily_task_award_req. */
export interface Imahjong_cl_get_merged_daily_task_award_req {

    /** mahjong_cl_get_merged_daily_task_award_req gameId */
    gameId: number;

    /** mahjong_cl_get_merged_daily_task_award_req index */
    index: number;
}

/** Represents a mahjong_cl_get_merged_daily_task_award_req. */
export class mahjong_cl_get_merged_daily_task_award_req implements Imahjong_cl_get_merged_daily_task_award_req {

    /**
     * Constructs a new mahjong_cl_get_merged_daily_task_award_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_merged_daily_task_award_req);

    /** mahjong_cl_get_merged_daily_task_award_req gameId. */
    public gameId: number;

    /** mahjong_cl_get_merged_daily_task_award_req index. */
    public index: number;

    /**
     * Creates a new mahjong_cl_get_merged_daily_task_award_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_merged_daily_task_award_req instance
     */
    public static create(properties?: Imahjong_cl_get_merged_daily_task_award_req): mahjong_cl_get_merged_daily_task_award_req;

    /**
     * Encodes the specified mahjong_cl_get_merged_daily_task_award_req message. Does not implicitly {@link mahjong_cl_get_merged_daily_task_award_req.verify|verify} messages.
     * @param message mahjong_cl_get_merged_daily_task_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_merged_daily_task_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_merged_daily_task_award_req message, length delimited. Does not implicitly {@link mahjong_cl_get_merged_daily_task_award_req.verify|verify} messages.
     * @param message mahjong_cl_get_merged_daily_task_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_merged_daily_task_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_merged_daily_task_award_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_merged_daily_task_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_merged_daily_task_award_req;

    /**
     * Decodes a mahjong_cl_get_merged_daily_task_award_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_merged_daily_task_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_merged_daily_task_award_req;

    /**
     * Verifies a mahjong_cl_get_merged_daily_task_award_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_merged_daily_task_award_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_merged_daily_task_award_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_merged_daily_task_award_req;

    /**
     * Creates a plain object from a mahjong_cl_get_merged_daily_task_award_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_merged_daily_task_award_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_merged_daily_task_award_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_merged_daily_task_award_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_card_road_data_req. */
export interface Imahjong_cl_get_card_road_data_req {

    /** mahjong_cl_get_card_road_data_req gameId */
    gameId: number;
}

/** Represents a mahjong_cl_get_card_road_data_req. */
export class mahjong_cl_get_card_road_data_req implements Imahjong_cl_get_card_road_data_req {

    /**
     * Constructs a new mahjong_cl_get_card_road_data_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_card_road_data_req);

    /** mahjong_cl_get_card_road_data_req gameId. */
    public gameId: number;

    /**
     * Creates a new mahjong_cl_get_card_road_data_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_card_road_data_req instance
     */
    public static create(properties?: Imahjong_cl_get_card_road_data_req): mahjong_cl_get_card_road_data_req;

    /**
     * Encodes the specified mahjong_cl_get_card_road_data_req message. Does not implicitly {@link mahjong_cl_get_card_road_data_req.verify|verify} messages.
     * @param message mahjong_cl_get_card_road_data_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_card_road_data_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_card_road_data_req message, length delimited. Does not implicitly {@link mahjong_cl_get_card_road_data_req.verify|verify} messages.
     * @param message mahjong_cl_get_card_road_data_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_card_road_data_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_card_road_data_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_card_road_data_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_card_road_data_req;

    /**
     * Decodes a mahjong_cl_get_card_road_data_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_card_road_data_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_card_road_data_req;

    /**
     * Verifies a mahjong_cl_get_card_road_data_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_card_road_data_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_card_road_data_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_card_road_data_req;

    /**
     * Creates a plain object from a mahjong_cl_get_card_road_data_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_card_road_data_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_card_road_data_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_card_road_data_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_trumpet_by_type_req. */
export interface Imahjong_cl_trumpet_by_type_req {

    /** mahjong_cl_trumpet_by_type_req type */
    type: number;

    /** mahjong_cl_trumpet_by_type_req gameId */
    gameId: number;

    /** mahjong_cl_trumpet_by_type_req param */
    param: number;

    /** mahjong_cl_trumpet_by_type_req message */
    message: string;

    /** mahjong_cl_trumpet_by_type_req image */
    image: string;
}

/** Represents a mahjong_cl_trumpet_by_type_req. */
export class mahjong_cl_trumpet_by_type_req implements Imahjong_cl_trumpet_by_type_req {

    /**
     * Constructs a new mahjong_cl_trumpet_by_type_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_trumpet_by_type_req);

    /** mahjong_cl_trumpet_by_type_req type. */
    public type: number;

    /** mahjong_cl_trumpet_by_type_req gameId. */
    public gameId: number;

    /** mahjong_cl_trumpet_by_type_req param. */
    public param: number;

    /** mahjong_cl_trumpet_by_type_req message. */
    public message: string;

    /** mahjong_cl_trumpet_by_type_req image. */
    public image: string;

    /**
     * Creates a new mahjong_cl_trumpet_by_type_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_trumpet_by_type_req instance
     */
    public static create(properties?: Imahjong_cl_trumpet_by_type_req): mahjong_cl_trumpet_by_type_req;

    /**
     * Encodes the specified mahjong_cl_trumpet_by_type_req message. Does not implicitly {@link mahjong_cl_trumpet_by_type_req.verify|verify} messages.
     * @param message mahjong_cl_trumpet_by_type_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_trumpet_by_type_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_trumpet_by_type_req message, length delimited. Does not implicitly {@link mahjong_cl_trumpet_by_type_req.verify|verify} messages.
     * @param message mahjong_cl_trumpet_by_type_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_trumpet_by_type_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_trumpet_by_type_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_trumpet_by_type_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_trumpet_by_type_req;

    /**
     * Decodes a mahjong_cl_trumpet_by_type_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_trumpet_by_type_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_trumpet_by_type_req;

    /**
     * Verifies a mahjong_cl_trumpet_by_type_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_trumpet_by_type_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_trumpet_by_type_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_trumpet_by_type_req;

    /**
     * Creates a plain object from a mahjong_cl_trumpet_by_type_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_trumpet_by_type_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_trumpet_by_type_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_trumpet_by_type_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_set_user_accumulate_signin_days_ack. */
export interface Imahjong_lc_set_user_accumulate_signin_days_ack {

    /** mahjong_lc_set_user_accumulate_signin_days_ack ret */
    ret: number;

    /** mahjong_lc_set_user_accumulate_signin_days_ack day */
    day: number;

    /** mahjong_lc_set_user_accumulate_signin_days_ack continuousDays */
    continuousDays: number;

    /** mahjong_lc_set_user_accumulate_signin_days_ack accumulatyeDays */
    accumulatyeDays: number;

    /** mahjong_lc_set_user_accumulate_signin_days_ack money */
    money: number;
}

/** Represents a mahjong_lc_set_user_accumulate_signin_days_ack. */
export class mahjong_lc_set_user_accumulate_signin_days_ack implements Imahjong_lc_set_user_accumulate_signin_days_ack {

    /**
     * Constructs a new mahjong_lc_set_user_accumulate_signin_days_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_set_user_accumulate_signin_days_ack);

    /** mahjong_lc_set_user_accumulate_signin_days_ack ret. */
    public ret: number;

    /** mahjong_lc_set_user_accumulate_signin_days_ack day. */
    public day: number;

    /** mahjong_lc_set_user_accumulate_signin_days_ack continuousDays. */
    public continuousDays: number;

    /** mahjong_lc_set_user_accumulate_signin_days_ack accumulatyeDays. */
    public accumulatyeDays: number;

    /** mahjong_lc_set_user_accumulate_signin_days_ack money. */
    public money: number;

    /**
     * Creates a new mahjong_lc_set_user_accumulate_signin_days_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_set_user_accumulate_signin_days_ack instance
     */
    public static create(properties?: Imahjong_lc_set_user_accumulate_signin_days_ack): mahjong_lc_set_user_accumulate_signin_days_ack;

    /**
     * Encodes the specified mahjong_lc_set_user_accumulate_signin_days_ack message. Does not implicitly {@link mahjong_lc_set_user_accumulate_signin_days_ack.verify|verify} messages.
     * @param message mahjong_lc_set_user_accumulate_signin_days_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_set_user_accumulate_signin_days_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_set_user_accumulate_signin_days_ack message, length delimited. Does not implicitly {@link mahjong_lc_set_user_accumulate_signin_days_ack.verify|verify} messages.
     * @param message mahjong_lc_set_user_accumulate_signin_days_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_set_user_accumulate_signin_days_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_set_user_accumulate_signin_days_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_set_user_accumulate_signin_days_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_set_user_accumulate_signin_days_ack;

    /**
     * Decodes a mahjong_lc_set_user_accumulate_signin_days_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_set_user_accumulate_signin_days_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_set_user_accumulate_signin_days_ack;

    /**
     * Verifies a mahjong_lc_set_user_accumulate_signin_days_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_set_user_accumulate_signin_days_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_set_user_accumulate_signin_days_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_set_user_accumulate_signin_days_ack;

    /**
     * Creates a plain object from a mahjong_lc_set_user_accumulate_signin_days_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_set_user_accumulate_signin_days_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_set_user_accumulate_signin_days_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_set_user_accumulate_signin_days_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_zzyk_award_req. */
export interface Imahjong_cl_get_zzyk_award_req {

    /** mahjong_cl_get_zzyk_award_req flag */
    flag: number;
}

/** Represents a mahjong_cl_get_zzyk_award_req. */
export class mahjong_cl_get_zzyk_award_req implements Imahjong_cl_get_zzyk_award_req {

    /**
     * Constructs a new mahjong_cl_get_zzyk_award_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_zzyk_award_req);

    /** mahjong_cl_get_zzyk_award_req flag. */
    public flag: number;

    /**
     * Creates a new mahjong_cl_get_zzyk_award_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_zzyk_award_req instance
     */
    public static create(properties?: Imahjong_cl_get_zzyk_award_req): mahjong_cl_get_zzyk_award_req;

    /**
     * Encodes the specified mahjong_cl_get_zzyk_award_req message. Does not implicitly {@link mahjong_cl_get_zzyk_award_req.verify|verify} messages.
     * @param message mahjong_cl_get_zzyk_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_zzyk_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_zzyk_award_req message, length delimited. Does not implicitly {@link mahjong_cl_get_zzyk_award_req.verify|verify} messages.
     * @param message mahjong_cl_get_zzyk_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_zzyk_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_zzyk_award_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_zzyk_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_zzyk_award_req;

    /**
     * Decodes a mahjong_cl_get_zzyk_award_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_zzyk_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_zzyk_award_req;

    /**
     * Verifies a mahjong_cl_get_zzyk_award_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_zzyk_award_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_zzyk_award_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_zzyk_award_req;

    /**
     * Creates a plain object from a mahjong_cl_get_zzyk_award_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_zzyk_award_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_zzyk_award_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_zzyk_award_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_synthesis_monkey_ack. */
export interface Imahjong_lc_synthesis_monkey_ack {

    /** mahjong_lc_synthesis_monkey_ack ret */
    ret: number;

    /** mahjong_lc_synthesis_monkey_ack nResultMonkeyType */
    nResultMonkeyType: number;
}

/** Represents a mahjong_lc_synthesis_monkey_ack. */
export class mahjong_lc_synthesis_monkey_ack implements Imahjong_lc_synthesis_monkey_ack {

    /**
     * Constructs a new mahjong_lc_synthesis_monkey_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_synthesis_monkey_ack);

    /** mahjong_lc_synthesis_monkey_ack ret. */
    public ret: number;

    /** mahjong_lc_synthesis_monkey_ack nResultMonkeyType. */
    public nResultMonkeyType: number;

    /**
     * Creates a new mahjong_lc_synthesis_monkey_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_synthesis_monkey_ack instance
     */
    public static create(properties?: Imahjong_lc_synthesis_monkey_ack): mahjong_lc_synthesis_monkey_ack;

    /**
     * Encodes the specified mahjong_lc_synthesis_monkey_ack message. Does not implicitly {@link mahjong_lc_synthesis_monkey_ack.verify|verify} messages.
     * @param message mahjong_lc_synthesis_monkey_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_synthesis_monkey_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_synthesis_monkey_ack message, length delimited. Does not implicitly {@link mahjong_lc_synthesis_monkey_ack.verify|verify} messages.
     * @param message mahjong_lc_synthesis_monkey_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_synthesis_monkey_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_synthesis_monkey_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_synthesis_monkey_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_synthesis_monkey_ack;

    /**
     * Decodes a mahjong_lc_synthesis_monkey_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_synthesis_monkey_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_synthesis_monkey_ack;

    /**
     * Verifies a mahjong_lc_synthesis_monkey_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_synthesis_monkey_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_synthesis_monkey_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_synthesis_monkey_ack;

    /**
     * Creates a plain object from a mahjong_lc_synthesis_monkey_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_synthesis_monkey_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_synthesis_monkey_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_synthesis_monkey_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_ItemAwardData. */
export interface Imahjong_ItemAwardData {

    /** mahjong_ItemAwardData index */
    index: number;

    /** mahjong_ItemAwardData number */
    number: number;
}

/** Represents a mahjong_ItemAwardData. */
export class mahjong_ItemAwardData implements Imahjong_ItemAwardData {

    /**
     * Constructs a new mahjong_ItemAwardData.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_ItemAwardData);

    /** mahjong_ItemAwardData index. */
    public index: number;

    /** mahjong_ItemAwardData number. */
    public number: number;

    /**
     * Creates a new mahjong_ItemAwardData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_ItemAwardData instance
     */
    public static create(properties?: Imahjong_ItemAwardData): mahjong_ItemAwardData;

    /**
     * Encodes the specified mahjong_ItemAwardData message. Does not implicitly {@link mahjong_ItemAwardData.verify|verify} messages.
     * @param message mahjong_ItemAwardData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_ItemAwardData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_ItemAwardData message, length delimited. Does not implicitly {@link mahjong_ItemAwardData.verify|verify} messages.
     * @param message mahjong_ItemAwardData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_ItemAwardData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_ItemAwardData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_ItemAwardData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_ItemAwardData;

    /**
     * Decodes a mahjong_ItemAwardData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_ItemAwardData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_ItemAwardData;

    /**
     * Verifies a mahjong_ItemAwardData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_ItemAwardData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_ItemAwardData
     */
    public static fromObject(object: { [k: string]: any }): mahjong_ItemAwardData;

    /**
     * Creates a plain object from a mahjong_ItemAwardData message. Also converts values to other types if specified.
     * @param message mahjong_ItemAwardData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_ItemAwardData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_ItemAwardData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_safe_history_ack. */
export interface Imahjong_lc_get_safe_history_ack {

    /** mahjong_lc_get_safe_history_ack ret */
    ret: number;

    /** mahjong_lc_get_safe_history_ack plyGuid */
    plyGuid: (number|Long);

    /** mahjong_lc_get_safe_history_ack history */
    history?: (Imahjong_SafeRecord[]|null);
}

/** Represents a mahjong_lc_get_safe_history_ack. */
export class mahjong_lc_get_safe_history_ack implements Imahjong_lc_get_safe_history_ack {

    /**
     * Constructs a new mahjong_lc_get_safe_history_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_safe_history_ack);

    /** mahjong_lc_get_safe_history_ack ret. */
    public ret: number;

    /** mahjong_lc_get_safe_history_ack plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_lc_get_safe_history_ack history. */
    public history: Imahjong_SafeRecord[];

    /**
     * Creates a new mahjong_lc_get_safe_history_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_safe_history_ack instance
     */
    public static create(properties?: Imahjong_lc_get_safe_history_ack): mahjong_lc_get_safe_history_ack;

    /**
     * Encodes the specified mahjong_lc_get_safe_history_ack message. Does not implicitly {@link mahjong_lc_get_safe_history_ack.verify|verify} messages.
     * @param message mahjong_lc_get_safe_history_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_safe_history_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_safe_history_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_safe_history_ack.verify|verify} messages.
     * @param message mahjong_lc_get_safe_history_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_safe_history_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_safe_history_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_safe_history_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_safe_history_ack;

    /**
     * Decodes a mahjong_lc_get_safe_history_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_safe_history_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_safe_history_ack;

    /**
     * Verifies a mahjong_lc_get_safe_history_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_safe_history_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_safe_history_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_safe_history_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_safe_history_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_safe_history_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_safe_history_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_safe_history_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_update_special_login_award_not. */
export interface Imahjong_lc_update_special_login_award_not {

    /** mahjong_lc_update_special_login_award_not message */
    message: string;
}

/** Represents a mahjong_lc_update_special_login_award_not. */
export class mahjong_lc_update_special_login_award_not implements Imahjong_lc_update_special_login_award_not {

    /**
     * Constructs a new mahjong_lc_update_special_login_award_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_update_special_login_award_not);

    /** mahjong_lc_update_special_login_award_not message. */
    public message: string;

    /**
     * Creates a new mahjong_lc_update_special_login_award_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_update_special_login_award_not instance
     */
    public static create(properties?: Imahjong_lc_update_special_login_award_not): mahjong_lc_update_special_login_award_not;

    /**
     * Encodes the specified mahjong_lc_update_special_login_award_not message. Does not implicitly {@link mahjong_lc_update_special_login_award_not.verify|verify} messages.
     * @param message mahjong_lc_update_special_login_award_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_update_special_login_award_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_update_special_login_award_not message, length delimited. Does not implicitly {@link mahjong_lc_update_special_login_award_not.verify|verify} messages.
     * @param message mahjong_lc_update_special_login_award_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_update_special_login_award_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_update_special_login_award_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_update_special_login_award_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_update_special_login_award_not;

    /**
     * Decodes a mahjong_lc_update_special_login_award_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_update_special_login_award_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_update_special_login_award_not;

    /**
     * Verifies a mahjong_lc_update_special_login_award_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_update_special_login_award_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_update_special_login_award_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_update_special_login_award_not;

    /**
     * Creates a plain object from a mahjong_lc_update_special_login_award_not message. Also converts values to other types if specified.
     * @param message mahjong_lc_update_special_login_award_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_update_special_login_award_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_update_special_login_award_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_chat_not. */
export interface Imahjong_bc_chat_not {

    /** mahjong_bc_chat_not plyGuid */
    plyGuid: (number|Long);

    /** mahjong_bc_chat_not nickname */
    nickname: string;

    /** mahjong_bc_chat_not message */
    message: string;

    /** mahjong_bc_chat_not vipLevel */
    vipLevel: number;

    /** mahjong_bc_chat_not userLevel */
    userLevel: number;
}

/** Represents a mahjong_bc_chat_not. */
export class mahjong_bc_chat_not implements Imahjong_bc_chat_not {

    /**
     * Constructs a new mahjong_bc_chat_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_chat_not);

    /** mahjong_bc_chat_not plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_bc_chat_not nickname. */
    public nickname: string;

    /** mahjong_bc_chat_not message. */
    public message: string;

    /** mahjong_bc_chat_not vipLevel. */
    public vipLevel: number;

    /** mahjong_bc_chat_not userLevel. */
    public userLevel: number;

    /**
     * Creates a new mahjong_bc_chat_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_chat_not instance
     */
    public static create(properties?: Imahjong_bc_chat_not): mahjong_bc_chat_not;

    /**
     * Encodes the specified mahjong_bc_chat_not message. Does not implicitly {@link mahjong_bc_chat_not.verify|verify} messages.
     * @param message mahjong_bc_chat_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_chat_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_chat_not message, length delimited. Does not implicitly {@link mahjong_bc_chat_not.verify|verify} messages.
     * @param message mahjong_bc_chat_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_chat_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_chat_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_chat_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_chat_not;

    /**
     * Decodes a mahjong_bc_chat_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_chat_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_chat_not;

    /**
     * Verifies a mahjong_bc_chat_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_chat_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_chat_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_chat_not;

    /**
     * Creates a plain object from a mahjong_bc_chat_not message. Also converts values to other types if specified.
     * @param message mahjong_bc_chat_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_chat_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_chat_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_friend_loginout_tip_not. */
export interface Imahjong_lc_friend_loginout_tip_not {

    /** mahjong_lc_friend_loginout_tip_not plyGuid */
    plyGuid: (number|Long);

    /** mahjong_lc_friend_loginout_tip_not type */
    type: number;
}

/** Represents a mahjong_lc_friend_loginout_tip_not. */
export class mahjong_lc_friend_loginout_tip_not implements Imahjong_lc_friend_loginout_tip_not {

    /**
     * Constructs a new mahjong_lc_friend_loginout_tip_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_friend_loginout_tip_not);

    /** mahjong_lc_friend_loginout_tip_not plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_lc_friend_loginout_tip_not type. */
    public type: number;

    /**
     * Creates a new mahjong_lc_friend_loginout_tip_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_friend_loginout_tip_not instance
     */
    public static create(properties?: Imahjong_lc_friend_loginout_tip_not): mahjong_lc_friend_loginout_tip_not;

    /**
     * Encodes the specified mahjong_lc_friend_loginout_tip_not message. Does not implicitly {@link mahjong_lc_friend_loginout_tip_not.verify|verify} messages.
     * @param message mahjong_lc_friend_loginout_tip_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_friend_loginout_tip_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_friend_loginout_tip_not message, length delimited. Does not implicitly {@link mahjong_lc_friend_loginout_tip_not.verify|verify} messages.
     * @param message mahjong_lc_friend_loginout_tip_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_friend_loginout_tip_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_friend_loginout_tip_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_friend_loginout_tip_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_friend_loginout_tip_not;

    /**
     * Decodes a mahjong_lc_friend_loginout_tip_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_friend_loginout_tip_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_friend_loginout_tip_not;

    /**
     * Verifies a mahjong_lc_friend_loginout_tip_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_friend_loginout_tip_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_friend_loginout_tip_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_friend_loginout_tip_not;

    /**
     * Creates a plain object from a mahjong_lc_friend_loginout_tip_not message. Also converts values to other types if specified.
     * @param message mahjong_lc_friend_loginout_tip_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_friend_loginout_tip_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_friend_loginout_tip_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_miniGame_req. */
export interface Imahjong_cl_get_miniGame_req {

    /** mahjong_cl_get_miniGame_req plyGuid */
    plyGuid: (number|Long);

    /** mahjong_cl_get_miniGame_req gameId */
    gameId: number;

    /** mahjong_cl_get_miniGame_req version */
    version: number;
}

/** Represents a mahjong_cl_get_miniGame_req. */
export class mahjong_cl_get_miniGame_req implements Imahjong_cl_get_miniGame_req {

    /**
     * Constructs a new mahjong_cl_get_miniGame_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_miniGame_req);

    /** mahjong_cl_get_miniGame_req plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_cl_get_miniGame_req gameId. */
    public gameId: number;

    /** mahjong_cl_get_miniGame_req version. */
    public version: number;

    /**
     * Creates a new mahjong_cl_get_miniGame_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_miniGame_req instance
     */
    public static create(properties?: Imahjong_cl_get_miniGame_req): mahjong_cl_get_miniGame_req;

    /**
     * Encodes the specified mahjong_cl_get_miniGame_req message. Does not implicitly {@link mahjong_cl_get_miniGame_req.verify|verify} messages.
     * @param message mahjong_cl_get_miniGame_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_miniGame_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_miniGame_req message, length delimited. Does not implicitly {@link mahjong_cl_get_miniGame_req.verify|verify} messages.
     * @param message mahjong_cl_get_miniGame_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_miniGame_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_miniGame_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_miniGame_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_miniGame_req;

    /**
     * Decodes a mahjong_cl_get_miniGame_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_miniGame_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_miniGame_req;

    /**
     * Verifies a mahjong_cl_get_miniGame_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_miniGame_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_miniGame_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_miniGame_req;

    /**
     * Creates a plain object from a mahjong_cl_get_miniGame_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_miniGame_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_miniGame_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_miniGame_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_get_achieve_award_not. */
export interface Imahjong_bc_get_achieve_award_not {

    /** mahjong_bc_get_achieve_award_not index */
    index: number;

    /** mahjong_bc_get_achieve_award_not name */
    name: string;

    /** mahjong_bc_get_achieve_award_not desc */
    desc: string;
}

/** Represents a mahjong_bc_get_achieve_award_not. */
export class mahjong_bc_get_achieve_award_not implements Imahjong_bc_get_achieve_award_not {

    /**
     * Constructs a new mahjong_bc_get_achieve_award_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_get_achieve_award_not);

    /** mahjong_bc_get_achieve_award_not index. */
    public index: number;

    /** mahjong_bc_get_achieve_award_not name. */
    public name: string;

    /** mahjong_bc_get_achieve_award_not desc. */
    public desc: string;

    /**
     * Creates a new mahjong_bc_get_achieve_award_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_get_achieve_award_not instance
     */
    public static create(properties?: Imahjong_bc_get_achieve_award_not): mahjong_bc_get_achieve_award_not;

    /**
     * Encodes the specified mahjong_bc_get_achieve_award_not message. Does not implicitly {@link mahjong_bc_get_achieve_award_not.verify|verify} messages.
     * @param message mahjong_bc_get_achieve_award_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_get_achieve_award_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_get_achieve_award_not message, length delimited. Does not implicitly {@link mahjong_bc_get_achieve_award_not.verify|verify} messages.
     * @param message mahjong_bc_get_achieve_award_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_get_achieve_award_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_get_achieve_award_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_get_achieve_award_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_get_achieve_award_not;

    /**
     * Decodes a mahjong_bc_get_achieve_award_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_get_achieve_award_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_get_achieve_award_not;

    /**
     * Verifies a mahjong_bc_get_achieve_award_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_get_achieve_award_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_get_achieve_award_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_get_achieve_award_not;

    /**
     * Creates a plain object from a mahjong_bc_get_achieve_award_not message. Also converts values to other types if specified.
     * @param message mahjong_bc_get_achieve_award_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_get_achieve_award_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_get_achieve_award_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_change_table_req. */
export interface Imahjong_cb_change_table_req {
}

/** Represents a mahjong_cb_change_table_req. */
export class mahjong_cb_change_table_req implements Imahjong_cb_change_table_req {

    /**
     * Constructs a new mahjong_cb_change_table_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_change_table_req);

    /**
     * Creates a new mahjong_cb_change_table_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_change_table_req instance
     */
    public static create(properties?: Imahjong_cb_change_table_req): mahjong_cb_change_table_req;

    /**
     * Encodes the specified mahjong_cb_change_table_req message. Does not implicitly {@link mahjong_cb_change_table_req.verify|verify} messages.
     * @param message mahjong_cb_change_table_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_change_table_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_change_table_req message, length delimited. Does not implicitly {@link mahjong_cb_change_table_req.verify|verify} messages.
     * @param message mahjong_cb_change_table_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_change_table_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_change_table_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_change_table_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_change_table_req;

    /**
     * Decodes a mahjong_cb_change_table_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_change_table_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_change_table_req;

    /**
     * Verifies a mahjong_cb_change_table_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_change_table_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_change_table_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_change_table_req;

    /**
     * Creates a plain object from a mahjong_cb_change_table_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_change_table_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_change_table_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_change_table_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_player_game_list_req. */
export interface Imahjong_cl_get_player_game_list_req {

    /** mahjong_cl_get_player_game_list_req gameList */
    gameList?: (number[]|null);
}

/** Represents a mahjong_cl_get_player_game_list_req. */
export class mahjong_cl_get_player_game_list_req implements Imahjong_cl_get_player_game_list_req {

    /**
     * Constructs a new mahjong_cl_get_player_game_list_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_player_game_list_req);

    /** mahjong_cl_get_player_game_list_req gameList. */
    public gameList: number[];

    /**
     * Creates a new mahjong_cl_get_player_game_list_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_player_game_list_req instance
     */
    public static create(properties?: Imahjong_cl_get_player_game_list_req): mahjong_cl_get_player_game_list_req;

    /**
     * Encodes the specified mahjong_cl_get_player_game_list_req message. Does not implicitly {@link mahjong_cl_get_player_game_list_req.verify|verify} messages.
     * @param message mahjong_cl_get_player_game_list_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_player_game_list_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_player_game_list_req message, length delimited. Does not implicitly {@link mahjong_cl_get_player_game_list_req.verify|verify} messages.
     * @param message mahjong_cl_get_player_game_list_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_player_game_list_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_player_game_list_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_player_game_list_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_player_game_list_req;

    /**
     * Decodes a mahjong_cl_get_player_game_list_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_player_game_list_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_player_game_list_req;

    /**
     * Verifies a mahjong_cl_get_player_game_list_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_player_game_list_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_player_game_list_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_player_game_list_req;

    /**
     * Creates a plain object from a mahjong_cl_get_player_game_list_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_player_game_list_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_player_game_list_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_player_game_list_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_get_achieve_list_ack. */
export interface Imahjong_bc_get_achieve_list_ack {

    /** mahjong_bc_get_achieve_list_ack items */
    items?: (Imahjong_AchieveData[]|null);
}

/** Represents a mahjong_bc_get_achieve_list_ack. */
export class mahjong_bc_get_achieve_list_ack implements Imahjong_bc_get_achieve_list_ack {

    /**
     * Constructs a new mahjong_bc_get_achieve_list_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_get_achieve_list_ack);

    /** mahjong_bc_get_achieve_list_ack items. */
    public items: Imahjong_AchieveData[];

    /**
     * Creates a new mahjong_bc_get_achieve_list_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_get_achieve_list_ack instance
     */
    public static create(properties?: Imahjong_bc_get_achieve_list_ack): mahjong_bc_get_achieve_list_ack;

    /**
     * Encodes the specified mahjong_bc_get_achieve_list_ack message. Does not implicitly {@link mahjong_bc_get_achieve_list_ack.verify|verify} messages.
     * @param message mahjong_bc_get_achieve_list_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_get_achieve_list_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_get_achieve_list_ack message, length delimited. Does not implicitly {@link mahjong_bc_get_achieve_list_ack.verify|verify} messages.
     * @param message mahjong_bc_get_achieve_list_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_get_achieve_list_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_get_achieve_list_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_get_achieve_list_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_get_achieve_list_ack;

    /**
     * Decodes a mahjong_bc_get_achieve_list_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_get_achieve_list_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_get_achieve_list_ack;

    /**
     * Verifies a mahjong_bc_get_achieve_list_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_get_achieve_list_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_get_achieve_list_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_get_achieve_list_ack;

    /**
     * Creates a plain object from a mahjong_bc_get_achieve_list_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_get_achieve_list_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_get_achieve_list_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_get_achieve_list_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_miniGame_by_id_req. */
export interface Imahjong_cl_get_miniGame_by_id_req {

    /** mahjong_cl_get_miniGame_by_id_req plyGuid */
    plyGuid: (number|Long);

    /** mahjong_cl_get_miniGame_by_id_req gameId */
    gameId: number;

    /** mahjong_cl_get_miniGame_by_id_req miniGameId */
    miniGameId: number;

    /** mahjong_cl_get_miniGame_by_id_req version */
    version: number;
}

/** Represents a mahjong_cl_get_miniGame_by_id_req. */
export class mahjong_cl_get_miniGame_by_id_req implements Imahjong_cl_get_miniGame_by_id_req {

    /**
     * Constructs a new mahjong_cl_get_miniGame_by_id_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_miniGame_by_id_req);

    /** mahjong_cl_get_miniGame_by_id_req plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_cl_get_miniGame_by_id_req gameId. */
    public gameId: number;

    /** mahjong_cl_get_miniGame_by_id_req miniGameId. */
    public miniGameId: number;

    /** mahjong_cl_get_miniGame_by_id_req version. */
    public version: number;

    /**
     * Creates a new mahjong_cl_get_miniGame_by_id_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_miniGame_by_id_req instance
     */
    public static create(properties?: Imahjong_cl_get_miniGame_by_id_req): mahjong_cl_get_miniGame_by_id_req;

    /**
     * Encodes the specified mahjong_cl_get_miniGame_by_id_req message. Does not implicitly {@link mahjong_cl_get_miniGame_by_id_req.verify|verify} messages.
     * @param message mahjong_cl_get_miniGame_by_id_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_miniGame_by_id_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_miniGame_by_id_req message, length delimited. Does not implicitly {@link mahjong_cl_get_miniGame_by_id_req.verify|verify} messages.
     * @param message mahjong_cl_get_miniGame_by_id_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_miniGame_by_id_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_miniGame_by_id_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_miniGame_by_id_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_miniGame_by_id_req;

    /**
     * Decodes a mahjong_cl_get_miniGame_by_id_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_miniGame_by_id_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_miniGame_by_id_req;

    /**
     * Verifies a mahjong_cl_get_miniGame_by_id_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_miniGame_by_id_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_miniGame_by_id_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_miniGame_by_id_req;

    /**
     * Creates a plain object from a mahjong_cl_get_miniGame_by_id_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_miniGame_by_id_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_miniGame_by_id_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_miniGame_by_id_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_end_chat_ack. */
export interface Imahjong_lc_end_chat_ack {

    /** mahjong_lc_end_chat_ack ret */
    ret: number;
}

/** Represents a mahjong_lc_end_chat_ack. */
export class mahjong_lc_end_chat_ack implements Imahjong_lc_end_chat_ack {

    /**
     * Constructs a new mahjong_lc_end_chat_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_end_chat_ack);

    /** mahjong_lc_end_chat_ack ret. */
    public ret: number;

    /**
     * Creates a new mahjong_lc_end_chat_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_end_chat_ack instance
     */
    public static create(properties?: Imahjong_lc_end_chat_ack): mahjong_lc_end_chat_ack;

    /**
     * Encodes the specified mahjong_lc_end_chat_ack message. Does not implicitly {@link mahjong_lc_end_chat_ack.verify|verify} messages.
     * @param message mahjong_lc_end_chat_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_end_chat_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_end_chat_ack message, length delimited. Does not implicitly {@link mahjong_lc_end_chat_ack.verify|verify} messages.
     * @param message mahjong_lc_end_chat_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_end_chat_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_end_chat_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_end_chat_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_end_chat_ack;

    /**
     * Decodes a mahjong_lc_end_chat_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_end_chat_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_end_chat_ack;

    /**
     * Verifies a mahjong_lc_end_chat_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_end_chat_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_end_chat_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_end_chat_ack;

    /**
     * Creates a plain object from a mahjong_lc_end_chat_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_end_chat_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_end_chat_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_end_chat_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_ready_ack. */
export interface Imahjong_bc_ready_ack {

    /** mahjong_bc_ready_ack ret */
    ret: number;
}

/** Represents a mahjong_bc_ready_ack. */
export class mahjong_bc_ready_ack implements Imahjong_bc_ready_ack {

    /**
     * Constructs a new mahjong_bc_ready_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_ready_ack);

    /** mahjong_bc_ready_ack ret. */
    public ret: number;

    /**
     * Creates a new mahjong_bc_ready_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_ready_ack instance
     */
    public static create(properties?: Imahjong_bc_ready_ack): mahjong_bc_ready_ack;

    /**
     * Encodes the specified mahjong_bc_ready_ack message. Does not implicitly {@link mahjong_bc_ready_ack.verify|verify} messages.
     * @param message mahjong_bc_ready_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_ready_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_ready_ack message, length delimited. Does not implicitly {@link mahjong_bc_ready_ack.verify|verify} messages.
     * @param message mahjong_bc_ready_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_ready_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_ready_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_ready_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_ready_ack;

    /**
     * Decodes a mahjong_bc_ready_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_ready_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_ready_ack;

    /**
     * Verifies a mahjong_bc_ready_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_ready_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_ready_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_ready_ack;

    /**
     * Creates a plain object from a mahjong_bc_ready_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_ready_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_ready_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_ready_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_set_user_signin_days_req. */
export interface Imahjong_cl_set_user_signin_days_req {

    /** mahjong_cl_set_user_signin_days_req day */
    day: number;
}

/** Represents a mahjong_cl_set_user_signin_days_req. */
export class mahjong_cl_set_user_signin_days_req implements Imahjong_cl_set_user_signin_days_req {

    /**
     * Constructs a new mahjong_cl_set_user_signin_days_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_set_user_signin_days_req);

    /** mahjong_cl_set_user_signin_days_req day. */
    public day: number;

    /**
     * Creates a new mahjong_cl_set_user_signin_days_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_set_user_signin_days_req instance
     */
    public static create(properties?: Imahjong_cl_set_user_signin_days_req): mahjong_cl_set_user_signin_days_req;

    /**
     * Encodes the specified mahjong_cl_set_user_signin_days_req message. Does not implicitly {@link mahjong_cl_set_user_signin_days_req.verify|verify} messages.
     * @param message mahjong_cl_set_user_signin_days_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_set_user_signin_days_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_set_user_signin_days_req message, length delimited. Does not implicitly {@link mahjong_cl_set_user_signin_days_req.verify|verify} messages.
     * @param message mahjong_cl_set_user_signin_days_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_set_user_signin_days_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_set_user_signin_days_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_set_user_signin_days_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_set_user_signin_days_req;

    /**
     * Decodes a mahjong_cl_set_user_signin_days_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_set_user_signin_days_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_set_user_signin_days_req;

    /**
     * Verifies a mahjong_cl_set_user_signin_days_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_set_user_signin_days_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_set_user_signin_days_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_set_user_signin_days_req;

    /**
     * Creates a plain object from a mahjong_cl_set_user_signin_days_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_set_user_signin_days_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_set_user_signin_days_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_set_user_signin_days_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_OnlineAwardItems. */
export interface Imahjong_OnlineAwardItems {

    /** mahjong_OnlineAwardItems awardTime */
    awardTime: number;

    /** mahjong_OnlineAwardItems moneyAward */
    moneyAward: number;
}

/** Represents a mahjong_OnlineAwardItems. */
export class mahjong_OnlineAwardItems implements Imahjong_OnlineAwardItems {

    /**
     * Constructs a new mahjong_OnlineAwardItems.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_OnlineAwardItems);

    /** mahjong_OnlineAwardItems awardTime. */
    public awardTime: number;

    /** mahjong_OnlineAwardItems moneyAward. */
    public moneyAward: number;

    /**
     * Creates a new mahjong_OnlineAwardItems instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_OnlineAwardItems instance
     */
    public static create(properties?: Imahjong_OnlineAwardItems): mahjong_OnlineAwardItems;

    /**
     * Encodes the specified mahjong_OnlineAwardItems message. Does not implicitly {@link mahjong_OnlineAwardItems.verify|verify} messages.
     * @param message mahjong_OnlineAwardItems message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_OnlineAwardItems, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_OnlineAwardItems message, length delimited. Does not implicitly {@link mahjong_OnlineAwardItems.verify|verify} messages.
     * @param message mahjong_OnlineAwardItems message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_OnlineAwardItems, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_OnlineAwardItems message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_OnlineAwardItems
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_OnlineAwardItems;

    /**
     * Decodes a mahjong_OnlineAwardItems message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_OnlineAwardItems
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_OnlineAwardItems;

    /**
     * Verifies a mahjong_OnlineAwardItems message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_OnlineAwardItems message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_OnlineAwardItems
     */
    public static fromObject(object: { [k: string]: any }): mahjong_OnlineAwardItems;

    /**
     * Creates a plain object from a mahjong_OnlineAwardItems message. Also converts values to other types if specified.
     * @param message mahjong_OnlineAwardItems
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_OnlineAwardItems, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_OnlineAwardItems to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_send_ply_position_info_req. */
export interface Imahjong_cl_send_ply_position_info_req {

    /** mahjong_cl_send_ply_position_info_req plyGuid */
    plyGuid: (number|Long);

    /** mahjong_cl_send_ply_position_info_req latitude */
    latitude: number;

    /** mahjong_cl_send_ply_position_info_req longitude */
    longitude: number;
}

/** Represents a mahjong_cl_send_ply_position_info_req. */
export class mahjong_cl_send_ply_position_info_req implements Imahjong_cl_send_ply_position_info_req {

    /**
     * Constructs a new mahjong_cl_send_ply_position_info_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_send_ply_position_info_req);

    /** mahjong_cl_send_ply_position_info_req plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_cl_send_ply_position_info_req latitude. */
    public latitude: number;

    /** mahjong_cl_send_ply_position_info_req longitude. */
    public longitude: number;

    /**
     * Creates a new mahjong_cl_send_ply_position_info_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_send_ply_position_info_req instance
     */
    public static create(properties?: Imahjong_cl_send_ply_position_info_req): mahjong_cl_send_ply_position_info_req;

    /**
     * Encodes the specified mahjong_cl_send_ply_position_info_req message. Does not implicitly {@link mahjong_cl_send_ply_position_info_req.verify|verify} messages.
     * @param message mahjong_cl_send_ply_position_info_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_send_ply_position_info_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_send_ply_position_info_req message, length delimited. Does not implicitly {@link mahjong_cl_send_ply_position_info_req.verify|verify} messages.
     * @param message mahjong_cl_send_ply_position_info_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_send_ply_position_info_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_send_ply_position_info_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_send_ply_position_info_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_send_ply_position_info_req;

    /**
     * Decodes a mahjong_cl_send_ply_position_info_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_send_ply_position_info_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_send_ply_position_info_req;

    /**
     * Verifies a mahjong_cl_send_ply_position_info_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_send_ply_position_info_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_send_ply_position_info_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_send_ply_position_info_req;

    /**
     * Creates a plain object from a mahjong_cl_send_ply_position_info_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_send_ply_position_info_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_send_ply_position_info_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_send_ply_position_info_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_create_table_req. */
export interface Imahjong_cb_create_table_req {

    /** mahjong_cb_create_table_req name */
    name: string;

    /** mahjong_cb_create_table_req password */
    password: string;

    /** mahjong_cb_create_table_req baseScore */
    baseScore: number;

    /** mahjong_cb_create_table_req tableTime */
    tableTime: number;

    /** mahjong_cb_create_table_req flag */
    flag: number;

    /** mahjong_cb_create_table_req gameRule */
    gameRule: number;

    /** mahjong_cb_create_table_req initScore */
    initScore: number;

    /** mahjong_cb_create_table_req gameRuleGroup */
    gameRuleGroup?: (number[]|null);

    /** mahjong_cb_create_table_req gameJson */
    gameJson: string;

    /** mahjong_cb_create_table_req mode */
    mode: number;

    /** mahjong_cb_create_table_req clubUid */
    clubUid: number;

    /** mahjong_cb_create_table_req tinyJson */
    tinyJson: string;

    /** mahjong_cb_create_table_req clubRuleId */
    clubRuleId: number;
}

/** Represents a mahjong_cb_create_table_req. */
export class mahjong_cb_create_table_req implements Imahjong_cb_create_table_req {

    /**
     * Constructs a new mahjong_cb_create_table_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_create_table_req);

    /** mahjong_cb_create_table_req name. */
    public name: string;

    /** mahjong_cb_create_table_req password. */
    public password: string;

    /** mahjong_cb_create_table_req baseScore. */
    public baseScore: number;

    /** mahjong_cb_create_table_req tableTime. */
    public tableTime: number;

    /** mahjong_cb_create_table_req flag. */
    public flag: number;

    /** mahjong_cb_create_table_req gameRule. */
    public gameRule: number;

    /** mahjong_cb_create_table_req initScore. */
    public initScore: number;

    /** mahjong_cb_create_table_req gameRuleGroup. */
    public gameRuleGroup: number[];

    /** mahjong_cb_create_table_req gameJson. */
    public gameJson: string;

    /** mahjong_cb_create_table_req mode. */
    public mode: number;

    /** mahjong_cb_create_table_req clubUid. */
    public clubUid: number;

    /** mahjong_cb_create_table_req tinyJson. */
    public tinyJson: string;

    /** mahjong_cb_create_table_req clubRuleId. */
    public clubRuleId: number;

    /**
     * Creates a new mahjong_cb_create_table_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_create_table_req instance
     */
    public static create(properties?: Imahjong_cb_create_table_req): mahjong_cb_create_table_req;

    /**
     * Encodes the specified mahjong_cb_create_table_req message. Does not implicitly {@link mahjong_cb_create_table_req.verify|verify} messages.
     * @param message mahjong_cb_create_table_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_create_table_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_create_table_req message, length delimited. Does not implicitly {@link mahjong_cb_create_table_req.verify|verify} messages.
     * @param message mahjong_cb_create_table_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_create_table_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_create_table_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_create_table_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_create_table_req;

    /**
     * Decodes a mahjong_cb_create_table_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_create_table_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_create_table_req;

    /**
     * Verifies a mahjong_cb_create_table_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_create_table_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_create_table_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_create_table_req;

    /**
     * Creates a plain object from a mahjong_cb_create_table_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_create_table_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_create_table_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_create_table_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_send_disconnect_req. */
export interface Imahjong_cb_send_disconnect_req {
}

/** Represents a mahjong_cb_send_disconnect_req. */
export class mahjong_cb_send_disconnect_req implements Imahjong_cb_send_disconnect_req {

    /**
     * Constructs a new mahjong_cb_send_disconnect_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_send_disconnect_req);

    /**
     * Creates a new mahjong_cb_send_disconnect_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_send_disconnect_req instance
     */
    public static create(properties?: Imahjong_cb_send_disconnect_req): mahjong_cb_send_disconnect_req;

    /**
     * Encodes the specified mahjong_cb_send_disconnect_req message. Does not implicitly {@link mahjong_cb_send_disconnect_req.verify|verify} messages.
     * @param message mahjong_cb_send_disconnect_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_send_disconnect_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_send_disconnect_req message, length delimited. Does not implicitly {@link mahjong_cb_send_disconnect_req.verify|verify} messages.
     * @param message mahjong_cb_send_disconnect_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_send_disconnect_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_send_disconnect_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_send_disconnect_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_send_disconnect_req;

    /**
     * Decodes a mahjong_cb_send_disconnect_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_send_disconnect_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_send_disconnect_req;

    /**
     * Verifies a mahjong_cb_send_disconnect_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_send_disconnect_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_send_disconnect_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_send_disconnect_req;

    /**
     * Creates a plain object from a mahjong_cb_send_disconnect_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_send_disconnect_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_send_disconnect_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_send_disconnect_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_user_accumulate_signin_days_ack. */
export interface Imahjong_lc_get_user_accumulate_signin_days_ack {

    /** mahjong_lc_get_user_accumulate_signin_days_ack ret */
    ret: number;

    /** mahjong_lc_get_user_accumulate_signin_days_ack signinInfo */
    signinInfo: Imahjong_AccumulateSigninInfo;
}

/** Represents a mahjong_lc_get_user_accumulate_signin_days_ack. */
export class mahjong_lc_get_user_accumulate_signin_days_ack implements Imahjong_lc_get_user_accumulate_signin_days_ack {

    /**
     * Constructs a new mahjong_lc_get_user_accumulate_signin_days_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_user_accumulate_signin_days_ack);

    /** mahjong_lc_get_user_accumulate_signin_days_ack ret. */
    public ret: number;

    /** mahjong_lc_get_user_accumulate_signin_days_ack signinInfo. */
    public signinInfo: Imahjong_AccumulateSigninInfo;

    /**
     * Creates a new mahjong_lc_get_user_accumulate_signin_days_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_user_accumulate_signin_days_ack instance
     */
    public static create(properties?: Imahjong_lc_get_user_accumulate_signin_days_ack): mahjong_lc_get_user_accumulate_signin_days_ack;

    /**
     * Encodes the specified mahjong_lc_get_user_accumulate_signin_days_ack message. Does not implicitly {@link mahjong_lc_get_user_accumulate_signin_days_ack.verify|verify} messages.
     * @param message mahjong_lc_get_user_accumulate_signin_days_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_user_accumulate_signin_days_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_user_accumulate_signin_days_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_user_accumulate_signin_days_ack.verify|verify} messages.
     * @param message mahjong_lc_get_user_accumulate_signin_days_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_user_accumulate_signin_days_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_user_accumulate_signin_days_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_user_accumulate_signin_days_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_user_accumulate_signin_days_ack;

    /**
     * Decodes a mahjong_lc_get_user_accumulate_signin_days_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_user_accumulate_signin_days_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_user_accumulate_signin_days_ack;

    /**
     * Verifies a mahjong_lc_get_user_accumulate_signin_days_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_user_accumulate_signin_days_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_user_accumulate_signin_days_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_user_accumulate_signin_days_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_user_accumulate_signin_days_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_user_accumulate_signin_days_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_user_accumulate_signin_days_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_user_accumulate_signin_days_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_web_socket_shake_hand_req. */
export interface Imahjong_cb_web_socket_shake_hand_req {

    /** mahjong_cb_web_socket_shake_hand_req webSocketKey */
    webSocketKey: string;
}

/** Represents a mahjong_cb_web_socket_shake_hand_req. */
export class mahjong_cb_web_socket_shake_hand_req implements Imahjong_cb_web_socket_shake_hand_req {

    /**
     * Constructs a new mahjong_cb_web_socket_shake_hand_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_web_socket_shake_hand_req);

    /** mahjong_cb_web_socket_shake_hand_req webSocketKey. */
    public webSocketKey: string;

    /**
     * Creates a new mahjong_cb_web_socket_shake_hand_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_web_socket_shake_hand_req instance
     */
    public static create(properties?: Imahjong_cb_web_socket_shake_hand_req): mahjong_cb_web_socket_shake_hand_req;

    /**
     * Encodes the specified mahjong_cb_web_socket_shake_hand_req message. Does not implicitly {@link mahjong_cb_web_socket_shake_hand_req.verify|verify} messages.
     * @param message mahjong_cb_web_socket_shake_hand_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_web_socket_shake_hand_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_web_socket_shake_hand_req message, length delimited. Does not implicitly {@link mahjong_cb_web_socket_shake_hand_req.verify|verify} messages.
     * @param message mahjong_cb_web_socket_shake_hand_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_web_socket_shake_hand_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_web_socket_shake_hand_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_web_socket_shake_hand_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_web_socket_shake_hand_req;

    /**
     * Decodes a mahjong_cb_web_socket_shake_hand_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_web_socket_shake_hand_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_web_socket_shake_hand_req;

    /**
     * Verifies a mahjong_cb_web_socket_shake_hand_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_web_socket_shake_hand_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_web_socket_shake_hand_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_web_socket_shake_hand_req;

    /**
     * Creates a plain object from a mahjong_cb_web_socket_shake_hand_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_web_socket_shake_hand_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_web_socket_shake_hand_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_web_socket_shake_hand_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_set_user_accumulate_signin_days_req. */
export interface Imahjong_cl_set_user_accumulate_signin_days_req {

    /** mahjong_cl_set_user_accumulate_signin_days_req day */
    day: number;
}

/** Represents a mahjong_cl_set_user_accumulate_signin_days_req. */
export class mahjong_cl_set_user_accumulate_signin_days_req implements Imahjong_cl_set_user_accumulate_signin_days_req {

    /**
     * Constructs a new mahjong_cl_set_user_accumulate_signin_days_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_set_user_accumulate_signin_days_req);

    /** mahjong_cl_set_user_accumulate_signin_days_req day. */
    public day: number;

    /**
     * Creates a new mahjong_cl_set_user_accumulate_signin_days_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_set_user_accumulate_signin_days_req instance
     */
    public static create(properties?: Imahjong_cl_set_user_accumulate_signin_days_req): mahjong_cl_set_user_accumulate_signin_days_req;

    /**
     * Encodes the specified mahjong_cl_set_user_accumulate_signin_days_req message. Does not implicitly {@link mahjong_cl_set_user_accumulate_signin_days_req.verify|verify} messages.
     * @param message mahjong_cl_set_user_accumulate_signin_days_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_set_user_accumulate_signin_days_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_set_user_accumulate_signin_days_req message, length delimited. Does not implicitly {@link mahjong_cl_set_user_accumulate_signin_days_req.verify|verify} messages.
     * @param message mahjong_cl_set_user_accumulate_signin_days_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_set_user_accumulate_signin_days_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_set_user_accumulate_signin_days_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_set_user_accumulate_signin_days_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_set_user_accumulate_signin_days_req;

    /**
     * Decodes a mahjong_cl_set_user_accumulate_signin_days_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_set_user_accumulate_signin_days_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_set_user_accumulate_signin_days_req;

    /**
     * Verifies a mahjong_cl_set_user_accumulate_signin_days_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_set_user_accumulate_signin_days_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_set_user_accumulate_signin_days_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_set_user_accumulate_signin_days_req;

    /**
     * Creates a plain object from a mahjong_cl_set_user_accumulate_signin_days_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_set_user_accumulate_signin_days_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_set_user_accumulate_signin_days_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_set_user_accumulate_signin_days_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_get_luck_draw_record_ack. */
export interface Imahjong_bc_get_luck_draw_record_ack {

    /** mahjong_bc_get_luck_draw_record_ack ret */
    ret: number;

    /** mahjong_bc_get_luck_draw_record_ack index */
    index: number;

    /** mahjong_bc_get_luck_draw_record_ack num */
    num: number;
}

/** Represents a mahjong_bc_get_luck_draw_record_ack. */
export class mahjong_bc_get_luck_draw_record_ack implements Imahjong_bc_get_luck_draw_record_ack {

    /**
     * Constructs a new mahjong_bc_get_luck_draw_record_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_get_luck_draw_record_ack);

    /** mahjong_bc_get_luck_draw_record_ack ret. */
    public ret: number;

    /** mahjong_bc_get_luck_draw_record_ack index. */
    public index: number;

    /** mahjong_bc_get_luck_draw_record_ack num. */
    public num: number;

    /**
     * Creates a new mahjong_bc_get_luck_draw_record_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_get_luck_draw_record_ack instance
     */
    public static create(properties?: Imahjong_bc_get_luck_draw_record_ack): mahjong_bc_get_luck_draw_record_ack;

    /**
     * Encodes the specified mahjong_bc_get_luck_draw_record_ack message. Does not implicitly {@link mahjong_bc_get_luck_draw_record_ack.verify|verify} messages.
     * @param message mahjong_bc_get_luck_draw_record_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_get_luck_draw_record_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_get_luck_draw_record_ack message, length delimited. Does not implicitly {@link mahjong_bc_get_luck_draw_record_ack.verify|verify} messages.
     * @param message mahjong_bc_get_luck_draw_record_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_get_luck_draw_record_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_get_luck_draw_record_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_get_luck_draw_record_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_get_luck_draw_record_ack;

    /**
     * Decodes a mahjong_bc_get_luck_draw_record_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_get_luck_draw_record_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_get_luck_draw_record_ack;

    /**
     * Verifies a mahjong_bc_get_luck_draw_record_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_get_luck_draw_record_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_get_luck_draw_record_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_get_luck_draw_record_ack;

    /**
     * Creates a plain object from a mahjong_bc_get_luck_draw_record_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_get_luck_draw_record_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_get_luck_draw_record_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_get_luck_draw_record_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_CommonAwardData. */
export interface Imahjong_CommonAwardData {

    /** mahjong_CommonAwardData fanNum */
    fanNum: number;

    /** mahjong_CommonAwardData fanType */
    fanType: number;

    /** mahjong_CommonAwardData contVictory */
    contVictory: number;

    /** mahjong_CommonAwardData cardUsedTimes */
    cardUsedTimes: number;
}

/** Represents a mahjong_CommonAwardData. */
export class mahjong_CommonAwardData implements Imahjong_CommonAwardData {

    /**
     * Constructs a new mahjong_CommonAwardData.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_CommonAwardData);

    /** mahjong_CommonAwardData fanNum. */
    public fanNum: number;

    /** mahjong_CommonAwardData fanType. */
    public fanType: number;

    /** mahjong_CommonAwardData contVictory. */
    public contVictory: number;

    /** mahjong_CommonAwardData cardUsedTimes. */
    public cardUsedTimes: number;

    /**
     * Creates a new mahjong_CommonAwardData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_CommonAwardData instance
     */
    public static create(properties?: Imahjong_CommonAwardData): mahjong_CommonAwardData;

    /**
     * Encodes the specified mahjong_CommonAwardData message. Does not implicitly {@link mahjong_CommonAwardData.verify|verify} messages.
     * @param message mahjong_CommonAwardData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_CommonAwardData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_CommonAwardData message, length delimited. Does not implicitly {@link mahjong_CommonAwardData.verify|verify} messages.
     * @param message mahjong_CommonAwardData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_CommonAwardData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_CommonAwardData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_CommonAwardData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_CommonAwardData;

    /**
     * Decodes a mahjong_CommonAwardData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_CommonAwardData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_CommonAwardData;

    /**
     * Verifies a mahjong_CommonAwardData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_CommonAwardData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_CommonAwardData
     */
    public static fromObject(object: { [k: string]: any }): mahjong_CommonAwardData;

    /**
     * Creates a plain object from a mahjong_CommonAwardData message. Also converts values to other types if specified.
     * @param message mahjong_CommonAwardData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_CommonAwardData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_CommonAwardData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_ServerKeyInfo. */
export interface Imahjong_ServerKeyInfo {

    /** mahjong_ServerKeyInfo gameId */
    gameId: number;

    /** mahjong_ServerKeyInfo packetName */
    packetName: string;

    /** mahjong_ServerKeyInfo version */
    version: number;
}

/** Represents a mahjong_ServerKeyInfo. */
export class mahjong_ServerKeyInfo implements Imahjong_ServerKeyInfo {

    /**
     * Constructs a new mahjong_ServerKeyInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_ServerKeyInfo);

    /** mahjong_ServerKeyInfo gameId. */
    public gameId: number;

    /** mahjong_ServerKeyInfo packetName. */
    public packetName: string;

    /** mahjong_ServerKeyInfo version. */
    public version: number;

    /**
     * Creates a new mahjong_ServerKeyInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_ServerKeyInfo instance
     */
    public static create(properties?: Imahjong_ServerKeyInfo): mahjong_ServerKeyInfo;

    /**
     * Encodes the specified mahjong_ServerKeyInfo message. Does not implicitly {@link mahjong_ServerKeyInfo.verify|verify} messages.
     * @param message mahjong_ServerKeyInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_ServerKeyInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_ServerKeyInfo message, length delimited. Does not implicitly {@link mahjong_ServerKeyInfo.verify|verify} messages.
     * @param message mahjong_ServerKeyInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_ServerKeyInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_ServerKeyInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_ServerKeyInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_ServerKeyInfo;

    /**
     * Decodes a mahjong_ServerKeyInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_ServerKeyInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_ServerKeyInfo;

    /**
     * Verifies a mahjong_ServerKeyInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_ServerKeyInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_ServerKeyInfo
     */
    public static fromObject(object: { [k: string]: any }): mahjong_ServerKeyInfo;

    /**
     * Creates a plain object from a mahjong_ServerKeyInfo message. Also converts values to other types if specified.
     * @param message mahjong_ServerKeyInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_ServerKeyInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_ServerKeyInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_continuous_landing_reward_data_req. */
export interface Imahjong_cl_continuous_landing_reward_data_req {

    /** mahjong_cl_continuous_landing_reward_data_req gameId */
    gameId: number;
}

/** Represents a mahjong_cl_continuous_landing_reward_data_req. */
export class mahjong_cl_continuous_landing_reward_data_req implements Imahjong_cl_continuous_landing_reward_data_req {

    /**
     * Constructs a new mahjong_cl_continuous_landing_reward_data_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_continuous_landing_reward_data_req);

    /** mahjong_cl_continuous_landing_reward_data_req gameId. */
    public gameId: number;

    /**
     * Creates a new mahjong_cl_continuous_landing_reward_data_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_continuous_landing_reward_data_req instance
     */
    public static create(properties?: Imahjong_cl_continuous_landing_reward_data_req): mahjong_cl_continuous_landing_reward_data_req;

    /**
     * Encodes the specified mahjong_cl_continuous_landing_reward_data_req message. Does not implicitly {@link mahjong_cl_continuous_landing_reward_data_req.verify|verify} messages.
     * @param message mahjong_cl_continuous_landing_reward_data_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_continuous_landing_reward_data_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_continuous_landing_reward_data_req message, length delimited. Does not implicitly {@link mahjong_cl_continuous_landing_reward_data_req.verify|verify} messages.
     * @param message mahjong_cl_continuous_landing_reward_data_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_continuous_landing_reward_data_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_continuous_landing_reward_data_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_continuous_landing_reward_data_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_continuous_landing_reward_data_req;

    /**
     * Decodes a mahjong_cl_continuous_landing_reward_data_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_continuous_landing_reward_data_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_continuous_landing_reward_data_req;

    /**
     * Verifies a mahjong_cl_continuous_landing_reward_data_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_continuous_landing_reward_data_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_continuous_landing_reward_data_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_continuous_landing_reward_data_req;

    /**
     * Creates a plain object from a mahjong_cl_continuous_landing_reward_data_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_continuous_landing_reward_data_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_continuous_landing_reward_data_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_continuous_landing_reward_data_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_all_frd_feel_value_req. */
export interface Imahjong_cl_get_all_frd_feel_value_req {
}

/** Represents a mahjong_cl_get_all_frd_feel_value_req. */
export class mahjong_cl_get_all_frd_feel_value_req implements Imahjong_cl_get_all_frd_feel_value_req {

    /**
     * Constructs a new mahjong_cl_get_all_frd_feel_value_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_all_frd_feel_value_req);

    /**
     * Creates a new mahjong_cl_get_all_frd_feel_value_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_all_frd_feel_value_req instance
     */
    public static create(properties?: Imahjong_cl_get_all_frd_feel_value_req): mahjong_cl_get_all_frd_feel_value_req;

    /**
     * Encodes the specified mahjong_cl_get_all_frd_feel_value_req message. Does not implicitly {@link mahjong_cl_get_all_frd_feel_value_req.verify|verify} messages.
     * @param message mahjong_cl_get_all_frd_feel_value_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_all_frd_feel_value_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_all_frd_feel_value_req message, length delimited. Does not implicitly {@link mahjong_cl_get_all_frd_feel_value_req.verify|verify} messages.
     * @param message mahjong_cl_get_all_frd_feel_value_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_all_frd_feel_value_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_all_frd_feel_value_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_all_frd_feel_value_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_all_frd_feel_value_req;

    /**
     * Decodes a mahjong_cl_get_all_frd_feel_value_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_all_frd_feel_value_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_all_frd_feel_value_req;

    /**
     * Verifies a mahjong_cl_get_all_frd_feel_value_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_all_frd_feel_value_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_all_frd_feel_value_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_all_frd_feel_value_req;

    /**
     * Creates a plain object from a mahjong_cl_get_all_frd_feel_value_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_all_frd_feel_value_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_all_frd_feel_value_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_all_frd_feel_value_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_get_mahjong_quick_daily_task_data_req. */
export interface Imahjong_cb_get_mahjong_quick_daily_task_data_req {
}

/** Represents a mahjong_cb_get_mahjong_quick_daily_task_data_req. */
export class mahjong_cb_get_mahjong_quick_daily_task_data_req implements Imahjong_cb_get_mahjong_quick_daily_task_data_req {

    /**
     * Constructs a new mahjong_cb_get_mahjong_quick_daily_task_data_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_get_mahjong_quick_daily_task_data_req);

    /**
     * Creates a new mahjong_cb_get_mahjong_quick_daily_task_data_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_get_mahjong_quick_daily_task_data_req instance
     */
    public static create(properties?: Imahjong_cb_get_mahjong_quick_daily_task_data_req): mahjong_cb_get_mahjong_quick_daily_task_data_req;

    /**
     * Encodes the specified mahjong_cb_get_mahjong_quick_daily_task_data_req message. Does not implicitly {@link mahjong_cb_get_mahjong_quick_daily_task_data_req.verify|verify} messages.
     * @param message mahjong_cb_get_mahjong_quick_daily_task_data_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_get_mahjong_quick_daily_task_data_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_get_mahjong_quick_daily_task_data_req message, length delimited. Does not implicitly {@link mahjong_cb_get_mahjong_quick_daily_task_data_req.verify|verify} messages.
     * @param message mahjong_cb_get_mahjong_quick_daily_task_data_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_get_mahjong_quick_daily_task_data_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_get_mahjong_quick_daily_task_data_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_get_mahjong_quick_daily_task_data_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_get_mahjong_quick_daily_task_data_req;

    /**
     * Decodes a mahjong_cb_get_mahjong_quick_daily_task_data_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_get_mahjong_quick_daily_task_data_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_get_mahjong_quick_daily_task_data_req;

    /**
     * Verifies a mahjong_cb_get_mahjong_quick_daily_task_data_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_get_mahjong_quick_daily_task_data_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_get_mahjong_quick_daily_task_data_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_get_mahjong_quick_daily_task_data_req;

    /**
     * Creates a plain object from a mahjong_cb_get_mahjong_quick_daily_task_data_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_get_mahjong_quick_daily_task_data_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_get_mahjong_quick_daily_task_data_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_get_mahjong_quick_daily_task_data_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_create_table_ack. */
export interface Imahjong_bc_create_table_ack {

    /** mahjong_bc_create_table_ack ret */
    ret: number;

    /** mahjong_bc_create_table_ack tableAttrs */
    tableAttrs: Imahjong_TableAttr;

    /** mahjong_bc_create_table_ack errMsg */
    errMsg: string;
}

/** Represents a mahjong_bc_create_table_ack. */
export class mahjong_bc_create_table_ack implements Imahjong_bc_create_table_ack {

    /**
     * Constructs a new mahjong_bc_create_table_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_create_table_ack);

    /** mahjong_bc_create_table_ack ret. */
    public ret: number;

    /** mahjong_bc_create_table_ack tableAttrs. */
    public tableAttrs: Imahjong_TableAttr;

    /** mahjong_bc_create_table_ack errMsg. */
    public errMsg: string;

    /**
     * Creates a new mahjong_bc_create_table_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_create_table_ack instance
     */
    public static create(properties?: Imahjong_bc_create_table_ack): mahjong_bc_create_table_ack;

    /**
     * Encodes the specified mahjong_bc_create_table_ack message. Does not implicitly {@link mahjong_bc_create_table_ack.verify|verify} messages.
     * @param message mahjong_bc_create_table_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_create_table_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_create_table_ack message, length delimited. Does not implicitly {@link mahjong_bc_create_table_ack.verify|verify} messages.
     * @param message mahjong_bc_create_table_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_create_table_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_create_table_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_create_table_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_create_table_ack;

    /**
     * Decodes a mahjong_bc_create_table_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_create_table_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_create_table_ack;

    /**
     * Verifies a mahjong_bc_create_table_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_create_table_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_create_table_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_create_table_ack;

    /**
     * Creates a plain object from a mahjong_bc_create_table_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_create_table_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_create_table_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_create_table_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_leave_table_ack2. */
export interface Imahjong_bc_leave_table_ack2 {

    /** mahjong_bc_leave_table_ack2 ret */
    ret: number;

    /** mahjong_bc_leave_table_ack2 plyNickname */
    plyNickname: string;

    /** mahjong_bc_leave_table_ack2 msg */
    msg: string;
}

/** Represents a mahjong_bc_leave_table_ack2. */
export class mahjong_bc_leave_table_ack2 implements Imahjong_bc_leave_table_ack2 {

    /**
     * Constructs a new mahjong_bc_leave_table_ack2.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_leave_table_ack2);

    /** mahjong_bc_leave_table_ack2 ret. */
    public ret: number;

    /** mahjong_bc_leave_table_ack2 plyNickname. */
    public plyNickname: string;

    /** mahjong_bc_leave_table_ack2 msg. */
    public msg: string;

    /**
     * Creates a new mahjong_bc_leave_table_ack2 instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_leave_table_ack2 instance
     */
    public static create(properties?: Imahjong_bc_leave_table_ack2): mahjong_bc_leave_table_ack2;

    /**
     * Encodes the specified mahjong_bc_leave_table_ack2 message. Does not implicitly {@link mahjong_bc_leave_table_ack2.verify|verify} messages.
     * @param message mahjong_bc_leave_table_ack2 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_leave_table_ack2, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_leave_table_ack2 message, length delimited. Does not implicitly {@link mahjong_bc_leave_table_ack2.verify|verify} messages.
     * @param message mahjong_bc_leave_table_ack2 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_leave_table_ack2, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_leave_table_ack2 message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_leave_table_ack2
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_leave_table_ack2;

    /**
     * Decodes a mahjong_bc_leave_table_ack2 message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_leave_table_ack2
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_leave_table_ack2;

    /**
     * Verifies a mahjong_bc_leave_table_ack2 message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_leave_table_ack2 message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_leave_table_ack2
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_leave_table_ack2;

    /**
     * Creates a plain object from a mahjong_bc_leave_table_ack2 message. Also converts values to other types if specified.
     * @param message mahjong_bc_leave_table_ack2
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_leave_table_ack2, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_leave_table_ack2 to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_TableProperty. */
export interface Imahjong_TableProperty {

    /** mahjong_TableProperty inviteCode */
    inviteCode: number;

    /** mahjong_TableProperty gameId */
    gameId: number;

    /** mahjong_TableProperty serverId */
    serverId: number;

    /** mahjong_TableProperty tableId */
    tableId: number;

    /** mahjong_TableProperty clubId */
    clubId: number;

    /** mahjong_TableProperty baseScore */
    baseScore: number;

    /** mahjong_TableProperty createTime */
    createTime: number;

    /** mahjong_TableProperty flag */
    flag: number;

    /** mahjong_TableProperty tableTime */
    tableTime: number;

    /** mahjong_TableProperty maxPlayerNum */
    maxPlayerNum: number;

    /** mahjong_TableProperty ownerGuid */
    ownerGuid: (number|Long);

    /** mahjong_TableProperty name */
    name: string;

    /** mahjong_TableProperty param */
    param: string;
}

/** Represents a mahjong_TableProperty. */
export class mahjong_TableProperty implements Imahjong_TableProperty {

    /**
     * Constructs a new mahjong_TableProperty.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_TableProperty);

    /** mahjong_TableProperty inviteCode. */
    public inviteCode: number;

    /** mahjong_TableProperty gameId. */
    public gameId: number;

    /** mahjong_TableProperty serverId. */
    public serverId: number;

    /** mahjong_TableProperty tableId. */
    public tableId: number;

    /** mahjong_TableProperty clubId. */
    public clubId: number;

    /** mahjong_TableProperty baseScore. */
    public baseScore: number;

    /** mahjong_TableProperty createTime. */
    public createTime: number;

    /** mahjong_TableProperty flag. */
    public flag: number;

    /** mahjong_TableProperty tableTime. */
    public tableTime: number;

    /** mahjong_TableProperty maxPlayerNum. */
    public maxPlayerNum: number;

    /** mahjong_TableProperty ownerGuid. */
    public ownerGuid: (number|Long);

    /** mahjong_TableProperty name. */
    public name: string;

    /** mahjong_TableProperty param. */
    public param: string;

    /**
     * Creates a new mahjong_TableProperty instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_TableProperty instance
     */
    public static create(properties?: Imahjong_TableProperty): mahjong_TableProperty;

    /**
     * Encodes the specified mahjong_TableProperty message. Does not implicitly {@link mahjong_TableProperty.verify|verify} messages.
     * @param message mahjong_TableProperty message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_TableProperty, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_TableProperty message, length delimited. Does not implicitly {@link mahjong_TableProperty.verify|verify} messages.
     * @param message mahjong_TableProperty message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_TableProperty, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_TableProperty message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_TableProperty
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_TableProperty;

    /**
     * Decodes a mahjong_TableProperty message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_TableProperty
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_TableProperty;

    /**
     * Verifies a mahjong_TableProperty message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_TableProperty message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_TableProperty
     */
    public static fromObject(object: { [k: string]: any }): mahjong_TableProperty;

    /**
     * Creates a plain object from a mahjong_TableProperty message. Also converts values to other types if specified.
     * @param message mahjong_TableProperty
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_TableProperty, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_TableProperty to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_send_friend_msg_not. */
export interface Imahjong_lc_send_friend_msg_not {

    /** mahjong_lc_send_friend_msg_not content */
    content?: (Imahjong_FriendMsg[]|null);
}

/** Represents a mahjong_lc_send_friend_msg_not. */
export class mahjong_lc_send_friend_msg_not implements Imahjong_lc_send_friend_msg_not {

    /**
     * Constructs a new mahjong_lc_send_friend_msg_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_send_friend_msg_not);

    /** mahjong_lc_send_friend_msg_not content. */
    public content: Imahjong_FriendMsg[];

    /**
     * Creates a new mahjong_lc_send_friend_msg_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_send_friend_msg_not instance
     */
    public static create(properties?: Imahjong_lc_send_friend_msg_not): mahjong_lc_send_friend_msg_not;

    /**
     * Encodes the specified mahjong_lc_send_friend_msg_not message. Does not implicitly {@link mahjong_lc_send_friend_msg_not.verify|verify} messages.
     * @param message mahjong_lc_send_friend_msg_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_send_friend_msg_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_send_friend_msg_not message, length delimited. Does not implicitly {@link mahjong_lc_send_friend_msg_not.verify|verify} messages.
     * @param message mahjong_lc_send_friend_msg_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_send_friend_msg_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_send_friend_msg_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_send_friend_msg_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_send_friend_msg_not;

    /**
     * Decodes a mahjong_lc_send_friend_msg_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_send_friend_msg_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_send_friend_msg_not;

    /**
     * Verifies a mahjong_lc_send_friend_msg_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_send_friend_msg_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_send_friend_msg_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_send_friend_msg_not;

    /**
     * Creates a plain object from a mahjong_lc_send_friend_msg_not message. Also converts values to other types if specified.
     * @param message mahjong_lc_send_friend_msg_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_send_friend_msg_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_send_friend_msg_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_user_level_exp_update_notf. */
export interface Imahjong_bc_user_level_exp_update_notf {

    /** mahjong_bc_user_level_exp_update_notf plyGuid */
    plyGuid: (number|Long);

    /** mahjong_bc_user_level_exp_update_notf level */
    level: number;

    /** mahjong_bc_user_level_exp_update_notf exp */
    exp: number;

    /** mahjong_bc_user_level_exp_update_notf expAdd */
    expAdd: number;

    /** mahjong_bc_user_level_exp_update_notf nextLevelExpNeed */
    nextLevelExpNeed: number;
}

/** Represents a mahjong_bc_user_level_exp_update_notf. */
export class mahjong_bc_user_level_exp_update_notf implements Imahjong_bc_user_level_exp_update_notf {

    /**
     * Constructs a new mahjong_bc_user_level_exp_update_notf.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_user_level_exp_update_notf);

    /** mahjong_bc_user_level_exp_update_notf plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_bc_user_level_exp_update_notf level. */
    public level: number;

    /** mahjong_bc_user_level_exp_update_notf exp. */
    public exp: number;

    /** mahjong_bc_user_level_exp_update_notf expAdd. */
    public expAdd: number;

    /** mahjong_bc_user_level_exp_update_notf nextLevelExpNeed. */
    public nextLevelExpNeed: number;

    /**
     * Creates a new mahjong_bc_user_level_exp_update_notf instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_user_level_exp_update_notf instance
     */
    public static create(properties?: Imahjong_bc_user_level_exp_update_notf): mahjong_bc_user_level_exp_update_notf;

    /**
     * Encodes the specified mahjong_bc_user_level_exp_update_notf message. Does not implicitly {@link mahjong_bc_user_level_exp_update_notf.verify|verify} messages.
     * @param message mahjong_bc_user_level_exp_update_notf message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_user_level_exp_update_notf, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_user_level_exp_update_notf message, length delimited. Does not implicitly {@link mahjong_bc_user_level_exp_update_notf.verify|verify} messages.
     * @param message mahjong_bc_user_level_exp_update_notf message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_user_level_exp_update_notf, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_user_level_exp_update_notf message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_user_level_exp_update_notf
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_user_level_exp_update_notf;

    /**
     * Decodes a mahjong_bc_user_level_exp_update_notf message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_user_level_exp_update_notf
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_user_level_exp_update_notf;

    /**
     * Verifies a mahjong_bc_user_level_exp_update_notf message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_user_level_exp_update_notf message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_user_level_exp_update_notf
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_user_level_exp_update_notf;

    /**
     * Creates a plain object from a mahjong_bc_user_level_exp_update_notf message. Also converts values to other types if specified.
     * @param message mahjong_bc_user_level_exp_update_notf
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_user_level_exp_update_notf, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_user_level_exp_update_notf to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_remove_safe_amount_ack. */
export interface Imahjong_lc_remove_safe_amount_ack {

    /** mahjong_lc_remove_safe_amount_ack ret */
    ret: number;

    /** mahjong_lc_remove_safe_amount_ack plyGuid */
    plyGuid: (number|Long);

    /** mahjong_lc_remove_safe_amount_ack amount */
    amount: (number|Long);

    /** mahjong_lc_remove_safe_amount_ack remainingSum */
    remainingSum: (number|Long);
}

/** Represents a mahjong_lc_remove_safe_amount_ack. */
export class mahjong_lc_remove_safe_amount_ack implements Imahjong_lc_remove_safe_amount_ack {

    /**
     * Constructs a new mahjong_lc_remove_safe_amount_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_remove_safe_amount_ack);

    /** mahjong_lc_remove_safe_amount_ack ret. */
    public ret: number;

    /** mahjong_lc_remove_safe_amount_ack plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_lc_remove_safe_amount_ack amount. */
    public amount: (number|Long);

    /** mahjong_lc_remove_safe_amount_ack remainingSum. */
    public remainingSum: (number|Long);

    /**
     * Creates a new mahjong_lc_remove_safe_amount_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_remove_safe_amount_ack instance
     */
    public static create(properties?: Imahjong_lc_remove_safe_amount_ack): mahjong_lc_remove_safe_amount_ack;

    /**
     * Encodes the specified mahjong_lc_remove_safe_amount_ack message. Does not implicitly {@link mahjong_lc_remove_safe_amount_ack.verify|verify} messages.
     * @param message mahjong_lc_remove_safe_amount_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_remove_safe_amount_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_remove_safe_amount_ack message, length delimited. Does not implicitly {@link mahjong_lc_remove_safe_amount_ack.verify|verify} messages.
     * @param message mahjong_lc_remove_safe_amount_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_remove_safe_amount_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_remove_safe_amount_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_remove_safe_amount_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_remove_safe_amount_ack;

    /**
     * Decodes a mahjong_lc_remove_safe_amount_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_remove_safe_amount_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_remove_safe_amount_ack;

    /**
     * Verifies a mahjong_lc_remove_safe_amount_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_remove_safe_amount_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_remove_safe_amount_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_remove_safe_amount_ack;

    /**
     * Creates a plain object from a mahjong_lc_remove_safe_amount_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_remove_safe_amount_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_remove_safe_amount_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_remove_safe_amount_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_do_tip_dila_req. */
export interface Imahjong_cb_do_tip_dila_req {

    /** mahjong_cb_do_tip_dila_req dilaCount */
    dilaCount: number;
}

/** Represents a mahjong_cb_do_tip_dila_req. */
export class mahjong_cb_do_tip_dila_req implements Imahjong_cb_do_tip_dila_req {

    /**
     * Constructs a new mahjong_cb_do_tip_dila_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_do_tip_dila_req);

    /** mahjong_cb_do_tip_dila_req dilaCount. */
    public dilaCount: number;

    /**
     * Creates a new mahjong_cb_do_tip_dila_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_do_tip_dila_req instance
     */
    public static create(properties?: Imahjong_cb_do_tip_dila_req): mahjong_cb_do_tip_dila_req;

    /**
     * Encodes the specified mahjong_cb_do_tip_dila_req message. Does not implicitly {@link mahjong_cb_do_tip_dila_req.verify|verify} messages.
     * @param message mahjong_cb_do_tip_dila_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_do_tip_dila_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_do_tip_dila_req message, length delimited. Does not implicitly {@link mahjong_cb_do_tip_dila_req.verify|verify} messages.
     * @param message mahjong_cb_do_tip_dila_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_do_tip_dila_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_do_tip_dila_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_do_tip_dila_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_do_tip_dila_req;

    /**
     * Decodes a mahjong_cb_do_tip_dila_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_do_tip_dila_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_do_tip_dila_req;

    /**
     * Verifies a mahjong_cb_do_tip_dila_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_do_tip_dila_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_do_tip_dila_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_do_tip_dila_req;

    /**
     * Creates a plain object from a mahjong_cb_do_tip_dila_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_do_tip_dila_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_do_tip_dila_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_do_tip_dila_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_ClubTableInfo. */
export interface Imahjong_ClubTableInfo {

    /** mahjong_ClubTableInfo inviteCode */
    inviteCode: number;

    /** mahjong_ClubTableInfo tableId */
    tableId: number;

    /** mahjong_ClubTableInfo name */
    name: string;

    /** mahjong_ClubTableInfo lock */
    lock: number;

    /** mahjong_ClubTableInfo plyGuids */
    plyGuids?: ((number|Long)[]|null);

    /** mahjong_ClubTableInfo clubUid */
    clubUid: number;

    /** mahjong_ClubTableInfo gameId */
    gameId: number;
}

/** Represents a mahjong_ClubTableInfo. */
export class mahjong_ClubTableInfo implements Imahjong_ClubTableInfo {

    /**
     * Constructs a new mahjong_ClubTableInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_ClubTableInfo);

    /** mahjong_ClubTableInfo inviteCode. */
    public inviteCode: number;

    /** mahjong_ClubTableInfo tableId. */
    public tableId: number;

    /** mahjong_ClubTableInfo name. */
    public name: string;

    /** mahjong_ClubTableInfo lock. */
    public lock: number;

    /** mahjong_ClubTableInfo plyGuids. */
    public plyGuids: (number|Long)[];

    /** mahjong_ClubTableInfo clubUid. */
    public clubUid: number;

    /** mahjong_ClubTableInfo gameId. */
    public gameId: number;

    /**
     * Creates a new mahjong_ClubTableInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_ClubTableInfo instance
     */
    public static create(properties?: Imahjong_ClubTableInfo): mahjong_ClubTableInfo;

    /**
     * Encodes the specified mahjong_ClubTableInfo message. Does not implicitly {@link mahjong_ClubTableInfo.verify|verify} messages.
     * @param message mahjong_ClubTableInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_ClubTableInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_ClubTableInfo message, length delimited. Does not implicitly {@link mahjong_ClubTableInfo.verify|verify} messages.
     * @param message mahjong_ClubTableInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_ClubTableInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_ClubTableInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_ClubTableInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_ClubTableInfo;

    /**
     * Decodes a mahjong_ClubTableInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_ClubTableInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_ClubTableInfo;

    /**
     * Verifies a mahjong_ClubTableInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_ClubTableInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_ClubTableInfo
     */
    public static fromObject(object: { [k: string]: any }): mahjong_ClubTableInfo;

    /**
     * Creates a plain object from a mahjong_ClubTableInfo message. Also converts values to other types if specified.
     * @param message mahjong_ClubTableInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_ClubTableInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_ClubTableInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_update_dila_notf. */
export interface Imahjong_bc_update_dila_notf {

    /** mahjong_bc_update_dila_notf serverZeit */
    serverZeit: number;

    /** mahjong_bc_update_dila_notf nickname */
    nickname: string;

    /** mahjong_bc_update_dila_notf data */
    data: Imahjong_DilaData;
}

/** Represents a mahjong_bc_update_dila_notf. */
export class mahjong_bc_update_dila_notf implements Imahjong_bc_update_dila_notf {

    /**
     * Constructs a new mahjong_bc_update_dila_notf.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_update_dila_notf);

    /** mahjong_bc_update_dila_notf serverZeit. */
    public serverZeit: number;

    /** mahjong_bc_update_dila_notf nickname. */
    public nickname: string;

    /** mahjong_bc_update_dila_notf data. */
    public data: Imahjong_DilaData;

    /**
     * Creates a new mahjong_bc_update_dila_notf instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_update_dila_notf instance
     */
    public static create(properties?: Imahjong_bc_update_dila_notf): mahjong_bc_update_dila_notf;

    /**
     * Encodes the specified mahjong_bc_update_dila_notf message. Does not implicitly {@link mahjong_bc_update_dila_notf.verify|verify} messages.
     * @param message mahjong_bc_update_dila_notf message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_update_dila_notf, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_update_dila_notf message, length delimited. Does not implicitly {@link mahjong_bc_update_dila_notf.verify|verify} messages.
     * @param message mahjong_bc_update_dila_notf message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_update_dila_notf, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_update_dila_notf message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_update_dila_notf
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_update_dila_notf;

    /**
     * Decodes a mahjong_bc_update_dila_notf message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_update_dila_notf
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_update_dila_notf;

    /**
     * Verifies a mahjong_bc_update_dila_notf message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_update_dila_notf message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_update_dila_notf
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_update_dila_notf;

    /**
     * Creates a plain object from a mahjong_bc_update_dila_notf message. Also converts values to other types if specified.
     * @param message mahjong_bc_update_dila_notf
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_update_dila_notf, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_update_dila_notf to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_total_game_round_ack. */
export interface Imahjong_lc_get_total_game_round_ack {

    /** mahjong_lc_get_total_game_round_ack ret */
    ret: number;

    /** mahjong_lc_get_total_game_round_ack totalRound */
    totalRound: number;
}

/** Represents a mahjong_lc_get_total_game_round_ack. */
export class mahjong_lc_get_total_game_round_ack implements Imahjong_lc_get_total_game_round_ack {

    /**
     * Constructs a new mahjong_lc_get_total_game_round_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_total_game_round_ack);

    /** mahjong_lc_get_total_game_round_ack ret. */
    public ret: number;

    /** mahjong_lc_get_total_game_round_ack totalRound. */
    public totalRound: number;

    /**
     * Creates a new mahjong_lc_get_total_game_round_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_total_game_round_ack instance
     */
    public static create(properties?: Imahjong_lc_get_total_game_round_ack): mahjong_lc_get_total_game_round_ack;

    /**
     * Encodes the specified mahjong_lc_get_total_game_round_ack message. Does not implicitly {@link mahjong_lc_get_total_game_round_ack.verify|verify} messages.
     * @param message mahjong_lc_get_total_game_round_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_total_game_round_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_total_game_round_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_total_game_round_ack.verify|verify} messages.
     * @param message mahjong_lc_get_total_game_round_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_total_game_round_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_total_game_round_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_total_game_round_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_total_game_round_ack;

    /**
     * Decodes a mahjong_lc_get_total_game_round_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_total_game_round_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_total_game_round_ack;

    /**
     * Verifies a mahjong_lc_get_total_game_round_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_total_game_round_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_total_game_round_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_total_game_round_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_total_game_round_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_total_game_round_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_total_game_round_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_total_game_round_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_turntable_login_award_req. */
export interface Imahjong_cl_get_turntable_login_award_req {

    /** mahjong_cl_get_turntable_login_award_req gameId */
    gameId: number;
}

/** Represents a mahjong_cl_get_turntable_login_award_req. */
export class mahjong_cl_get_turntable_login_award_req implements Imahjong_cl_get_turntable_login_award_req {

    /**
     * Constructs a new mahjong_cl_get_turntable_login_award_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_turntable_login_award_req);

    /** mahjong_cl_get_turntable_login_award_req gameId. */
    public gameId: number;

    /**
     * Creates a new mahjong_cl_get_turntable_login_award_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_turntable_login_award_req instance
     */
    public static create(properties?: Imahjong_cl_get_turntable_login_award_req): mahjong_cl_get_turntable_login_award_req;

    /**
     * Encodes the specified mahjong_cl_get_turntable_login_award_req message. Does not implicitly {@link mahjong_cl_get_turntable_login_award_req.verify|verify} messages.
     * @param message mahjong_cl_get_turntable_login_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_turntable_login_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_turntable_login_award_req message, length delimited. Does not implicitly {@link mahjong_cl_get_turntable_login_award_req.verify|verify} messages.
     * @param message mahjong_cl_get_turntable_login_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_turntable_login_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_turntable_login_award_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_turntable_login_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_turntable_login_award_req;

    /**
     * Decodes a mahjong_cl_get_turntable_login_award_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_turntable_login_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_turntable_login_award_req;

    /**
     * Verifies a mahjong_cl_get_turntable_login_award_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_turntable_login_award_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_turntable_login_award_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_turntable_login_award_req;

    /**
     * Creates a plain object from a mahjong_cl_get_turntable_login_award_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_turntable_login_award_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_turntable_login_award_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_turntable_login_award_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_DilaData. */
export interface Imahjong_DilaData {

    /** mahjong_DilaData dilaId */
    dilaId: number;

    /** mahjong_DilaData changeCost */
    changeCost: number;

    /** mahjong_DilaData dilaName */
    dilaName: string;

    /** mahjong_DilaData dilaUrl */
    dilaUrl: string;

    /** mahjong_DilaData currentRecivedMoney */
    currentRecivedMoney: number;

    /** mahjong_DilaData lastTipZeit */
    lastTipZeit: number;

    /** mahjong_DilaData changeZeit */
    changeZeit: number;
}

/** Represents a mahjong_DilaData. */
export class mahjong_DilaData implements Imahjong_DilaData {

    /**
     * Constructs a new mahjong_DilaData.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_DilaData);

    /** mahjong_DilaData dilaId. */
    public dilaId: number;

    /** mahjong_DilaData changeCost. */
    public changeCost: number;

    /** mahjong_DilaData dilaName. */
    public dilaName: string;

    /** mahjong_DilaData dilaUrl. */
    public dilaUrl: string;

    /** mahjong_DilaData currentRecivedMoney. */
    public currentRecivedMoney: number;

    /** mahjong_DilaData lastTipZeit. */
    public lastTipZeit: number;

    /** mahjong_DilaData changeZeit. */
    public changeZeit: number;

    /**
     * Creates a new mahjong_DilaData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_DilaData instance
     */
    public static create(properties?: Imahjong_DilaData): mahjong_DilaData;

    /**
     * Encodes the specified mahjong_DilaData message. Does not implicitly {@link mahjong_DilaData.verify|verify} messages.
     * @param message mahjong_DilaData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_DilaData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_DilaData message, length delimited. Does not implicitly {@link mahjong_DilaData.verify|verify} messages.
     * @param message mahjong_DilaData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_DilaData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_DilaData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_DilaData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_DilaData;

    /**
     * Decodes a mahjong_DilaData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_DilaData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_DilaData;

    /**
     * Verifies a mahjong_DilaData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_DilaData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_DilaData
     */
    public static fromObject(object: { [k: string]: any }): mahjong_DilaData;

    /**
     * Creates a plain object from a mahjong_DilaData message. Also converts values to other types if specified.
     * @param message mahjong_DilaData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_DilaData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_DilaData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_use_spec_props_ack. */
export interface Imahjong_bc_use_spec_props_ack {

    /** mahjong_bc_use_spec_props_ack ret */
    ret: number;
}

/** Represents a mahjong_bc_use_spec_props_ack. */
export class mahjong_bc_use_spec_props_ack implements Imahjong_bc_use_spec_props_ack {

    /**
     * Constructs a new mahjong_bc_use_spec_props_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_use_spec_props_ack);

    /** mahjong_bc_use_spec_props_ack ret. */
    public ret: number;

    /**
     * Creates a new mahjong_bc_use_spec_props_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_use_spec_props_ack instance
     */
    public static create(properties?: Imahjong_bc_use_spec_props_ack): mahjong_bc_use_spec_props_ack;

    /**
     * Encodes the specified mahjong_bc_use_spec_props_ack message. Does not implicitly {@link mahjong_bc_use_spec_props_ack.verify|verify} messages.
     * @param message mahjong_bc_use_spec_props_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_use_spec_props_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_use_spec_props_ack message, length delimited. Does not implicitly {@link mahjong_bc_use_spec_props_ack.verify|verify} messages.
     * @param message mahjong_bc_use_spec_props_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_use_spec_props_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_use_spec_props_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_use_spec_props_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_use_spec_props_ack;

    /**
     * Decodes a mahjong_bc_use_spec_props_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_use_spec_props_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_use_spec_props_ack;

    /**
     * Verifies a mahjong_bc_use_spec_props_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_use_spec_props_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_use_spec_props_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_use_spec_props_ack;

    /**
     * Creates a plain object from a mahjong_bc_use_spec_props_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_use_spec_props_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_use_spec_props_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_use_spec_props_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_send_prop_req. */
export interface Imahjong_cb_send_prop_req {

    /** mahjong_cb_send_prop_req dstPlyGuid */
    dstPlyGuid: (number|Long);

    /** mahjong_cb_send_prop_req index */
    index: number;

    /** mahjong_cb_send_prop_req amount */
    amount: number;
}

/** Represents a mahjong_cb_send_prop_req. */
export class mahjong_cb_send_prop_req implements Imahjong_cb_send_prop_req {

    /**
     * Constructs a new mahjong_cb_send_prop_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_send_prop_req);

    /** mahjong_cb_send_prop_req dstPlyGuid. */
    public dstPlyGuid: (number|Long);

    /** mahjong_cb_send_prop_req index. */
    public index: number;

    /** mahjong_cb_send_prop_req amount. */
    public amount: number;

    /**
     * Creates a new mahjong_cb_send_prop_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_send_prop_req instance
     */
    public static create(properties?: Imahjong_cb_send_prop_req): mahjong_cb_send_prop_req;

    /**
     * Encodes the specified mahjong_cb_send_prop_req message. Does not implicitly {@link mahjong_cb_send_prop_req.verify|verify} messages.
     * @param message mahjong_cb_send_prop_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_send_prop_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_send_prop_req message, length delimited. Does not implicitly {@link mahjong_cb_send_prop_req.verify|verify} messages.
     * @param message mahjong_cb_send_prop_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_send_prop_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_send_prop_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_send_prop_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_send_prop_req;

    /**
     * Decodes a mahjong_cb_send_prop_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_send_prop_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_send_prop_req;

    /**
     * Verifies a mahjong_cb_send_prop_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_send_prop_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_send_prop_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_send_prop_req;

    /**
     * Creates a plain object from a mahjong_cb_send_prop_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_send_prop_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_send_prop_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_send_prop_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_server_data_req. */
export interface Imahjong_cl_server_data_req {
}

/** Represents a mahjong_cl_server_data_req. */
export class mahjong_cl_server_data_req implements Imahjong_cl_server_data_req {

    /**
     * Constructs a new mahjong_cl_server_data_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_server_data_req);

    /**
     * Creates a new mahjong_cl_server_data_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_server_data_req instance
     */
    public static create(properties?: Imahjong_cl_server_data_req): mahjong_cl_server_data_req;

    /**
     * Encodes the specified mahjong_cl_server_data_req message. Does not implicitly {@link mahjong_cl_server_data_req.verify|verify} messages.
     * @param message mahjong_cl_server_data_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_server_data_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_server_data_req message, length delimited. Does not implicitly {@link mahjong_cl_server_data_req.verify|verify} messages.
     * @param message mahjong_cl_server_data_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_server_data_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_server_data_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_server_data_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_server_data_req;

    /**
     * Decodes a mahjong_cl_server_data_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_server_data_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_server_data_req;

    /**
     * Verifies a mahjong_cl_server_data_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_server_data_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_server_data_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_server_data_req;

    /**
     * Creates a plain object from a mahjong_cl_server_data_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_server_data_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_server_data_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_server_data_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_ply_place_not. */
export interface Imahjong_cb_ply_place_not {

    /** mahjong_cb_ply_place_not latitude */
    latitude: number;

    /** mahjong_cb_ply_place_not longitude */
    longitude: number;
}

/** Represents a mahjong_cb_ply_place_not. */
export class mahjong_cb_ply_place_not implements Imahjong_cb_ply_place_not {

    /**
     * Constructs a new mahjong_cb_ply_place_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_ply_place_not);

    /** mahjong_cb_ply_place_not latitude. */
    public latitude: number;

    /** mahjong_cb_ply_place_not longitude. */
    public longitude: number;

    /**
     * Creates a new mahjong_cb_ply_place_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_ply_place_not instance
     */
    public static create(properties?: Imahjong_cb_ply_place_not): mahjong_cb_ply_place_not;

    /**
     * Encodes the specified mahjong_cb_ply_place_not message. Does not implicitly {@link mahjong_cb_ply_place_not.verify|verify} messages.
     * @param message mahjong_cb_ply_place_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_ply_place_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_ply_place_not message, length delimited. Does not implicitly {@link mahjong_cb_ply_place_not.verify|verify} messages.
     * @param message mahjong_cb_ply_place_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_ply_place_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_ply_place_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_ply_place_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_ply_place_not;

    /**
     * Decodes a mahjong_cb_ply_place_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_ply_place_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_ply_place_not;

    /**
     * Verifies a mahjong_cb_ply_place_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_ply_place_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_ply_place_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_ply_place_not;

    /**
     * Creates a plain object from a mahjong_cb_ply_place_not message. Also converts values to other types if specified.
     * @param message mahjong_cb_ply_place_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_ply_place_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_ply_place_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_rank_list_req. */
export interface Imahjong_cl_get_rank_list_req {

    /** mahjong_cl_get_rank_list_req type */
    type: number;

    /** mahjong_cl_get_rank_list_req latitude */
    latitude: number;

    /** mahjong_cl_get_rank_list_req longitude */
    longitude: number;
}

/** Represents a mahjong_cl_get_rank_list_req. */
export class mahjong_cl_get_rank_list_req implements Imahjong_cl_get_rank_list_req {

    /**
     * Constructs a new mahjong_cl_get_rank_list_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_rank_list_req);

    /** mahjong_cl_get_rank_list_req type. */
    public type: number;

    /** mahjong_cl_get_rank_list_req latitude. */
    public latitude: number;

    /** mahjong_cl_get_rank_list_req longitude. */
    public longitude: number;

    /**
     * Creates a new mahjong_cl_get_rank_list_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_rank_list_req instance
     */
    public static create(properties?: Imahjong_cl_get_rank_list_req): mahjong_cl_get_rank_list_req;

    /**
     * Encodes the specified mahjong_cl_get_rank_list_req message. Does not implicitly {@link mahjong_cl_get_rank_list_req.verify|verify} messages.
     * @param message mahjong_cl_get_rank_list_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_rank_list_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_rank_list_req message, length delimited. Does not implicitly {@link mahjong_cl_get_rank_list_req.verify|verify} messages.
     * @param message mahjong_cl_get_rank_list_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_rank_list_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_rank_list_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_rank_list_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_rank_list_req;

    /**
     * Decodes a mahjong_cl_get_rank_list_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_rank_list_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_rank_list_req;

    /**
     * Verifies a mahjong_cl_get_rank_list_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_rank_list_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_rank_list_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_rank_list_req;

    /**
     * Creates a plain object from a mahjong_cl_get_rank_list_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_rank_list_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_rank_list_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_rank_list_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_at_achieve_award_req. */
export interface Imahjong_cl_get_at_achieve_award_req {

    /** mahjong_cl_get_at_achieve_award_req gameId */
    gameId: number;

    /** mahjong_cl_get_at_achieve_award_req index */
    index: number;
}

/** Represents a mahjong_cl_get_at_achieve_award_req. */
export class mahjong_cl_get_at_achieve_award_req implements Imahjong_cl_get_at_achieve_award_req {

    /**
     * Constructs a new mahjong_cl_get_at_achieve_award_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_at_achieve_award_req);

    /** mahjong_cl_get_at_achieve_award_req gameId. */
    public gameId: number;

    /** mahjong_cl_get_at_achieve_award_req index. */
    public index: number;

    /**
     * Creates a new mahjong_cl_get_at_achieve_award_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_at_achieve_award_req instance
     */
    public static create(properties?: Imahjong_cl_get_at_achieve_award_req): mahjong_cl_get_at_achieve_award_req;

    /**
     * Encodes the specified mahjong_cl_get_at_achieve_award_req message. Does not implicitly {@link mahjong_cl_get_at_achieve_award_req.verify|verify} messages.
     * @param message mahjong_cl_get_at_achieve_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_at_achieve_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_at_achieve_award_req message, length delimited. Does not implicitly {@link mahjong_cl_get_at_achieve_award_req.verify|verify} messages.
     * @param message mahjong_cl_get_at_achieve_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_at_achieve_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_at_achieve_award_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_at_achieve_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_at_achieve_award_req;

    /**
     * Decodes a mahjong_cl_get_at_achieve_award_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_at_achieve_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_at_achieve_award_req;

    /**
     * Verifies a mahjong_cl_get_at_achieve_award_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_at_achieve_award_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_at_achieve_award_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_at_achieve_award_req;

    /**
     * Creates a plain object from a mahjong_cl_get_at_achieve_award_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_at_achieve_award_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_at_achieve_award_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_at_achieve_award_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_SpecProps. */
export interface Imahjong_SpecProps {

    /** mahjong_SpecProps gameId */
    gameId: number;

    /** mahjong_SpecProps index */
    index: number;

    /** mahjong_SpecProps coins */
    coins: number;

    /** mahjong_SpecProps isPopular */
    isPopular: number;

    /** mahjong_SpecProps imgIndex */
    imgIndex: number;

    /** mahjong_SpecProps param_1 */
    param_1: number;

    /** mahjong_SpecProps param_2 */
    param_2: number;

    /** mahjong_SpecProps name */
    name: string;

    /** mahjong_SpecProps desc */
    desc: string;

    /** mahjong_SpecProps url */
    url: string;
}

/** Represents a mahjong_SpecProps. */
export class mahjong_SpecProps implements Imahjong_SpecProps {

    /**
     * Constructs a new mahjong_SpecProps.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_SpecProps);

    /** mahjong_SpecProps gameId. */
    public gameId: number;

    /** mahjong_SpecProps index. */
    public index: number;

    /** mahjong_SpecProps coins. */
    public coins: number;

    /** mahjong_SpecProps isPopular. */
    public isPopular: number;

    /** mahjong_SpecProps imgIndex. */
    public imgIndex: number;

    /** mahjong_SpecProps param_1. */
    public param_1: number;

    /** mahjong_SpecProps param_2. */
    public param_2: number;

    /** mahjong_SpecProps name. */
    public name: string;

    /** mahjong_SpecProps desc. */
    public desc: string;

    /** mahjong_SpecProps url. */
    public url: string;

    /**
     * Creates a new mahjong_SpecProps instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_SpecProps instance
     */
    public static create(properties?: Imahjong_SpecProps): mahjong_SpecProps;

    /**
     * Encodes the specified mahjong_SpecProps message. Does not implicitly {@link mahjong_SpecProps.verify|verify} messages.
     * @param message mahjong_SpecProps message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_SpecProps, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_SpecProps message, length delimited. Does not implicitly {@link mahjong_SpecProps.verify|verify} messages.
     * @param message mahjong_SpecProps message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_SpecProps, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_SpecProps message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_SpecProps
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_SpecProps;

    /**
     * Decodes a mahjong_SpecProps message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_SpecProps
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_SpecProps;

    /**
     * Verifies a mahjong_SpecProps message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_SpecProps message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_SpecProps
     */
    public static fromObject(object: { [k: string]: any }): mahjong_SpecProps;

    /**
     * Creates a plain object from a mahjong_SpecProps message. Also converts values to other types if specified.
     * @param message mahjong_SpecProps
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_SpecProps, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_SpecProps to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_get_finished_newbie_award_req. */
export interface Imahjong_cb_get_finished_newbie_award_req {

    /** mahjong_cb_get_finished_newbie_award_req type */
    type: number;
}

/** Represents a mahjong_cb_get_finished_newbie_award_req. */
export class mahjong_cb_get_finished_newbie_award_req implements Imahjong_cb_get_finished_newbie_award_req {

    /**
     * Constructs a new mahjong_cb_get_finished_newbie_award_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_get_finished_newbie_award_req);

    /** mahjong_cb_get_finished_newbie_award_req type. */
    public type: number;

    /**
     * Creates a new mahjong_cb_get_finished_newbie_award_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_get_finished_newbie_award_req instance
     */
    public static create(properties?: Imahjong_cb_get_finished_newbie_award_req): mahjong_cb_get_finished_newbie_award_req;

    /**
     * Encodes the specified mahjong_cb_get_finished_newbie_award_req message. Does not implicitly {@link mahjong_cb_get_finished_newbie_award_req.verify|verify} messages.
     * @param message mahjong_cb_get_finished_newbie_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_get_finished_newbie_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_get_finished_newbie_award_req message, length delimited. Does not implicitly {@link mahjong_cb_get_finished_newbie_award_req.verify|verify} messages.
     * @param message mahjong_cb_get_finished_newbie_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_get_finished_newbie_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_get_finished_newbie_award_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_get_finished_newbie_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_get_finished_newbie_award_req;

    /**
     * Decodes a mahjong_cb_get_finished_newbie_award_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_get_finished_newbie_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_get_finished_newbie_award_req;

    /**
     * Verifies a mahjong_cb_get_finished_newbie_award_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_get_finished_newbie_award_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_get_finished_newbie_award_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_get_finished_newbie_award_req;

    /**
     * Creates a plain object from a mahjong_cb_get_finished_newbie_award_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_get_finished_newbie_award_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_get_finished_newbie_award_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_get_finished_newbie_award_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_user_signin_award_info_req. */
export interface Imahjong_cl_get_user_signin_award_info_req {
}

/** Represents a mahjong_cl_get_user_signin_award_info_req. */
export class mahjong_cl_get_user_signin_award_info_req implements Imahjong_cl_get_user_signin_award_info_req {

    /**
     * Constructs a new mahjong_cl_get_user_signin_award_info_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_user_signin_award_info_req);

    /**
     * Creates a new mahjong_cl_get_user_signin_award_info_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_user_signin_award_info_req instance
     */
    public static create(properties?: Imahjong_cl_get_user_signin_award_info_req): mahjong_cl_get_user_signin_award_info_req;

    /**
     * Encodes the specified mahjong_cl_get_user_signin_award_info_req message. Does not implicitly {@link mahjong_cl_get_user_signin_award_info_req.verify|verify} messages.
     * @param message mahjong_cl_get_user_signin_award_info_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_user_signin_award_info_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_user_signin_award_info_req message, length delimited. Does not implicitly {@link mahjong_cl_get_user_signin_award_info_req.verify|verify} messages.
     * @param message mahjong_cl_get_user_signin_award_info_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_user_signin_award_info_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_user_signin_award_info_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_user_signin_award_info_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_user_signin_award_info_req;

    /**
     * Decodes a mahjong_cl_get_user_signin_award_info_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_user_signin_award_info_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_user_signin_award_info_req;

    /**
     * Verifies a mahjong_cl_get_user_signin_award_info_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_user_signin_award_info_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_user_signin_award_info_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_user_signin_award_info_req;

    /**
     * Creates a plain object from a mahjong_cl_get_user_signin_award_info_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_user_signin_award_info_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_user_signin_award_info_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_user_signin_award_info_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_safe_history_req. */
export interface Imahjong_cl_get_safe_history_req {

    /** mahjong_cl_get_safe_history_req plyGuid */
    plyGuid: (number|Long);
}

/** Represents a mahjong_cl_get_safe_history_req. */
export class mahjong_cl_get_safe_history_req implements Imahjong_cl_get_safe_history_req {

    /**
     * Constructs a new mahjong_cl_get_safe_history_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_safe_history_req);

    /** mahjong_cl_get_safe_history_req plyGuid. */
    public plyGuid: (number|Long);

    /**
     * Creates a new mahjong_cl_get_safe_history_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_safe_history_req instance
     */
    public static create(properties?: Imahjong_cl_get_safe_history_req): mahjong_cl_get_safe_history_req;

    /**
     * Encodes the specified mahjong_cl_get_safe_history_req message. Does not implicitly {@link mahjong_cl_get_safe_history_req.verify|verify} messages.
     * @param message mahjong_cl_get_safe_history_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_safe_history_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_safe_history_req message, length delimited. Does not implicitly {@link mahjong_cl_get_safe_history_req.verify|verify} messages.
     * @param message mahjong_cl_get_safe_history_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_safe_history_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_safe_history_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_safe_history_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_safe_history_req;

    /**
     * Decodes a mahjong_cl_get_safe_history_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_safe_history_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_safe_history_req;

    /**
     * Verifies a mahjong_cl_get_safe_history_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_safe_history_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_safe_history_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_safe_history_req;

    /**
     * Creates a plain object from a mahjong_cl_get_safe_history_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_safe_history_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_safe_history_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_safe_history_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_get_streak_task_ack. */
export interface Imahjong_bc_get_streak_task_ack {

    /** mahjong_bc_get_streak_task_ack ret */
    ret: number;

    /** mahjong_bc_get_streak_task_ack index */
    index: number;

    /** mahjong_bc_get_streak_task_ack name */
    name: string;

    /** mahjong_bc_get_streak_task_ack desc */
    desc: string;

    /** mahjong_bc_get_streak_task_ack speed */
    speed: number;

    /** mahjong_bc_get_streak_task_ack amount */
    amount: number;
}

/** Represents a mahjong_bc_get_streak_task_ack. */
export class mahjong_bc_get_streak_task_ack implements Imahjong_bc_get_streak_task_ack {

    /**
     * Constructs a new mahjong_bc_get_streak_task_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_get_streak_task_ack);

    /** mahjong_bc_get_streak_task_ack ret. */
    public ret: number;

    /** mahjong_bc_get_streak_task_ack index. */
    public index: number;

    /** mahjong_bc_get_streak_task_ack name. */
    public name: string;

    /** mahjong_bc_get_streak_task_ack desc. */
    public desc: string;

    /** mahjong_bc_get_streak_task_ack speed. */
    public speed: number;

    /** mahjong_bc_get_streak_task_ack amount. */
    public amount: number;

    /**
     * Creates a new mahjong_bc_get_streak_task_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_get_streak_task_ack instance
     */
    public static create(properties?: Imahjong_bc_get_streak_task_ack): mahjong_bc_get_streak_task_ack;

    /**
     * Encodes the specified mahjong_bc_get_streak_task_ack message. Does not implicitly {@link mahjong_bc_get_streak_task_ack.verify|verify} messages.
     * @param message mahjong_bc_get_streak_task_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_get_streak_task_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_get_streak_task_ack message, length delimited. Does not implicitly {@link mahjong_bc_get_streak_task_ack.verify|verify} messages.
     * @param message mahjong_bc_get_streak_task_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_get_streak_task_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_get_streak_task_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_get_streak_task_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_get_streak_task_ack;

    /**
     * Decodes a mahjong_bc_get_streak_task_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_get_streak_task_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_get_streak_task_ack;

    /**
     * Verifies a mahjong_bc_get_streak_task_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_get_streak_task_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_get_streak_task_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_get_streak_task_ack;

    /**
     * Creates a plain object from a mahjong_bc_get_streak_task_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_get_streak_task_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_get_streak_task_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_get_streak_task_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_merged_daily_task_award_ack. */
export interface Imahjong_lc_get_merged_daily_task_award_ack {

    /** mahjong_lc_get_merged_daily_task_award_ack ret */
    ret: number;

    /** mahjong_lc_get_merged_daily_task_award_ack money */
    money: number;

    /** mahjong_lc_get_merged_daily_task_award_ack gift */
    gift: number;

    /** mahjong_lc_get_merged_daily_task_award_ack award_0 */
    award_0: number;

    /** mahjong_lc_get_merged_daily_task_award_ack award_1 */
    award_1: number;

    /** mahjong_lc_get_merged_daily_task_award_ack award_2 */
    award_2: number;

    /** mahjong_lc_get_merged_daily_task_award_ack award_3 */
    award_3: number;

    /** mahjong_lc_get_merged_daily_task_award_ack award_4 */
    award_4: number;
}

/** Represents a mahjong_lc_get_merged_daily_task_award_ack. */
export class mahjong_lc_get_merged_daily_task_award_ack implements Imahjong_lc_get_merged_daily_task_award_ack {

    /**
     * Constructs a new mahjong_lc_get_merged_daily_task_award_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_merged_daily_task_award_ack);

    /** mahjong_lc_get_merged_daily_task_award_ack ret. */
    public ret: number;

    /** mahjong_lc_get_merged_daily_task_award_ack money. */
    public money: number;

    /** mahjong_lc_get_merged_daily_task_award_ack gift. */
    public gift: number;

    /** mahjong_lc_get_merged_daily_task_award_ack award_0. */
    public award_0: number;

    /** mahjong_lc_get_merged_daily_task_award_ack award_1. */
    public award_1: number;

    /** mahjong_lc_get_merged_daily_task_award_ack award_2. */
    public award_2: number;

    /** mahjong_lc_get_merged_daily_task_award_ack award_3. */
    public award_3: number;

    /** mahjong_lc_get_merged_daily_task_award_ack award_4. */
    public award_4: number;

    /**
     * Creates a new mahjong_lc_get_merged_daily_task_award_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_merged_daily_task_award_ack instance
     */
    public static create(properties?: Imahjong_lc_get_merged_daily_task_award_ack): mahjong_lc_get_merged_daily_task_award_ack;

    /**
     * Encodes the specified mahjong_lc_get_merged_daily_task_award_ack message. Does not implicitly {@link mahjong_lc_get_merged_daily_task_award_ack.verify|verify} messages.
     * @param message mahjong_lc_get_merged_daily_task_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_merged_daily_task_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_merged_daily_task_award_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_merged_daily_task_award_ack.verify|verify} messages.
     * @param message mahjong_lc_get_merged_daily_task_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_merged_daily_task_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_merged_daily_task_award_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_merged_daily_task_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_merged_daily_task_award_ack;

    /**
     * Decodes a mahjong_lc_get_merged_daily_task_award_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_merged_daily_task_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_merged_daily_task_award_ack;

    /**
     * Verifies a mahjong_lc_get_merged_daily_task_award_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_merged_daily_task_award_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_merged_daily_task_award_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_merged_daily_task_award_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_merged_daily_task_award_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_merged_daily_task_award_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_merged_daily_task_award_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_merged_daily_task_award_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_achieve_ext_award_ack. */
export interface Imahjong_lc_get_achieve_ext_award_ack {

    /** mahjong_lc_get_achieve_ext_award_ack ret */
    ret: number;

    /** mahjong_lc_get_achieve_ext_award_ack money */
    money: number;

    /** mahjong_lc_get_achieve_ext_award_ack gift */
    gift: number;
}

/** Represents a mahjong_lc_get_achieve_ext_award_ack. */
export class mahjong_lc_get_achieve_ext_award_ack implements Imahjong_lc_get_achieve_ext_award_ack {

    /**
     * Constructs a new mahjong_lc_get_achieve_ext_award_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_achieve_ext_award_ack);

    /** mahjong_lc_get_achieve_ext_award_ack ret. */
    public ret: number;

    /** mahjong_lc_get_achieve_ext_award_ack money. */
    public money: number;

    /** mahjong_lc_get_achieve_ext_award_ack gift. */
    public gift: number;

    /**
     * Creates a new mahjong_lc_get_achieve_ext_award_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_achieve_ext_award_ack instance
     */
    public static create(properties?: Imahjong_lc_get_achieve_ext_award_ack): mahjong_lc_get_achieve_ext_award_ack;

    /**
     * Encodes the specified mahjong_lc_get_achieve_ext_award_ack message. Does not implicitly {@link mahjong_lc_get_achieve_ext_award_ack.verify|verify} messages.
     * @param message mahjong_lc_get_achieve_ext_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_achieve_ext_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_achieve_ext_award_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_achieve_ext_award_ack.verify|verify} messages.
     * @param message mahjong_lc_get_achieve_ext_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_achieve_ext_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_achieve_ext_award_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_achieve_ext_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_achieve_ext_award_ack;

    /**
     * Decodes a mahjong_lc_get_achieve_ext_award_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_achieve_ext_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_achieve_ext_award_ack;

    /**
     * Verifies a mahjong_lc_get_achieve_ext_award_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_achieve_ext_award_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_achieve_ext_award_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_achieve_ext_award_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_achieve_ext_award_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_achieve_ext_award_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_achieve_ext_award_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_achieve_ext_award_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_user_accumulate_signin_award_req. */
export interface Imahjong_cl_get_user_accumulate_signin_award_req {

    /** mahjong_cl_get_user_accumulate_signin_award_req continupusDays */
    continupusDays: number;

    /** mahjong_cl_get_user_accumulate_signin_award_req accumulateDays */
    accumulateDays: number;
}

/** Represents a mahjong_cl_get_user_accumulate_signin_award_req. */
export class mahjong_cl_get_user_accumulate_signin_award_req implements Imahjong_cl_get_user_accumulate_signin_award_req {

    /**
     * Constructs a new mahjong_cl_get_user_accumulate_signin_award_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_user_accumulate_signin_award_req);

    /** mahjong_cl_get_user_accumulate_signin_award_req continupusDays. */
    public continupusDays: number;

    /** mahjong_cl_get_user_accumulate_signin_award_req accumulateDays. */
    public accumulateDays: number;

    /**
     * Creates a new mahjong_cl_get_user_accumulate_signin_award_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_user_accumulate_signin_award_req instance
     */
    public static create(properties?: Imahjong_cl_get_user_accumulate_signin_award_req): mahjong_cl_get_user_accumulate_signin_award_req;

    /**
     * Encodes the specified mahjong_cl_get_user_accumulate_signin_award_req message. Does not implicitly {@link mahjong_cl_get_user_accumulate_signin_award_req.verify|verify} messages.
     * @param message mahjong_cl_get_user_accumulate_signin_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_user_accumulate_signin_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_user_accumulate_signin_award_req message, length delimited. Does not implicitly {@link mahjong_cl_get_user_accumulate_signin_award_req.verify|verify} messages.
     * @param message mahjong_cl_get_user_accumulate_signin_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_user_accumulate_signin_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_user_accumulate_signin_award_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_user_accumulate_signin_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_user_accumulate_signin_award_req;

    /**
     * Decodes a mahjong_cl_get_user_accumulate_signin_award_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_user_accumulate_signin_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_user_accumulate_signin_award_req;

    /**
     * Verifies a mahjong_cl_get_user_accumulate_signin_award_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_user_accumulate_signin_award_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_user_accumulate_signin_award_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_user_accumulate_signin_award_req;

    /**
     * Creates a plain object from a mahjong_cl_get_user_accumulate_signin_award_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_user_accumulate_signin_award_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_user_accumulate_signin_award_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_user_accumulate_signin_award_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_store_safe_amount_ack. */
export interface Imahjong_lc_store_safe_amount_ack {

    /** mahjong_lc_store_safe_amount_ack ret */
    ret: number;

    /** mahjong_lc_store_safe_amount_ack plyGuid */
    plyGuid: (number|Long);
}

/** Represents a mahjong_lc_store_safe_amount_ack. */
export class mahjong_lc_store_safe_amount_ack implements Imahjong_lc_store_safe_amount_ack {

    /**
     * Constructs a new mahjong_lc_store_safe_amount_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_store_safe_amount_ack);

    /** mahjong_lc_store_safe_amount_ack ret. */
    public ret: number;

    /** mahjong_lc_store_safe_amount_ack plyGuid. */
    public plyGuid: (number|Long);

    /**
     * Creates a new mahjong_lc_store_safe_amount_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_store_safe_amount_ack instance
     */
    public static create(properties?: Imahjong_lc_store_safe_amount_ack): mahjong_lc_store_safe_amount_ack;

    /**
     * Encodes the specified mahjong_lc_store_safe_amount_ack message. Does not implicitly {@link mahjong_lc_store_safe_amount_ack.verify|verify} messages.
     * @param message mahjong_lc_store_safe_amount_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_store_safe_amount_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_store_safe_amount_ack message, length delimited. Does not implicitly {@link mahjong_lc_store_safe_amount_ack.verify|verify} messages.
     * @param message mahjong_lc_store_safe_amount_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_store_safe_amount_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_store_safe_amount_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_store_safe_amount_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_store_safe_amount_ack;

    /**
     * Decodes a mahjong_lc_store_safe_amount_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_store_safe_amount_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_store_safe_amount_ack;

    /**
     * Verifies a mahjong_lc_store_safe_amount_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_store_safe_amount_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_store_safe_amount_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_store_safe_amount_ack;

    /**
     * Creates a plain object from a mahjong_lc_store_safe_amount_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_store_safe_amount_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_store_safe_amount_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_store_safe_amount_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_GameConfig. */
export interface Imahjong_GameConfig {

    /** mahjong_GameConfig gameId */
    gameId: number;

    /** mahjong_GameConfig gameName */
    gameName: string;
}

/** Represents a mahjong_GameConfig. */
export class mahjong_GameConfig implements Imahjong_GameConfig {

    /**
     * Constructs a new mahjong_GameConfig.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_GameConfig);

    /** mahjong_GameConfig gameId. */
    public gameId: number;

    /** mahjong_GameConfig gameName. */
    public gameName: string;

    /**
     * Creates a new mahjong_GameConfig instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_GameConfig instance
     */
    public static create(properties?: Imahjong_GameConfig): mahjong_GameConfig;

    /**
     * Encodes the specified mahjong_GameConfig message. Does not implicitly {@link mahjong_GameConfig.verify|verify} messages.
     * @param message mahjong_GameConfig message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_GameConfig, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_GameConfig message, length delimited. Does not implicitly {@link mahjong_GameConfig.verify|verify} messages.
     * @param message mahjong_GameConfig message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_GameConfig, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_GameConfig message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_GameConfig
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_GameConfig;

    /**
     * Decodes a mahjong_GameConfig message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_GameConfig
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_GameConfig;

    /**
     * Verifies a mahjong_GameConfig message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_GameConfig message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_GameConfig
     */
    public static fromObject(object: { [k: string]: any }): mahjong_GameConfig;

    /**
     * Creates a plain object from a mahjong_GameConfig message. Also converts values to other types if specified.
     * @param message mahjong_GameConfig
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_GameConfig, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_GameConfig to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_get_rank_list_ack. */
export interface Imahjong_bc_get_rank_list_ack {

    /** mahjong_bc_get_rank_list_ack ret */
    ret: number;

    /** mahjong_bc_get_rank_list_ack type */
    type: number;

    /** mahjong_bc_get_rank_list_ack rankList */
    rankList?: (Imahjong_OnlineRankItem[]|null);
}

/** Represents a mahjong_bc_get_rank_list_ack. */
export class mahjong_bc_get_rank_list_ack implements Imahjong_bc_get_rank_list_ack {

    /**
     * Constructs a new mahjong_bc_get_rank_list_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_get_rank_list_ack);

    /** mahjong_bc_get_rank_list_ack ret. */
    public ret: number;

    /** mahjong_bc_get_rank_list_ack type. */
    public type: number;

    /** mahjong_bc_get_rank_list_ack rankList. */
    public rankList: Imahjong_OnlineRankItem[];

    /**
     * Creates a new mahjong_bc_get_rank_list_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_get_rank_list_ack instance
     */
    public static create(properties?: Imahjong_bc_get_rank_list_ack): mahjong_bc_get_rank_list_ack;

    /**
     * Encodes the specified mahjong_bc_get_rank_list_ack message. Does not implicitly {@link mahjong_bc_get_rank_list_ack.verify|verify} messages.
     * @param message mahjong_bc_get_rank_list_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_get_rank_list_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_get_rank_list_ack message, length delimited. Does not implicitly {@link mahjong_bc_get_rank_list_ack.verify|verify} messages.
     * @param message mahjong_bc_get_rank_list_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_get_rank_list_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_get_rank_list_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_get_rank_list_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_get_rank_list_ack;

    /**
     * Decodes a mahjong_bc_get_rank_list_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_get_rank_list_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_get_rank_list_ack;

    /**
     * Verifies a mahjong_bc_get_rank_list_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_get_rank_list_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_get_rank_list_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_get_rank_list_ack;

    /**
     * Creates a plain object from a mahjong_bc_get_rank_list_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_get_rank_list_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_get_rank_list_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_get_rank_list_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_get_achieve_award_ack. */
export interface Imahjong_bc_get_achieve_award_ack {

    /** mahjong_bc_get_achieve_award_ack ret */
    ret: number;

    /** mahjong_bc_get_achieve_award_ack param_1 */
    param_1: number;

    /** mahjong_bc_get_achieve_award_ack param_2 */
    param_2: number;

    /** mahjong_bc_get_achieve_award_ack param_3 */
    param_3: number;

    /** mahjong_bc_get_achieve_award_ack param_4 */
    param_4: number;

    /** mahjong_bc_get_achieve_award_ack param_5 */
    param_5: number;
}

/** Represents a mahjong_bc_get_achieve_award_ack. */
export class mahjong_bc_get_achieve_award_ack implements Imahjong_bc_get_achieve_award_ack {

    /**
     * Constructs a new mahjong_bc_get_achieve_award_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_get_achieve_award_ack);

    /** mahjong_bc_get_achieve_award_ack ret. */
    public ret: number;

    /** mahjong_bc_get_achieve_award_ack param_1. */
    public param_1: number;

    /** mahjong_bc_get_achieve_award_ack param_2. */
    public param_2: number;

    /** mahjong_bc_get_achieve_award_ack param_3. */
    public param_3: number;

    /** mahjong_bc_get_achieve_award_ack param_4. */
    public param_4: number;

    /** mahjong_bc_get_achieve_award_ack param_5. */
    public param_5: number;

    /**
     * Creates a new mahjong_bc_get_achieve_award_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_get_achieve_award_ack instance
     */
    public static create(properties?: Imahjong_bc_get_achieve_award_ack): mahjong_bc_get_achieve_award_ack;

    /**
     * Encodes the specified mahjong_bc_get_achieve_award_ack message. Does not implicitly {@link mahjong_bc_get_achieve_award_ack.verify|verify} messages.
     * @param message mahjong_bc_get_achieve_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_get_achieve_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_get_achieve_award_ack message, length delimited. Does not implicitly {@link mahjong_bc_get_achieve_award_ack.verify|verify} messages.
     * @param message mahjong_bc_get_achieve_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_get_achieve_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_get_achieve_award_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_get_achieve_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_get_achieve_award_ack;

    /**
     * Decodes a mahjong_bc_get_achieve_award_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_get_achieve_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_get_achieve_award_ack;

    /**
     * Verifies a mahjong_bc_get_achieve_award_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_get_achieve_award_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_get_achieve_award_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_get_achieve_award_ack;

    /**
     * Creates a plain object from a mahjong_bc_get_achieve_award_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_get_achieve_award_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_get_achieve_award_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_get_achieve_award_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_miniGame_ack. */
export interface Imahjong_lc_get_miniGame_ack {

    /** mahjong_lc_get_miniGame_ack result */
    result: number;

    /** mahjong_lc_get_miniGame_ack serverDatas */
    serverDatas?: (Imahjong_ServerData2[]|null);
}

/** Represents a mahjong_lc_get_miniGame_ack. */
export class mahjong_lc_get_miniGame_ack implements Imahjong_lc_get_miniGame_ack {

    /**
     * Constructs a new mahjong_lc_get_miniGame_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_miniGame_ack);

    /** mahjong_lc_get_miniGame_ack result. */
    public result: number;

    /** mahjong_lc_get_miniGame_ack serverDatas. */
    public serverDatas: Imahjong_ServerData2[];

    /**
     * Creates a new mahjong_lc_get_miniGame_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_miniGame_ack instance
     */
    public static create(properties?: Imahjong_lc_get_miniGame_ack): mahjong_lc_get_miniGame_ack;

    /**
     * Encodes the specified mahjong_lc_get_miniGame_ack message. Does not implicitly {@link mahjong_lc_get_miniGame_ack.verify|verify} messages.
     * @param message mahjong_lc_get_miniGame_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_miniGame_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_miniGame_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_miniGame_ack.verify|verify} messages.
     * @param message mahjong_lc_get_miniGame_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_miniGame_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_miniGame_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_miniGame_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_miniGame_ack;

    /**
     * Decodes a mahjong_lc_get_miniGame_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_miniGame_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_miniGame_ack;

    /**
     * Verifies a mahjong_lc_get_miniGame_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_miniGame_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_miniGame_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_miniGame_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_miniGame_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_miniGame_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_miniGame_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_miniGame_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_AccumulateSigninInfo. */
export interface Imahjong_AccumulateSigninInfo {

    /** mahjong_AccumulateSigninInfo signinDays */
    signinDays?: (number[]|null);

    /** mahjong_AccumulateSigninInfo buqianka */
    buqianka: number;

    /** mahjong_AccumulateSigninInfo signinAward */
    signinAward: Imahjong_AccumulateSigninAward;
}

/** Represents a mahjong_AccumulateSigninInfo. */
export class mahjong_AccumulateSigninInfo implements Imahjong_AccumulateSigninInfo {

    /**
     * Constructs a new mahjong_AccumulateSigninInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_AccumulateSigninInfo);

    /** mahjong_AccumulateSigninInfo signinDays. */
    public signinDays: number[];

    /** mahjong_AccumulateSigninInfo buqianka. */
    public buqianka: number;

    /** mahjong_AccumulateSigninInfo signinAward. */
    public signinAward: Imahjong_AccumulateSigninAward;

    /**
     * Creates a new mahjong_AccumulateSigninInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_AccumulateSigninInfo instance
     */
    public static create(properties?: Imahjong_AccumulateSigninInfo): mahjong_AccumulateSigninInfo;

    /**
     * Encodes the specified mahjong_AccumulateSigninInfo message. Does not implicitly {@link mahjong_AccumulateSigninInfo.verify|verify} messages.
     * @param message mahjong_AccumulateSigninInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_AccumulateSigninInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_AccumulateSigninInfo message, length delimited. Does not implicitly {@link mahjong_AccumulateSigninInfo.verify|verify} messages.
     * @param message mahjong_AccumulateSigninInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_AccumulateSigninInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_AccumulateSigninInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_AccumulateSigninInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_AccumulateSigninInfo;

    /**
     * Decodes a mahjong_AccumulateSigninInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_AccumulateSigninInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_AccumulateSigninInfo;

    /**
     * Verifies a mahjong_AccumulateSigninInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_AccumulateSigninInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_AccumulateSigninInfo
     */
    public static fromObject(object: { [k: string]: any }): mahjong_AccumulateSigninInfo;

    /**
     * Creates a plain object from a mahjong_AccumulateSigninInfo message. Also converts values to other types if specified.
     * @param message mahjong_AccumulateSigninInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_AccumulateSigninInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_AccumulateSigninInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_check_relief_status_ack. */
export interface Imahjong_bc_check_relief_status_ack {

    /** mahjong_bc_check_relief_status_ack ret */
    ret: number;

    /** mahjong_bc_check_relief_status_ack currentRelief */
    currentRelief: number;

    /** mahjong_bc_check_relief_status_ack reliefTimeLeft */
    reliefTimeLeft: number;

    /** mahjong_bc_check_relief_status_ack reliefAwardCount */
    reliefAwardCount: number;
}

/** Represents a mahjong_bc_check_relief_status_ack. */
export class mahjong_bc_check_relief_status_ack implements Imahjong_bc_check_relief_status_ack {

    /**
     * Constructs a new mahjong_bc_check_relief_status_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_check_relief_status_ack);

    /** mahjong_bc_check_relief_status_ack ret. */
    public ret: number;

    /** mahjong_bc_check_relief_status_ack currentRelief. */
    public currentRelief: number;

    /** mahjong_bc_check_relief_status_ack reliefTimeLeft. */
    public reliefTimeLeft: number;

    /** mahjong_bc_check_relief_status_ack reliefAwardCount. */
    public reliefAwardCount: number;

    /**
     * Creates a new mahjong_bc_check_relief_status_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_check_relief_status_ack instance
     */
    public static create(properties?: Imahjong_bc_check_relief_status_ack): mahjong_bc_check_relief_status_ack;

    /**
     * Encodes the specified mahjong_bc_check_relief_status_ack message. Does not implicitly {@link mahjong_bc_check_relief_status_ack.verify|verify} messages.
     * @param message mahjong_bc_check_relief_status_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_check_relief_status_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_check_relief_status_ack message, length delimited. Does not implicitly {@link mahjong_bc_check_relief_status_ack.verify|verify} messages.
     * @param message mahjong_bc_check_relief_status_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_check_relief_status_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_check_relief_status_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_check_relief_status_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_check_relief_status_ack;

    /**
     * Decodes a mahjong_bc_check_relief_status_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_check_relief_status_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_check_relief_status_ack;

    /**
     * Verifies a mahjong_bc_check_relief_status_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_check_relief_status_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_check_relief_status_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_check_relief_status_ack;

    /**
     * Creates a plain object from a mahjong_bc_check_relief_status_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_check_relief_status_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_check_relief_status_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_check_relief_status_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_check_relief_status_req. */
export interface Imahjong_cb_check_relief_status_req {
}

/** Represents a mahjong_cb_check_relief_status_req. */
export class mahjong_cb_check_relief_status_req implements Imahjong_cb_check_relief_status_req {

    /**
     * Constructs a new mahjong_cb_check_relief_status_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_check_relief_status_req);

    /**
     * Creates a new mahjong_cb_check_relief_status_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_check_relief_status_req instance
     */
    public static create(properties?: Imahjong_cb_check_relief_status_req): mahjong_cb_check_relief_status_req;

    /**
     * Encodes the specified mahjong_cb_check_relief_status_req message. Does not implicitly {@link mahjong_cb_check_relief_status_req.verify|verify} messages.
     * @param message mahjong_cb_check_relief_status_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_check_relief_status_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_check_relief_status_req message, length delimited. Does not implicitly {@link mahjong_cb_check_relief_status_req.verify|verify} messages.
     * @param message mahjong_cb_check_relief_status_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_check_relief_status_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_check_relief_status_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_check_relief_status_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_check_relief_status_req;

    /**
     * Decodes a mahjong_cb_check_relief_status_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_check_relief_status_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_check_relief_status_req;

    /**
     * Verifies a mahjong_cb_check_relief_status_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_check_relief_status_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_check_relief_status_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_check_relief_status_req;

    /**
     * Creates a plain object from a mahjong_cb_check_relief_status_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_check_relief_status_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_check_relief_status_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_check_relief_status_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_get_daily_task_award_ack. */
export interface Imahjong_bc_get_daily_task_award_ack {

    /** mahjong_bc_get_daily_task_award_ack ret */
    ret: number;

    /** mahjong_bc_get_daily_task_award_ack money */
    money: number;

    /** mahjong_bc_get_daily_task_award_ack gift */
    gift: number;

    /** mahjong_bc_get_daily_task_award_ack prop_1 */
    prop_1: number;

    /** mahjong_bc_get_daily_task_award_ack prop_2 */
    prop_2: number;

    /** mahjong_bc_get_daily_task_award_ack prop_3 */
    prop_3: number;

    /** mahjong_bc_get_daily_task_award_ack prop_4 */
    prop_4: number;

    /** mahjong_bc_get_daily_task_award_ack prop_5 */
    prop_5: number;
}

/** Represents a mahjong_bc_get_daily_task_award_ack. */
export class mahjong_bc_get_daily_task_award_ack implements Imahjong_bc_get_daily_task_award_ack {

    /**
     * Constructs a new mahjong_bc_get_daily_task_award_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_get_daily_task_award_ack);

    /** mahjong_bc_get_daily_task_award_ack ret. */
    public ret: number;

    /** mahjong_bc_get_daily_task_award_ack money. */
    public money: number;

    /** mahjong_bc_get_daily_task_award_ack gift. */
    public gift: number;

    /** mahjong_bc_get_daily_task_award_ack prop_1. */
    public prop_1: number;

    /** mahjong_bc_get_daily_task_award_ack prop_2. */
    public prop_2: number;

    /** mahjong_bc_get_daily_task_award_ack prop_3. */
    public prop_3: number;

    /** mahjong_bc_get_daily_task_award_ack prop_4. */
    public prop_4: number;

    /** mahjong_bc_get_daily_task_award_ack prop_5. */
    public prop_5: number;

    /**
     * Creates a new mahjong_bc_get_daily_task_award_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_get_daily_task_award_ack instance
     */
    public static create(properties?: Imahjong_bc_get_daily_task_award_ack): mahjong_bc_get_daily_task_award_ack;

    /**
     * Encodes the specified mahjong_bc_get_daily_task_award_ack message. Does not implicitly {@link mahjong_bc_get_daily_task_award_ack.verify|verify} messages.
     * @param message mahjong_bc_get_daily_task_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_get_daily_task_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_get_daily_task_award_ack message, length delimited. Does not implicitly {@link mahjong_bc_get_daily_task_award_ack.verify|verify} messages.
     * @param message mahjong_bc_get_daily_task_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_get_daily_task_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_get_daily_task_award_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_get_daily_task_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_get_daily_task_award_ack;

    /**
     * Decodes a mahjong_bc_get_daily_task_award_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_get_daily_task_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_get_daily_task_award_ack;

    /**
     * Verifies a mahjong_bc_get_daily_task_award_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_get_daily_task_award_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_get_daily_task_award_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_get_daily_task_award_ack;

    /**
     * Creates a plain object from a mahjong_bc_get_daily_task_award_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_get_daily_task_award_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_get_daily_task_award_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_get_daily_task_award_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_FriendData20121227. */
export interface Imahjong_FriendData20121227 {

    /** mahjong_FriendData20121227 plyGuid */
    plyGuid: (number|Long);

    /** mahjong_FriendData20121227 plyNickname */
    plyNickname: string;

    /** mahjong_FriendData20121227 plyMoney */
    plyMoney: number;

    /** mahjong_FriendData20121227 plyVipLev */
    plyVipLev: number;

    /** mahjong_FriendData20121227 plyUnreadMsgNum */
    plyUnreadMsgNum: number;

    /** mahjong_FriendData20121227 plyType */
    plyType: number;
}

/** Represents a mahjong_FriendData20121227. */
export class mahjong_FriendData20121227 implements Imahjong_FriendData20121227 {

    /**
     * Constructs a new mahjong_FriendData20121227.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_FriendData20121227);

    /** mahjong_FriendData20121227 plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_FriendData20121227 plyNickname. */
    public plyNickname: string;

    /** mahjong_FriendData20121227 plyMoney. */
    public plyMoney: number;

    /** mahjong_FriendData20121227 plyVipLev. */
    public plyVipLev: number;

    /** mahjong_FriendData20121227 plyUnreadMsgNum. */
    public plyUnreadMsgNum: number;

    /** mahjong_FriendData20121227 plyType. */
    public plyType: number;

    /**
     * Creates a new mahjong_FriendData20121227 instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_FriendData20121227 instance
     */
    public static create(properties?: Imahjong_FriendData20121227): mahjong_FriendData20121227;

    /**
     * Encodes the specified mahjong_FriendData20121227 message. Does not implicitly {@link mahjong_FriendData20121227.verify|verify} messages.
     * @param message mahjong_FriendData20121227 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_FriendData20121227, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_FriendData20121227 message, length delimited. Does not implicitly {@link mahjong_FriendData20121227.verify|verify} messages.
     * @param message mahjong_FriendData20121227 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_FriendData20121227, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_FriendData20121227 message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_FriendData20121227
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_FriendData20121227;

    /**
     * Decodes a mahjong_FriendData20121227 message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_FriendData20121227
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_FriendData20121227;

    /**
     * Verifies a mahjong_FriendData20121227 message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_FriendData20121227 message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_FriendData20121227
     */
    public static fromObject(object: { [k: string]: any }): mahjong_FriendData20121227;

    /**
     * Creates a plain object from a mahjong_FriendData20121227 message. Also converts values to other types if specified.
     * @param message mahjong_FriendData20121227
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_FriendData20121227, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_FriendData20121227 to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_get_online_award_req. */
export interface Imahjong_cb_get_online_award_req {

    /** mahjong_cb_get_online_award_req type */
    type: number;
}

/** Represents a mahjong_cb_get_online_award_req. */
export class mahjong_cb_get_online_award_req implements Imahjong_cb_get_online_award_req {

    /**
     * Constructs a new mahjong_cb_get_online_award_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_get_online_award_req);

    /** mahjong_cb_get_online_award_req type. */
    public type: number;

    /**
     * Creates a new mahjong_cb_get_online_award_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_get_online_award_req instance
     */
    public static create(properties?: Imahjong_cb_get_online_award_req): mahjong_cb_get_online_award_req;

    /**
     * Encodes the specified mahjong_cb_get_online_award_req message. Does not implicitly {@link mahjong_cb_get_online_award_req.verify|verify} messages.
     * @param message mahjong_cb_get_online_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_get_online_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_get_online_award_req message, length delimited. Does not implicitly {@link mahjong_cb_get_online_award_req.verify|verify} messages.
     * @param message mahjong_cb_get_online_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_get_online_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_get_online_award_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_get_online_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_get_online_award_req;

    /**
     * Decodes a mahjong_cb_get_online_award_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_get_online_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_get_online_award_req;

    /**
     * Verifies a mahjong_cb_get_online_award_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_get_online_award_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_get_online_award_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_get_online_award_req;

    /**
     * Creates a plain object from a mahjong_cb_get_online_award_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_get_online_award_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_get_online_award_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_get_online_award_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_valid_identify_info_ack. */
export interface Imahjong_lc_valid_identify_info_ack {

    /** mahjong_lc_valid_identify_info_ack ret */
    ret: number;

    /** mahjong_lc_valid_identify_info_ack message */
    message: string;
}

/** Represents a mahjong_lc_valid_identify_info_ack. */
export class mahjong_lc_valid_identify_info_ack implements Imahjong_lc_valid_identify_info_ack {

    /**
     * Constructs a new mahjong_lc_valid_identify_info_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_valid_identify_info_ack);

    /** mahjong_lc_valid_identify_info_ack ret. */
    public ret: number;

    /** mahjong_lc_valid_identify_info_ack message. */
    public message: string;

    /**
     * Creates a new mahjong_lc_valid_identify_info_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_valid_identify_info_ack instance
     */
    public static create(properties?: Imahjong_lc_valid_identify_info_ack): mahjong_lc_valid_identify_info_ack;

    /**
     * Encodes the specified mahjong_lc_valid_identify_info_ack message. Does not implicitly {@link mahjong_lc_valid_identify_info_ack.verify|verify} messages.
     * @param message mahjong_lc_valid_identify_info_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_valid_identify_info_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_valid_identify_info_ack message, length delimited. Does not implicitly {@link mahjong_lc_valid_identify_info_ack.verify|verify} messages.
     * @param message mahjong_lc_valid_identify_info_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_valid_identify_info_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_valid_identify_info_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_valid_identify_info_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_valid_identify_info_ack;

    /**
     * Decodes a mahjong_lc_valid_identify_info_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_valid_identify_info_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_valid_identify_info_ack;

    /**
     * Verifies a mahjong_lc_valid_identify_info_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_valid_identify_info_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_valid_identify_info_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_valid_identify_info_ack;

    /**
     * Creates a plain object from a mahjong_lc_valid_identify_info_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_valid_identify_info_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_valid_identify_info_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_valid_identify_info_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_visit_table_req. */
export interface Imahjong_cb_visit_table_req {

    /** mahjong_cb_visit_table_req tableId */
    tableId: number;

    /** mahjong_cb_visit_table_req password */
    password: string;

    /** mahjong_cb_visit_table_req chairId */
    chairId: number;
}

/** Represents a mahjong_cb_visit_table_req. */
export class mahjong_cb_visit_table_req implements Imahjong_cb_visit_table_req {

    /**
     * Constructs a new mahjong_cb_visit_table_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_visit_table_req);

    /** mahjong_cb_visit_table_req tableId. */
    public tableId: number;

    /** mahjong_cb_visit_table_req password. */
    public password: string;

    /** mahjong_cb_visit_table_req chairId. */
    public chairId: number;

    /**
     * Creates a new mahjong_cb_visit_table_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_visit_table_req instance
     */
    public static create(properties?: Imahjong_cb_visit_table_req): mahjong_cb_visit_table_req;

    /**
     * Encodes the specified mahjong_cb_visit_table_req message. Does not implicitly {@link mahjong_cb_visit_table_req.verify|verify} messages.
     * @param message mahjong_cb_visit_table_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_visit_table_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_visit_table_req message, length delimited. Does not implicitly {@link mahjong_cb_visit_table_req.verify|verify} messages.
     * @param message mahjong_cb_visit_table_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_visit_table_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_visit_table_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_visit_table_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_visit_table_req;

    /**
     * Decodes a mahjong_cb_visit_table_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_visit_table_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_visit_table_req;

    /**
     * Verifies a mahjong_cb_visit_table_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_visit_table_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_visit_table_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_visit_table_req;

    /**
     * Creates a plain object from a mahjong_cb_visit_table_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_visit_table_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_visit_table_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_visit_table_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_fetion_rank_list_ack. */
export interface Imahjong_lc_get_fetion_rank_list_ack {

    /** mahjong_lc_get_fetion_rank_list_ack rankList */
    rankList?: (Imahjong_RankItem[]|null);

    /** mahjong_lc_get_fetion_rank_list_ack type */
    type: number;
}

/** Represents a mahjong_lc_get_fetion_rank_list_ack. */
export class mahjong_lc_get_fetion_rank_list_ack implements Imahjong_lc_get_fetion_rank_list_ack {

    /**
     * Constructs a new mahjong_lc_get_fetion_rank_list_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_fetion_rank_list_ack);

    /** mahjong_lc_get_fetion_rank_list_ack rankList. */
    public rankList: Imahjong_RankItem[];

    /** mahjong_lc_get_fetion_rank_list_ack type. */
    public type: number;

    /**
     * Creates a new mahjong_lc_get_fetion_rank_list_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_fetion_rank_list_ack instance
     */
    public static create(properties?: Imahjong_lc_get_fetion_rank_list_ack): mahjong_lc_get_fetion_rank_list_ack;

    /**
     * Encodes the specified mahjong_lc_get_fetion_rank_list_ack message. Does not implicitly {@link mahjong_lc_get_fetion_rank_list_ack.verify|verify} messages.
     * @param message mahjong_lc_get_fetion_rank_list_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_fetion_rank_list_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_fetion_rank_list_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_fetion_rank_list_ack.verify|verify} messages.
     * @param message mahjong_lc_get_fetion_rank_list_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_fetion_rank_list_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_fetion_rank_list_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_fetion_rank_list_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_fetion_rank_list_ack;

    /**
     * Decodes a mahjong_lc_get_fetion_rank_list_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_fetion_rank_list_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_fetion_rank_list_ack;

    /**
     * Verifies a mahjong_lc_get_fetion_rank_list_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_fetion_rank_list_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_fetion_rank_list_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_fetion_rank_list_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_fetion_rank_list_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_fetion_rank_list_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_fetion_rank_list_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_fetion_rank_list_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_user_already_login_days_req. */
export interface Imahjong_cl_get_user_already_login_days_req {
}

/** Represents a mahjong_cl_get_user_already_login_days_req. */
export class mahjong_cl_get_user_already_login_days_req implements Imahjong_cl_get_user_already_login_days_req {

    /**
     * Constructs a new mahjong_cl_get_user_already_login_days_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_user_already_login_days_req);

    /**
     * Creates a new mahjong_cl_get_user_already_login_days_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_user_already_login_days_req instance
     */
    public static create(properties?: Imahjong_cl_get_user_already_login_days_req): mahjong_cl_get_user_already_login_days_req;

    /**
     * Encodes the specified mahjong_cl_get_user_already_login_days_req message. Does not implicitly {@link mahjong_cl_get_user_already_login_days_req.verify|verify} messages.
     * @param message mahjong_cl_get_user_already_login_days_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_user_already_login_days_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_user_already_login_days_req message, length delimited. Does not implicitly {@link mahjong_cl_get_user_already_login_days_req.verify|verify} messages.
     * @param message mahjong_cl_get_user_already_login_days_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_user_already_login_days_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_user_already_login_days_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_user_already_login_days_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_user_already_login_days_req;

    /**
     * Decodes a mahjong_cl_get_user_already_login_days_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_user_already_login_days_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_user_already_login_days_req;

    /**
     * Verifies a mahjong_cl_get_user_already_login_days_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_user_already_login_days_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_user_already_login_days_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_user_already_login_days_req;

    /**
     * Creates a plain object from a mahjong_cl_get_user_already_login_days_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_user_already_login_days_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_user_already_login_days_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_user_already_login_days_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_reload_user_data_req. */
export interface Imahjong_cl_reload_user_data_req {
}

/** Represents a mahjong_cl_reload_user_data_req. */
export class mahjong_cl_reload_user_data_req implements Imahjong_cl_reload_user_data_req {

    /**
     * Constructs a new mahjong_cl_reload_user_data_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_reload_user_data_req);

    /**
     * Creates a new mahjong_cl_reload_user_data_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_reload_user_data_req instance
     */
    public static create(properties?: Imahjong_cl_reload_user_data_req): mahjong_cl_reload_user_data_req;

    /**
     * Encodes the specified mahjong_cl_reload_user_data_req message. Does not implicitly {@link mahjong_cl_reload_user_data_req.verify|verify} messages.
     * @param message mahjong_cl_reload_user_data_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_reload_user_data_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_reload_user_data_req message, length delimited. Does not implicitly {@link mahjong_cl_reload_user_data_req.verify|verify} messages.
     * @param message mahjong_cl_reload_user_data_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_reload_user_data_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_reload_user_data_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_reload_user_data_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_reload_user_data_req;

    /**
     * Decodes a mahjong_cl_reload_user_data_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_reload_user_data_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_reload_user_data_req;

    /**
     * Verifies a mahjong_cl_reload_user_data_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_reload_user_data_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_reload_user_data_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_reload_user_data_req;

    /**
     * Creates a plain object from a mahjong_cl_reload_user_data_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_reload_user_data_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_reload_user_data_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_reload_user_data_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_PlayerStatus. */
export interface Imahjong_PlayerStatus {

    /** mahjong_PlayerStatus plyGuid */
    plyGuid: (number|Long);

    /** mahjong_PlayerStatus plyNickname */
    plyNickname: string;

    /** mahjong_PlayerStatus plyStatus */
    plyStatus: number;

    /** mahjong_PlayerStatus sex */
    sex: number;

    /** mahjong_PlayerStatus gameId */
    gameId: number;

    /** mahjong_PlayerStatus gameServerId */
    gameServerId: number;

    /** mahjong_PlayerStatus tableId */
    tableId: number;

    /** mahjong_PlayerStatus money */
    money: (number|Long);

    /** mahjong_PlayerStatus won */
    won: number;

    /** mahjong_PlayerStatus lost */
    lost: number;

    /** mahjong_PlayerStatus moneyRank */
    moneyRank: number;

    /** mahjong_PlayerStatus wonRank */
    wonRank: number;

    /** mahjong_PlayerStatus param_1 */
    param_1: number;

    /** mahjong_PlayerStatus param_2 */
    param_2: number;

    /** mahjong_PlayerStatus latitude */
    latitude: number;

    /** mahjong_PlayerStatus longitude */
    longitude: number;
}

/** Represents a mahjong_PlayerStatus. */
export class mahjong_PlayerStatus implements Imahjong_PlayerStatus {

    /**
     * Constructs a new mahjong_PlayerStatus.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_PlayerStatus);

    /** mahjong_PlayerStatus plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_PlayerStatus plyNickname. */
    public plyNickname: string;

    /** mahjong_PlayerStatus plyStatus. */
    public plyStatus: number;

    /** mahjong_PlayerStatus sex. */
    public sex: number;

    /** mahjong_PlayerStatus gameId. */
    public gameId: number;

    /** mahjong_PlayerStatus gameServerId. */
    public gameServerId: number;

    /** mahjong_PlayerStatus tableId. */
    public tableId: number;

    /** mahjong_PlayerStatus money. */
    public money: (number|Long);

    /** mahjong_PlayerStatus won. */
    public won: number;

    /** mahjong_PlayerStatus lost. */
    public lost: number;

    /** mahjong_PlayerStatus moneyRank. */
    public moneyRank: number;

    /** mahjong_PlayerStatus wonRank. */
    public wonRank: number;

    /** mahjong_PlayerStatus param_1. */
    public param_1: number;

    /** mahjong_PlayerStatus param_2. */
    public param_2: number;

    /** mahjong_PlayerStatus latitude. */
    public latitude: number;

    /** mahjong_PlayerStatus longitude. */
    public longitude: number;

    /**
     * Creates a new mahjong_PlayerStatus instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_PlayerStatus instance
     */
    public static create(properties?: Imahjong_PlayerStatus): mahjong_PlayerStatus;

    /**
     * Encodes the specified mahjong_PlayerStatus message. Does not implicitly {@link mahjong_PlayerStatus.verify|verify} messages.
     * @param message mahjong_PlayerStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_PlayerStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_PlayerStatus message, length delimited. Does not implicitly {@link mahjong_PlayerStatus.verify|verify} messages.
     * @param message mahjong_PlayerStatus message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_PlayerStatus, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_PlayerStatus message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_PlayerStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_PlayerStatus;

    /**
     * Decodes a mahjong_PlayerStatus message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_PlayerStatus
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_PlayerStatus;

    /**
     * Verifies a mahjong_PlayerStatus message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_PlayerStatus message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_PlayerStatus
     */
    public static fromObject(object: { [k: string]: any }): mahjong_PlayerStatus;

    /**
     * Creates a plain object from a mahjong_PlayerStatus message. Also converts values to other types if specified.
     * @param message mahjong_PlayerStatus
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_PlayerStatus, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_PlayerStatus to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_SafeRecord. */
export interface Imahjong_SafeRecord {

    /** mahjong_SafeRecord index */
    index: number;

    /** mahjong_SafeRecord gameId */
    gameId: number;

    /** mahjong_SafeRecord type */
    type: number;

    /** mahjong_SafeRecord opTime */
    opTime: number;

    /** mahjong_SafeRecord amount */
    amount: (number|Long);

    /** mahjong_SafeRecord remainingSum */
    remainingSum: (number|Long);
}

/** Represents a mahjong_SafeRecord. */
export class mahjong_SafeRecord implements Imahjong_SafeRecord {

    /**
     * Constructs a new mahjong_SafeRecord.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_SafeRecord);

    /** mahjong_SafeRecord index. */
    public index: number;

    /** mahjong_SafeRecord gameId. */
    public gameId: number;

    /** mahjong_SafeRecord type. */
    public type: number;

    /** mahjong_SafeRecord opTime. */
    public opTime: number;

    /** mahjong_SafeRecord amount. */
    public amount: (number|Long);

    /** mahjong_SafeRecord remainingSum. */
    public remainingSum: (number|Long);

    /**
     * Creates a new mahjong_SafeRecord instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_SafeRecord instance
     */
    public static create(properties?: Imahjong_SafeRecord): mahjong_SafeRecord;

    /**
     * Encodes the specified mahjong_SafeRecord message. Does not implicitly {@link mahjong_SafeRecord.verify|verify} messages.
     * @param message mahjong_SafeRecord message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_SafeRecord, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_SafeRecord message, length delimited. Does not implicitly {@link mahjong_SafeRecord.verify|verify} messages.
     * @param message mahjong_SafeRecord message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_SafeRecord, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_SafeRecord message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_SafeRecord
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_SafeRecord;

    /**
     * Decodes a mahjong_SafeRecord message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_SafeRecord
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_SafeRecord;

    /**
     * Verifies a mahjong_SafeRecord message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_SafeRecord message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_SafeRecord
     */
    public static fromObject(object: { [k: string]: any }): mahjong_SafeRecord;

    /**
     * Creates a plain object from a mahjong_SafeRecord message. Also converts values to other types if specified.
     * @param message mahjong_SafeRecord
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_SafeRecord, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_SafeRecord to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_CRAD_ROAD_INFO. */
export interface Imahjong_CRAD_ROAD_INFO {

    /** mahjong_CRAD_ROAD_INFO gameId */
    gameId: number;

    /** mahjong_CRAD_ROAD_INFO serverId */
    serverId: number;

    /** mahjong_CRAD_ROAD_INFO param */
    param: string;
}

/** Represents a mahjong_CRAD_ROAD_INFO. */
export class mahjong_CRAD_ROAD_INFO implements Imahjong_CRAD_ROAD_INFO {

    /**
     * Constructs a new mahjong_CRAD_ROAD_INFO.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_CRAD_ROAD_INFO);

    /** mahjong_CRAD_ROAD_INFO gameId. */
    public gameId: number;

    /** mahjong_CRAD_ROAD_INFO serverId. */
    public serverId: number;

    /** mahjong_CRAD_ROAD_INFO param. */
    public param: string;

    /**
     * Creates a new mahjong_CRAD_ROAD_INFO instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_CRAD_ROAD_INFO instance
     */
    public static create(properties?: Imahjong_CRAD_ROAD_INFO): mahjong_CRAD_ROAD_INFO;

    /**
     * Encodes the specified mahjong_CRAD_ROAD_INFO message. Does not implicitly {@link mahjong_CRAD_ROAD_INFO.verify|verify} messages.
     * @param message mahjong_CRAD_ROAD_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_CRAD_ROAD_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_CRAD_ROAD_INFO message, length delimited. Does not implicitly {@link mahjong_CRAD_ROAD_INFO.verify|verify} messages.
     * @param message mahjong_CRAD_ROAD_INFO message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_CRAD_ROAD_INFO, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_CRAD_ROAD_INFO message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_CRAD_ROAD_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_CRAD_ROAD_INFO;

    /**
     * Decodes a mahjong_CRAD_ROAD_INFO message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_CRAD_ROAD_INFO
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_CRAD_ROAD_INFO;

    /**
     * Verifies a mahjong_CRAD_ROAD_INFO message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_CRAD_ROAD_INFO message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_CRAD_ROAD_INFO
     */
    public static fromObject(object: { [k: string]: any }): mahjong_CRAD_ROAD_INFO;

    /**
     * Creates a plain object from a mahjong_CRAD_ROAD_INFO message. Also converts values to other types if specified.
     * @param message mahjong_CRAD_ROAD_INFO
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_CRAD_ROAD_INFO, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_CRAD_ROAD_INFO to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_send_user_data_change_not. */
export interface Imahjong_lc_send_user_data_change_not {

    /** mahjong_lc_send_user_data_change_not plyLobbyData */
    plyLobbyData: Imahjong_PlyLobbyData;

    /** mahjong_lc_send_user_data_change_not plyItems */
    plyItems?: (Imahjong_ItemData[]|null);

    /** mahjong_lc_send_user_data_change_not plyVip */
    plyVip: Imahjong_VipData;

    /** mahjong_lc_send_user_data_change_not plyGradingValue */
    plyGradingValue: number;
}

/** Represents a mahjong_lc_send_user_data_change_not. */
export class mahjong_lc_send_user_data_change_not implements Imahjong_lc_send_user_data_change_not {

    /**
     * Constructs a new mahjong_lc_send_user_data_change_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_send_user_data_change_not);

    /** mahjong_lc_send_user_data_change_not plyLobbyData. */
    public plyLobbyData: Imahjong_PlyLobbyData;

    /** mahjong_lc_send_user_data_change_not plyItems. */
    public plyItems: Imahjong_ItemData[];

    /** mahjong_lc_send_user_data_change_not plyVip. */
    public plyVip: Imahjong_VipData;

    /** mahjong_lc_send_user_data_change_not plyGradingValue. */
    public plyGradingValue: number;

    /**
     * Creates a new mahjong_lc_send_user_data_change_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_send_user_data_change_not instance
     */
    public static create(properties?: Imahjong_lc_send_user_data_change_not): mahjong_lc_send_user_data_change_not;

    /**
     * Encodes the specified mahjong_lc_send_user_data_change_not message. Does not implicitly {@link mahjong_lc_send_user_data_change_not.verify|verify} messages.
     * @param message mahjong_lc_send_user_data_change_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_send_user_data_change_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_send_user_data_change_not message, length delimited. Does not implicitly {@link mahjong_lc_send_user_data_change_not.verify|verify} messages.
     * @param message mahjong_lc_send_user_data_change_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_send_user_data_change_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_send_user_data_change_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_send_user_data_change_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_send_user_data_change_not;

    /**
     * Decodes a mahjong_lc_send_user_data_change_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_send_user_data_change_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_send_user_data_change_not;

    /**
     * Verifies a mahjong_lc_send_user_data_change_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_send_user_data_change_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_send_user_data_change_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_send_user_data_change_not;

    /**
     * Creates a plain object from a mahjong_lc_send_user_data_change_not message. Also converts values to other types if specified.
     * @param message mahjong_lc_send_user_data_change_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_send_user_data_change_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_send_user_data_change_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_MailInfo. */
export interface Imahjong_MailInfo {

    /** mahjong_MailInfo mailId */
    mailId: number;

    /** mahjong_MailInfo mailMsg */
    mailMsg: string;

    /** mahjong_MailInfo mailMsgType */
    mailMsgType: number;

    /** mahjong_MailInfo mailSendTime */
    mailSendTime: number;

    /** mahjong_MailInfo mailStatus */
    mailStatus: number;

    /** mahjong_MailInfo mailImg */
    mailImg: string;

    /** mahjong_MailInfo mailAwardId */
    mailAwardId: number;
}

/** Represents a mahjong_MailInfo. */
export class mahjong_MailInfo implements Imahjong_MailInfo {

    /**
     * Constructs a new mahjong_MailInfo.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_MailInfo);

    /** mahjong_MailInfo mailId. */
    public mailId: number;

    /** mahjong_MailInfo mailMsg. */
    public mailMsg: string;

    /** mahjong_MailInfo mailMsgType. */
    public mailMsgType: number;

    /** mahjong_MailInfo mailSendTime. */
    public mailSendTime: number;

    /** mahjong_MailInfo mailStatus. */
    public mailStatus: number;

    /** mahjong_MailInfo mailImg. */
    public mailImg: string;

    /** mahjong_MailInfo mailAwardId. */
    public mailAwardId: number;

    /**
     * Creates a new mahjong_MailInfo instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_MailInfo instance
     */
    public static create(properties?: Imahjong_MailInfo): mahjong_MailInfo;

    /**
     * Encodes the specified mahjong_MailInfo message. Does not implicitly {@link mahjong_MailInfo.verify|verify} messages.
     * @param message mahjong_MailInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_MailInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_MailInfo message, length delimited. Does not implicitly {@link mahjong_MailInfo.verify|verify} messages.
     * @param message mahjong_MailInfo message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_MailInfo, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_MailInfo message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_MailInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_MailInfo;

    /**
     * Decodes a mahjong_MailInfo message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_MailInfo
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_MailInfo;

    /**
     * Verifies a mahjong_MailInfo message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_MailInfo message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_MailInfo
     */
    public static fromObject(object: { [k: string]: any }): mahjong_MailInfo;

    /**
     * Creates a plain object from a mahjong_MailInfo message. Also converts values to other types if specified.
     * @param message mahjong_MailInfo
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_MailInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_MailInfo to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_rp_check_relief_status_req. */
export interface Imahjong_cl_rp_check_relief_status_req {

    /** mahjong_cl_rp_check_relief_status_req roomType */
    roomType: number;
}

/** Represents a mahjong_cl_rp_check_relief_status_req. */
export class mahjong_cl_rp_check_relief_status_req implements Imahjong_cl_rp_check_relief_status_req {

    /**
     * Constructs a new mahjong_cl_rp_check_relief_status_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_rp_check_relief_status_req);

    /** mahjong_cl_rp_check_relief_status_req roomType. */
    public roomType: number;

    /**
     * Creates a new mahjong_cl_rp_check_relief_status_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_rp_check_relief_status_req instance
     */
    public static create(properties?: Imahjong_cl_rp_check_relief_status_req): mahjong_cl_rp_check_relief_status_req;

    /**
     * Encodes the specified mahjong_cl_rp_check_relief_status_req message. Does not implicitly {@link mahjong_cl_rp_check_relief_status_req.verify|verify} messages.
     * @param message mahjong_cl_rp_check_relief_status_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_rp_check_relief_status_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_rp_check_relief_status_req message, length delimited. Does not implicitly {@link mahjong_cl_rp_check_relief_status_req.verify|verify} messages.
     * @param message mahjong_cl_rp_check_relief_status_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_rp_check_relief_status_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_rp_check_relief_status_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_rp_check_relief_status_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_rp_check_relief_status_req;

    /**
     * Decodes a mahjong_cl_rp_check_relief_status_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_rp_check_relief_status_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_rp_check_relief_status_req;

    /**
     * Verifies a mahjong_cl_rp_check_relief_status_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_rp_check_relief_status_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_rp_check_relief_status_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_rp_check_relief_status_req;

    /**
     * Creates a plain object from a mahjong_cl_rp_check_relief_status_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_rp_check_relief_status_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_rp_check_relief_status_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_rp_check_relief_status_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_assist_info_data_ack. */
export interface Imahjong_lc_get_assist_info_data_ack {

    /** mahjong_lc_get_assist_info_data_ack ret */
    ret: number;

    /** mahjong_lc_get_assist_info_data_ack items */
    items?: (Imahjong_AssistInfoData[]|null);
}

/** Represents a mahjong_lc_get_assist_info_data_ack. */
export class mahjong_lc_get_assist_info_data_ack implements Imahjong_lc_get_assist_info_data_ack {

    /**
     * Constructs a new mahjong_lc_get_assist_info_data_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_assist_info_data_ack);

    /** mahjong_lc_get_assist_info_data_ack ret. */
    public ret: number;

    /** mahjong_lc_get_assist_info_data_ack items. */
    public items: Imahjong_AssistInfoData[];

    /**
     * Creates a new mahjong_lc_get_assist_info_data_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_assist_info_data_ack instance
     */
    public static create(properties?: Imahjong_lc_get_assist_info_data_ack): mahjong_lc_get_assist_info_data_ack;

    /**
     * Encodes the specified mahjong_lc_get_assist_info_data_ack message. Does not implicitly {@link mahjong_lc_get_assist_info_data_ack.verify|verify} messages.
     * @param message mahjong_lc_get_assist_info_data_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_assist_info_data_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_assist_info_data_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_assist_info_data_ack.verify|verify} messages.
     * @param message mahjong_lc_get_assist_info_data_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_assist_info_data_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_assist_info_data_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_assist_info_data_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_assist_info_data_ack;

    /**
     * Decodes a mahjong_lc_get_assist_info_data_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_assist_info_data_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_assist_info_data_ack;

    /**
     * Verifies a mahjong_lc_get_assist_info_data_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_assist_info_data_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_assist_info_data_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_assist_info_data_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_assist_info_data_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_assist_info_data_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_assist_info_data_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_assist_info_data_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_send_disconnect_ack. */
export interface Imahjong_bc_send_disconnect_ack {

    /** mahjong_bc_send_disconnect_ack ret */
    ret: number;
}

/** Represents a mahjong_bc_send_disconnect_ack. */
export class mahjong_bc_send_disconnect_ack implements Imahjong_bc_send_disconnect_ack {

    /**
     * Constructs a new mahjong_bc_send_disconnect_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_send_disconnect_ack);

    /** mahjong_bc_send_disconnect_ack ret. */
    public ret: number;

    /**
     * Creates a new mahjong_bc_send_disconnect_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_send_disconnect_ack instance
     */
    public static create(properties?: Imahjong_bc_send_disconnect_ack): mahjong_bc_send_disconnect_ack;

    /**
     * Encodes the specified mahjong_bc_send_disconnect_ack message. Does not implicitly {@link mahjong_bc_send_disconnect_ack.verify|verify} messages.
     * @param message mahjong_bc_send_disconnect_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_send_disconnect_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_send_disconnect_ack message, length delimited. Does not implicitly {@link mahjong_bc_send_disconnect_ack.verify|verify} messages.
     * @param message mahjong_bc_send_disconnect_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_send_disconnect_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_send_disconnect_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_send_disconnect_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_send_disconnect_ack;

    /**
     * Decodes a mahjong_bc_send_disconnect_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_send_disconnect_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_send_disconnect_ack;

    /**
     * Verifies a mahjong_bc_send_disconnect_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_send_disconnect_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_send_disconnect_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_send_disconnect_ack;

    /**
     * Creates a plain object from a mahjong_bc_send_disconnect_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_send_disconnect_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_send_disconnect_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_send_disconnect_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_get_player_level_req. */
export interface Imahjong_cb_get_player_level_req {
}

/** Represents a mahjong_cb_get_player_level_req. */
export class mahjong_cb_get_player_level_req implements Imahjong_cb_get_player_level_req {

    /**
     * Constructs a new mahjong_cb_get_player_level_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_get_player_level_req);

    /**
     * Creates a new mahjong_cb_get_player_level_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_get_player_level_req instance
     */
    public static create(properties?: Imahjong_cb_get_player_level_req): mahjong_cb_get_player_level_req;

    /**
     * Encodes the specified mahjong_cb_get_player_level_req message. Does not implicitly {@link mahjong_cb_get_player_level_req.verify|verify} messages.
     * @param message mahjong_cb_get_player_level_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_get_player_level_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_get_player_level_req message, length delimited. Does not implicitly {@link mahjong_cb_get_player_level_req.verify|verify} messages.
     * @param message mahjong_cb_get_player_level_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_get_player_level_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_get_player_level_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_get_player_level_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_get_player_level_req;

    /**
     * Decodes a mahjong_cb_get_player_level_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_get_player_level_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_get_player_level_req;

    /**
     * Verifies a mahjong_cb_get_player_level_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_get_player_level_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_get_player_level_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_get_player_level_req;

    /**
     * Creates a plain object from a mahjong_cb_get_player_level_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_get_player_level_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_get_player_level_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_get_player_level_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_ply_join_not. */
export interface Imahjong_bc_ply_join_not {

    /** mahjong_bc_ply_join_not plyData */
    plyData: Imahjong_PlyBaseData;
}

/** Represents a mahjong_bc_ply_join_not. */
export class mahjong_bc_ply_join_not implements Imahjong_bc_ply_join_not {

    /**
     * Constructs a new mahjong_bc_ply_join_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_ply_join_not);

    /** mahjong_bc_ply_join_not plyData. */
    public plyData: Imahjong_PlyBaseData;

    /**
     * Creates a new mahjong_bc_ply_join_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_ply_join_not instance
     */
    public static create(properties?: Imahjong_bc_ply_join_not): mahjong_bc_ply_join_not;

    /**
     * Encodes the specified mahjong_bc_ply_join_not message. Does not implicitly {@link mahjong_bc_ply_join_not.verify|verify} messages.
     * @param message mahjong_bc_ply_join_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_ply_join_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_ply_join_not message, length delimited. Does not implicitly {@link mahjong_bc_ply_join_not.verify|verify} messages.
     * @param message mahjong_bc_ply_join_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_ply_join_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_ply_join_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_ply_join_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_ply_join_not;

    /**
     * Decodes a mahjong_bc_ply_join_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_ply_join_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_ply_join_not;

    /**
     * Verifies a mahjong_bc_ply_join_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_ply_join_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_ply_join_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_ply_join_not;

    /**
     * Creates a plain object from a mahjong_bc_ply_join_not message. Also converts values to other types if specified.
     * @param message mahjong_bc_ply_join_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_ply_join_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_ply_join_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_RL_PLAYER_STATUS. */
export interface Imahjong_RL_PLAYER_STATUS {

    /** mahjong_RL_PLAYER_STATUS plyGuid */
    plyGuid: (number|Long);

    /** mahjong_RL_PLAYER_STATUS plyNickname */
    plyNickname: string;

    /** mahjong_RL_PLAYER_STATUS loginServerId */
    loginServerId: number;

    /** mahjong_RL_PLAYER_STATUS mainGameId */
    mainGameId: number;

    /** mahjong_RL_PLAYER_STATUS plyStatus */
    plyStatus: number;
}

/** Represents a mahjong_RL_PLAYER_STATUS. */
export class mahjong_RL_PLAYER_STATUS implements Imahjong_RL_PLAYER_STATUS {

    /**
     * Constructs a new mahjong_RL_PLAYER_STATUS.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_RL_PLAYER_STATUS);

    /** mahjong_RL_PLAYER_STATUS plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_RL_PLAYER_STATUS plyNickname. */
    public plyNickname: string;

    /** mahjong_RL_PLAYER_STATUS loginServerId. */
    public loginServerId: number;

    /** mahjong_RL_PLAYER_STATUS mainGameId. */
    public mainGameId: number;

    /** mahjong_RL_PLAYER_STATUS plyStatus. */
    public plyStatus: number;

    /**
     * Creates a new mahjong_RL_PLAYER_STATUS instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_RL_PLAYER_STATUS instance
     */
    public static create(properties?: Imahjong_RL_PLAYER_STATUS): mahjong_RL_PLAYER_STATUS;

    /**
     * Encodes the specified mahjong_RL_PLAYER_STATUS message. Does not implicitly {@link mahjong_RL_PLAYER_STATUS.verify|verify} messages.
     * @param message mahjong_RL_PLAYER_STATUS message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_RL_PLAYER_STATUS, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_RL_PLAYER_STATUS message, length delimited. Does not implicitly {@link mahjong_RL_PLAYER_STATUS.verify|verify} messages.
     * @param message mahjong_RL_PLAYER_STATUS message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_RL_PLAYER_STATUS, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_RL_PLAYER_STATUS message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_RL_PLAYER_STATUS
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_RL_PLAYER_STATUS;

    /**
     * Decodes a mahjong_RL_PLAYER_STATUS message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_RL_PLAYER_STATUS
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_RL_PLAYER_STATUS;

    /**
     * Verifies a mahjong_RL_PLAYER_STATUS message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_RL_PLAYER_STATUS message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_RL_PLAYER_STATUS
     */
    public static fromObject(object: { [k: string]: any }): mahjong_RL_PLAYER_STATUS;

    /**
     * Creates a plain object from a mahjong_RL_PLAYER_STATUS message. Also converts values to other types if specified.
     * @param message mahjong_RL_PLAYER_STATUS
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_RL_PLAYER_STATUS, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_RL_PLAYER_STATUS to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_get_round_award_ack. */
export interface Imahjong_bc_get_round_award_ack {

    /** mahjong_bc_get_round_award_ack ret */
    ret: number;

    /** mahjong_bc_get_round_award_ack round */
    round: number;

    /** mahjong_bc_get_round_award_ack awardRound */
    awardRound: number;

    /** mahjong_bc_get_round_award_ack money */
    money: number;

    /** mahjong_bc_get_round_award_ack message */
    message: string;
}

/** Represents a mahjong_bc_get_round_award_ack. */
export class mahjong_bc_get_round_award_ack implements Imahjong_bc_get_round_award_ack {

    /**
     * Constructs a new mahjong_bc_get_round_award_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_get_round_award_ack);

    /** mahjong_bc_get_round_award_ack ret. */
    public ret: number;

    /** mahjong_bc_get_round_award_ack round. */
    public round: number;

    /** mahjong_bc_get_round_award_ack awardRound. */
    public awardRound: number;

    /** mahjong_bc_get_round_award_ack money. */
    public money: number;

    /** mahjong_bc_get_round_award_ack message. */
    public message: string;

    /**
     * Creates a new mahjong_bc_get_round_award_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_get_round_award_ack instance
     */
    public static create(properties?: Imahjong_bc_get_round_award_ack): mahjong_bc_get_round_award_ack;

    /**
     * Encodes the specified mahjong_bc_get_round_award_ack message. Does not implicitly {@link mahjong_bc_get_round_award_ack.verify|verify} messages.
     * @param message mahjong_bc_get_round_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_get_round_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_get_round_award_ack message, length delimited. Does not implicitly {@link mahjong_bc_get_round_award_ack.verify|verify} messages.
     * @param message mahjong_bc_get_round_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_get_round_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_get_round_award_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_get_round_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_get_round_award_ack;

    /**
     * Decodes a mahjong_bc_get_round_award_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_get_round_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_get_round_award_ack;

    /**
     * Verifies a mahjong_bc_get_round_award_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_get_round_award_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_get_round_award_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_get_round_award_ack;

    /**
     * Creates a plain object from a mahjong_bc_get_round_award_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_get_round_award_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_get_round_award_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_get_round_award_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_integal_condition_noti. */
export interface Imahjong_bc_integal_condition_noti {

    /** mahjong_bc_integal_condition_noti type */
    type: number;

    /** mahjong_bc_integal_condition_noti ruleId */
    ruleId: number;

    /** mahjong_bc_integal_condition_noti ruleIdAndroid */
    ruleIdAndroid: number;

    /** mahjong_bc_integal_condition_noti ruleDesc */
    ruleDesc: string;
}

/** Represents a mahjong_bc_integal_condition_noti. */
export class mahjong_bc_integal_condition_noti implements Imahjong_bc_integal_condition_noti {

    /**
     * Constructs a new mahjong_bc_integal_condition_noti.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_integal_condition_noti);

    /** mahjong_bc_integal_condition_noti type. */
    public type: number;

    /** mahjong_bc_integal_condition_noti ruleId. */
    public ruleId: number;

    /** mahjong_bc_integal_condition_noti ruleIdAndroid. */
    public ruleIdAndroid: number;

    /** mahjong_bc_integal_condition_noti ruleDesc. */
    public ruleDesc: string;

    /**
     * Creates a new mahjong_bc_integal_condition_noti instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_integal_condition_noti instance
     */
    public static create(properties?: Imahjong_bc_integal_condition_noti): mahjong_bc_integal_condition_noti;

    /**
     * Encodes the specified mahjong_bc_integal_condition_noti message. Does not implicitly {@link mahjong_bc_integal_condition_noti.verify|verify} messages.
     * @param message mahjong_bc_integal_condition_noti message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_integal_condition_noti, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_integal_condition_noti message, length delimited. Does not implicitly {@link mahjong_bc_integal_condition_noti.verify|verify} messages.
     * @param message mahjong_bc_integal_condition_noti message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_integal_condition_noti, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_integal_condition_noti message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_integal_condition_noti
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_integal_condition_noti;

    /**
     * Decodes a mahjong_bc_integal_condition_noti message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_integal_condition_noti
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_integal_condition_noti;

    /**
     * Verifies a mahjong_bc_integal_condition_noti message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_integal_condition_noti message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_integal_condition_noti
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_integal_condition_noti;

    /**
     * Creates a plain object from a mahjong_bc_integal_condition_noti message. Also converts values to other types if specified.
     * @param message mahjong_bc_integal_condition_noti
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_integal_condition_noti, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_integal_condition_noti to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_get_round_award_req. */
export interface Imahjong_cb_get_round_award_req {

    /** mahjong_cb_get_round_award_req type */
    type: number;
}

/** Represents a mahjong_cb_get_round_award_req. */
export class mahjong_cb_get_round_award_req implements Imahjong_cb_get_round_award_req {

    /**
     * Constructs a new mahjong_cb_get_round_award_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_get_round_award_req);

    /** mahjong_cb_get_round_award_req type. */
    public type: number;

    /**
     * Creates a new mahjong_cb_get_round_award_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_get_round_award_req instance
     */
    public static create(properties?: Imahjong_cb_get_round_award_req): mahjong_cb_get_round_award_req;

    /**
     * Encodes the specified mahjong_cb_get_round_award_req message. Does not implicitly {@link mahjong_cb_get_round_award_req.verify|verify} messages.
     * @param message mahjong_cb_get_round_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_get_round_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_get_round_award_req message, length delimited. Does not implicitly {@link mahjong_cb_get_round_award_req.verify|verify} messages.
     * @param message mahjong_cb_get_round_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_get_round_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_get_round_award_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_get_round_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_get_round_award_req;

    /**
     * Decodes a mahjong_cb_get_round_award_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_get_round_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_get_round_award_req;

    /**
     * Verifies a mahjong_cb_get_round_award_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_get_round_award_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_get_round_award_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_get_round_award_req;

    /**
     * Creates a plain object from a mahjong_cb_get_round_award_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_get_round_award_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_get_round_award_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_get_round_award_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_win_round_score_req. */
export interface Imahjong_cl_get_win_round_score_req {

    /** mahjong_cl_get_win_round_score_req plyGuid */
    plyGuid: (number|Long);
}

/** Represents a mahjong_cl_get_win_round_score_req. */
export class mahjong_cl_get_win_round_score_req implements Imahjong_cl_get_win_round_score_req {

    /**
     * Constructs a new mahjong_cl_get_win_round_score_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_win_round_score_req);

    /** mahjong_cl_get_win_round_score_req plyGuid. */
    public plyGuid: (number|Long);

    /**
     * Creates a new mahjong_cl_get_win_round_score_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_win_round_score_req instance
     */
    public static create(properties?: Imahjong_cl_get_win_round_score_req): mahjong_cl_get_win_round_score_req;

    /**
     * Encodes the specified mahjong_cl_get_win_round_score_req message. Does not implicitly {@link mahjong_cl_get_win_round_score_req.verify|verify} messages.
     * @param message mahjong_cl_get_win_round_score_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_win_round_score_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_win_round_score_req message, length delimited. Does not implicitly {@link mahjong_cl_get_win_round_score_req.verify|verify} messages.
     * @param message mahjong_cl_get_win_round_score_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_win_round_score_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_win_round_score_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_win_round_score_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_win_round_score_req;

    /**
     * Decodes a mahjong_cl_get_win_round_score_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_win_round_score_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_win_round_score_req;

    /**
     * Verifies a mahjong_cl_get_win_round_score_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_win_round_score_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_win_round_score_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_win_round_score_req;

    /**
     * Creates a plain object from a mahjong_cl_get_win_round_score_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_win_round_score_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_win_round_score_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_win_round_score_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_update_big_card_user_info_ack. */
export interface Imahjong_bc_update_big_card_user_info_ack {

    /** mahjong_bc_update_big_card_user_info_ack ret */
    ret: number;
}

/** Represents a mahjong_bc_update_big_card_user_info_ack. */
export class mahjong_bc_update_big_card_user_info_ack implements Imahjong_bc_update_big_card_user_info_ack {

    /**
     * Constructs a new mahjong_bc_update_big_card_user_info_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_update_big_card_user_info_ack);

    /** mahjong_bc_update_big_card_user_info_ack ret. */
    public ret: number;

    /**
     * Creates a new mahjong_bc_update_big_card_user_info_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_update_big_card_user_info_ack instance
     */
    public static create(properties?: Imahjong_bc_update_big_card_user_info_ack): mahjong_bc_update_big_card_user_info_ack;

    /**
     * Encodes the specified mahjong_bc_update_big_card_user_info_ack message. Does not implicitly {@link mahjong_bc_update_big_card_user_info_ack.verify|verify} messages.
     * @param message mahjong_bc_update_big_card_user_info_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_update_big_card_user_info_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_update_big_card_user_info_ack message, length delimited. Does not implicitly {@link mahjong_bc_update_big_card_user_info_ack.verify|verify} messages.
     * @param message mahjong_bc_update_big_card_user_info_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_update_big_card_user_info_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_update_big_card_user_info_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_update_big_card_user_info_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_update_big_card_user_info_ack;

    /**
     * Decodes a mahjong_bc_update_big_card_user_info_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_update_big_card_user_info_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_update_big_card_user_info_ack;

    /**
     * Verifies a mahjong_bc_update_big_card_user_info_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_update_big_card_user_info_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_update_big_card_user_info_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_update_big_card_user_info_ack;

    /**
     * Creates a plain object from a mahjong_bc_update_big_card_user_info_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_update_big_card_user_info_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_update_big_card_user_info_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_update_big_card_user_info_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_win_lose_limit_exceed_not. */
export interface Imahjong_bc_win_lose_limit_exceed_not {

    /** mahjong_bc_win_lose_limit_exceed_not flag */
    flag: number;

    /** mahjong_bc_win_lose_limit_exceed_not errMsg */
    errMsg: string;
}

/** Represents a mahjong_bc_win_lose_limit_exceed_not. */
export class mahjong_bc_win_lose_limit_exceed_not implements Imahjong_bc_win_lose_limit_exceed_not {

    /**
     * Constructs a new mahjong_bc_win_lose_limit_exceed_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_win_lose_limit_exceed_not);

    /** mahjong_bc_win_lose_limit_exceed_not flag. */
    public flag: number;

    /** mahjong_bc_win_lose_limit_exceed_not errMsg. */
    public errMsg: string;

    /**
     * Creates a new mahjong_bc_win_lose_limit_exceed_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_win_lose_limit_exceed_not instance
     */
    public static create(properties?: Imahjong_bc_win_lose_limit_exceed_not): mahjong_bc_win_lose_limit_exceed_not;

    /**
     * Encodes the specified mahjong_bc_win_lose_limit_exceed_not message. Does not implicitly {@link mahjong_bc_win_lose_limit_exceed_not.verify|verify} messages.
     * @param message mahjong_bc_win_lose_limit_exceed_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_win_lose_limit_exceed_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_win_lose_limit_exceed_not message, length delimited. Does not implicitly {@link mahjong_bc_win_lose_limit_exceed_not.verify|verify} messages.
     * @param message mahjong_bc_win_lose_limit_exceed_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_win_lose_limit_exceed_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_win_lose_limit_exceed_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_win_lose_limit_exceed_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_win_lose_limit_exceed_not;

    /**
     * Decodes a mahjong_bc_win_lose_limit_exceed_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_win_lose_limit_exceed_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_win_lose_limit_exceed_not;

    /**
     * Verifies a mahjong_bc_win_lose_limit_exceed_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_win_lose_limit_exceed_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_win_lose_limit_exceed_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_win_lose_limit_exceed_not;

    /**
     * Creates a plain object from a mahjong_bc_win_lose_limit_exceed_not message. Also converts values to other types if specified.
     * @param message mahjong_bc_win_lose_limit_exceed_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_win_lose_limit_exceed_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_win_lose_limit_exceed_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_PlyLobbyData20121227. */
export interface Imahjong_PlyLobbyData20121227 {

    /** mahjong_PlyLobbyData20121227 plyGuid */
    plyGuid: (number|Long);

    /** mahjong_PlyLobbyData20121227 nickname */
    nickname: string;

    /** mahjong_PlyLobbyData20121227 gift */
    gift: number;

    /** mahjong_PlyLobbyData20121227 money */
    money: number;

    /** mahjong_PlyLobbyData20121227 score */
    score: number;

    /** mahjong_PlyLobbyData20121227 won */
    won: number;

    /** mahjong_PlyLobbyData20121227 lost */
    lost: number;

    /** mahjong_PlyLobbyData20121227 moneyRank */
    moneyRank: number;

    /** mahjong_PlyLobbyData20121227 wonRank */
    wonRank: number;
}

/** Represents a mahjong_PlyLobbyData20121227. */
export class mahjong_PlyLobbyData20121227 implements Imahjong_PlyLobbyData20121227 {

    /**
     * Constructs a new mahjong_PlyLobbyData20121227.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_PlyLobbyData20121227);

    /** mahjong_PlyLobbyData20121227 plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_PlyLobbyData20121227 nickname. */
    public nickname: string;

    /** mahjong_PlyLobbyData20121227 gift. */
    public gift: number;

    /** mahjong_PlyLobbyData20121227 money. */
    public money: number;

    /** mahjong_PlyLobbyData20121227 score. */
    public score: number;

    /** mahjong_PlyLobbyData20121227 won. */
    public won: number;

    /** mahjong_PlyLobbyData20121227 lost. */
    public lost: number;

    /** mahjong_PlyLobbyData20121227 moneyRank. */
    public moneyRank: number;

    /** mahjong_PlyLobbyData20121227 wonRank. */
    public wonRank: number;

    /**
     * Creates a new mahjong_PlyLobbyData20121227 instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_PlyLobbyData20121227 instance
     */
    public static create(properties?: Imahjong_PlyLobbyData20121227): mahjong_PlyLobbyData20121227;

    /**
     * Encodes the specified mahjong_PlyLobbyData20121227 message. Does not implicitly {@link mahjong_PlyLobbyData20121227.verify|verify} messages.
     * @param message mahjong_PlyLobbyData20121227 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_PlyLobbyData20121227, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_PlyLobbyData20121227 message, length delimited. Does not implicitly {@link mahjong_PlyLobbyData20121227.verify|verify} messages.
     * @param message mahjong_PlyLobbyData20121227 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_PlyLobbyData20121227, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_PlyLobbyData20121227 message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_PlyLobbyData20121227
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_PlyLobbyData20121227;

    /**
     * Decodes a mahjong_PlyLobbyData20121227 message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_PlyLobbyData20121227
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_PlyLobbyData20121227;

    /**
     * Verifies a mahjong_PlyLobbyData20121227 message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_PlyLobbyData20121227 message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_PlyLobbyData20121227
     */
    public static fromObject(object: { [k: string]: any }): mahjong_PlyLobbyData20121227;

    /**
     * Creates a plain object from a mahjong_PlyLobbyData20121227 message. Also converts values to other types if specified.
     * @param message mahjong_PlyLobbyData20121227
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_PlyLobbyData20121227, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_PlyLobbyData20121227 to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_calc_player_round_count_not. */
export interface Imahjong_bc_calc_player_round_count_not {

    /** mahjong_bc_calc_player_round_count_not num */
    num: number;
}

/** Represents a mahjong_bc_calc_player_round_count_not. */
export class mahjong_bc_calc_player_round_count_not implements Imahjong_bc_calc_player_round_count_not {

    /**
     * Constructs a new mahjong_bc_calc_player_round_count_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_calc_player_round_count_not);

    /** mahjong_bc_calc_player_round_count_not num. */
    public num: number;

    /**
     * Creates a new mahjong_bc_calc_player_round_count_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_calc_player_round_count_not instance
     */
    public static create(properties?: Imahjong_bc_calc_player_round_count_not): mahjong_bc_calc_player_round_count_not;

    /**
     * Encodes the specified mahjong_bc_calc_player_round_count_not message. Does not implicitly {@link mahjong_bc_calc_player_round_count_not.verify|verify} messages.
     * @param message mahjong_bc_calc_player_round_count_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_calc_player_round_count_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_calc_player_round_count_not message, length delimited. Does not implicitly {@link mahjong_bc_calc_player_round_count_not.verify|verify} messages.
     * @param message mahjong_bc_calc_player_round_count_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_calc_player_round_count_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_calc_player_round_count_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_calc_player_round_count_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_calc_player_round_count_not;

    /**
     * Decodes a mahjong_bc_calc_player_round_count_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_calc_player_round_count_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_calc_player_round_count_not;

    /**
     * Verifies a mahjong_bc_calc_player_round_count_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_calc_player_round_count_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_calc_player_round_count_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_calc_player_round_count_not;

    /**
     * Creates a plain object from a mahjong_bc_calc_player_round_count_not message. Also converts values to other types if specified.
     * @param message mahjong_bc_calc_player_round_count_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_calc_player_round_count_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_calc_player_round_count_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_coupon_not. */
export interface Imahjong_bc_coupon_not {

    /** mahjong_bc_coupon_not ret */
    ret: number;

    /** mahjong_bc_coupon_not num */
    num: number;
}

/** Represents a mahjong_bc_coupon_not. */
export class mahjong_bc_coupon_not implements Imahjong_bc_coupon_not {

    /**
     * Constructs a new mahjong_bc_coupon_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_coupon_not);

    /** mahjong_bc_coupon_not ret. */
    public ret: number;

    /** mahjong_bc_coupon_not num. */
    public num: number;

    /**
     * Creates a new mahjong_bc_coupon_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_coupon_not instance
     */
    public static create(properties?: Imahjong_bc_coupon_not): mahjong_bc_coupon_not;

    /**
     * Encodes the specified mahjong_bc_coupon_not message. Does not implicitly {@link mahjong_bc_coupon_not.verify|verify} messages.
     * @param message mahjong_bc_coupon_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_coupon_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_coupon_not message, length delimited. Does not implicitly {@link mahjong_bc_coupon_not.verify|verify} messages.
     * @param message mahjong_bc_coupon_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_coupon_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_coupon_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_coupon_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_coupon_not;

    /**
     * Decodes a mahjong_bc_coupon_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_coupon_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_coupon_not;

    /**
     * Verifies a mahjong_bc_coupon_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_coupon_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_coupon_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_coupon_not;

    /**
     * Creates a plain object from a mahjong_bc_coupon_not message. Also converts values to other types if specified.
     * @param message mahjong_bc_coupon_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_coupon_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_coupon_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_get_assist_info_data_ack. */
export interface Imahjong_bc_get_assist_info_data_ack {

    /** mahjong_bc_get_assist_info_data_ack ret */
    ret: number;

    /** mahjong_bc_get_assist_info_data_ack dstPlyGuid */
    dstPlyGuid: (number|Long);

    /** mahjong_bc_get_assist_info_data_ack items */
    items?: (Imahjong_AssistInfoData[]|null);
}

/** Represents a mahjong_bc_get_assist_info_data_ack. */
export class mahjong_bc_get_assist_info_data_ack implements Imahjong_bc_get_assist_info_data_ack {

    /**
     * Constructs a new mahjong_bc_get_assist_info_data_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_get_assist_info_data_ack);

    /** mahjong_bc_get_assist_info_data_ack ret. */
    public ret: number;

    /** mahjong_bc_get_assist_info_data_ack dstPlyGuid. */
    public dstPlyGuid: (number|Long);

    /** mahjong_bc_get_assist_info_data_ack items. */
    public items: Imahjong_AssistInfoData[];

    /**
     * Creates a new mahjong_bc_get_assist_info_data_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_get_assist_info_data_ack instance
     */
    public static create(properties?: Imahjong_bc_get_assist_info_data_ack): mahjong_bc_get_assist_info_data_ack;

    /**
     * Encodes the specified mahjong_bc_get_assist_info_data_ack message. Does not implicitly {@link mahjong_bc_get_assist_info_data_ack.verify|verify} messages.
     * @param message mahjong_bc_get_assist_info_data_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_get_assist_info_data_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_get_assist_info_data_ack message, length delimited. Does not implicitly {@link mahjong_bc_get_assist_info_data_ack.verify|verify} messages.
     * @param message mahjong_bc_get_assist_info_data_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_get_assist_info_data_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_get_assist_info_data_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_get_assist_info_data_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_get_assist_info_data_ack;

    /**
     * Decodes a mahjong_bc_get_assist_info_data_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_get_assist_info_data_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_get_assist_info_data_ack;

    /**
     * Verifies a mahjong_bc_get_assist_info_data_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_get_assist_info_data_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_get_assist_info_data_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_get_assist_info_data_ack;

    /**
     * Creates a plain object from a mahjong_bc_get_assist_info_data_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_get_assist_info_data_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_get_assist_info_data_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_get_assist_info_data_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_verity_ticket_ack20121227. */
export interface Imahjong_lc_verity_ticket_ack20121227 {

    /** mahjong_lc_verity_ticket_ack20121227 ret */
    ret: number;

    /** mahjong_lc_verity_ticket_ack20121227 plyLobbyData */
    plyLobbyData: Imahjong_PlyLobbyData20121227;

    /** mahjong_lc_verity_ticket_ack20121227 plyStatus */
    plyStatus: Imahjong_PlayerStatus20121227;

    /** mahjong_lc_verity_ticket_ack20121227 plyLoginAward */
    plyLoginAward: Imahjong_LoginAward;

    /** mahjong_lc_verity_ticket_ack20121227 plyItems */
    plyItems?: (Imahjong_ItemData20121227[]|null);

    /** mahjong_lc_verity_ticket_ack20121227 plyLoginAward2 */
    plyLoginAward2: Imahjong_LoginAward2;
}

/** Represents a mahjong_lc_verity_ticket_ack20121227. */
export class mahjong_lc_verity_ticket_ack20121227 implements Imahjong_lc_verity_ticket_ack20121227 {

    /**
     * Constructs a new mahjong_lc_verity_ticket_ack20121227.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_verity_ticket_ack20121227);

    /** mahjong_lc_verity_ticket_ack20121227 ret. */
    public ret: number;

    /** mahjong_lc_verity_ticket_ack20121227 plyLobbyData. */
    public plyLobbyData: Imahjong_PlyLobbyData20121227;

    /** mahjong_lc_verity_ticket_ack20121227 plyStatus. */
    public plyStatus: Imahjong_PlayerStatus20121227;

    /** mahjong_lc_verity_ticket_ack20121227 plyLoginAward. */
    public plyLoginAward: Imahjong_LoginAward;

    /** mahjong_lc_verity_ticket_ack20121227 plyItems. */
    public plyItems: Imahjong_ItemData20121227[];

    /** mahjong_lc_verity_ticket_ack20121227 plyLoginAward2. */
    public plyLoginAward2: Imahjong_LoginAward2;

    /**
     * Creates a new mahjong_lc_verity_ticket_ack20121227 instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_verity_ticket_ack20121227 instance
     */
    public static create(properties?: Imahjong_lc_verity_ticket_ack20121227): mahjong_lc_verity_ticket_ack20121227;

    /**
     * Encodes the specified mahjong_lc_verity_ticket_ack20121227 message. Does not implicitly {@link mahjong_lc_verity_ticket_ack20121227.verify|verify} messages.
     * @param message mahjong_lc_verity_ticket_ack20121227 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_verity_ticket_ack20121227, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_verity_ticket_ack20121227 message, length delimited. Does not implicitly {@link mahjong_lc_verity_ticket_ack20121227.verify|verify} messages.
     * @param message mahjong_lc_verity_ticket_ack20121227 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_verity_ticket_ack20121227, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_verity_ticket_ack20121227 message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_verity_ticket_ack20121227
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_verity_ticket_ack20121227;

    /**
     * Decodes a mahjong_lc_verity_ticket_ack20121227 message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_verity_ticket_ack20121227
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_verity_ticket_ack20121227;

    /**
     * Verifies a mahjong_lc_verity_ticket_ack20121227 message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_verity_ticket_ack20121227 message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_verity_ticket_ack20121227
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_verity_ticket_ack20121227;

    /**
     * Creates a plain object from a mahjong_lc_verity_ticket_ack20121227 message. Also converts values to other types if specified.
     * @param message mahjong_lc_verity_ticket_ack20121227
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_verity_ticket_ack20121227, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_verity_ticket_ack20121227 to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_daily_task_award_ack. */
export interface Imahjong_lc_get_daily_task_award_ack {

    /** mahjong_lc_get_daily_task_award_ack ret */
    ret: number;

    /** mahjong_lc_get_daily_task_award_ack money */
    money: number;

    /** mahjong_lc_get_daily_task_award_ack gift */
    gift: number;

    /** mahjong_lc_get_daily_task_award_ack prop_1 */
    prop_1: number;

    /** mahjong_lc_get_daily_task_award_ack prop_2 */
    prop_2: number;

    /** mahjong_lc_get_daily_task_award_ack prop_3 */
    prop_3: number;

    /** mahjong_lc_get_daily_task_award_ack prop_4 */
    prop_4: number;

    /** mahjong_lc_get_daily_task_award_ack prop_5 */
    prop_5: number;
}

/** Represents a mahjong_lc_get_daily_task_award_ack. */
export class mahjong_lc_get_daily_task_award_ack implements Imahjong_lc_get_daily_task_award_ack {

    /**
     * Constructs a new mahjong_lc_get_daily_task_award_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_daily_task_award_ack);

    /** mahjong_lc_get_daily_task_award_ack ret. */
    public ret: number;

    /** mahjong_lc_get_daily_task_award_ack money. */
    public money: number;

    /** mahjong_lc_get_daily_task_award_ack gift. */
    public gift: number;

    /** mahjong_lc_get_daily_task_award_ack prop_1. */
    public prop_1: number;

    /** mahjong_lc_get_daily_task_award_ack prop_2. */
    public prop_2: number;

    /** mahjong_lc_get_daily_task_award_ack prop_3. */
    public prop_3: number;

    /** mahjong_lc_get_daily_task_award_ack prop_4. */
    public prop_4: number;

    /** mahjong_lc_get_daily_task_award_ack prop_5. */
    public prop_5: number;

    /**
     * Creates a new mahjong_lc_get_daily_task_award_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_daily_task_award_ack instance
     */
    public static create(properties?: Imahjong_lc_get_daily_task_award_ack): mahjong_lc_get_daily_task_award_ack;

    /**
     * Encodes the specified mahjong_lc_get_daily_task_award_ack message. Does not implicitly {@link mahjong_lc_get_daily_task_award_ack.verify|verify} messages.
     * @param message mahjong_lc_get_daily_task_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_daily_task_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_daily_task_award_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_daily_task_award_ack.verify|verify} messages.
     * @param message mahjong_lc_get_daily_task_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_daily_task_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_daily_task_award_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_daily_task_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_daily_task_award_ack;

    /**
     * Decodes a mahjong_lc_get_daily_task_award_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_daily_task_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_daily_task_award_ack;

    /**
     * Verifies a mahjong_lc_get_daily_task_award_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_daily_task_award_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_daily_task_award_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_daily_task_award_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_daily_task_award_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_daily_task_award_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_daily_task_award_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_daily_task_award_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_player_feel_value. */
export interface Imahjong_player_feel_value {

    /** mahjong_player_feel_value frdGuid */
    frdGuid: (number|Long);

    /** mahjong_player_feel_value feelValue */
    feelValue: number;
}

/** Represents a mahjong_player_feel_value. */
export class mahjong_player_feel_value implements Imahjong_player_feel_value {

    /**
     * Constructs a new mahjong_player_feel_value.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_player_feel_value);

    /** mahjong_player_feel_value frdGuid. */
    public frdGuid: (number|Long);

    /** mahjong_player_feel_value feelValue. */
    public feelValue: number;

    /**
     * Creates a new mahjong_player_feel_value instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_player_feel_value instance
     */
    public static create(properties?: Imahjong_player_feel_value): mahjong_player_feel_value;

    /**
     * Encodes the specified mahjong_player_feel_value message. Does not implicitly {@link mahjong_player_feel_value.verify|verify} messages.
     * @param message mahjong_player_feel_value message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_player_feel_value, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_player_feel_value message, length delimited. Does not implicitly {@link mahjong_player_feel_value.verify|verify} messages.
     * @param message mahjong_player_feel_value message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_player_feel_value, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_player_feel_value message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_player_feel_value
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_player_feel_value;

    /**
     * Decodes a mahjong_player_feel_value message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_player_feel_value
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_player_feel_value;

    /**
     * Verifies a mahjong_player_feel_value message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_player_feel_value message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_player_feel_value
     */
    public static fromObject(object: { [k: string]: any }): mahjong_player_feel_value;

    /**
     * Creates a plain object from a mahjong_player_feel_value message. Also converts values to other types if specified.
     * @param message mahjong_player_feel_value
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_player_feel_value, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_player_feel_value to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_send_ply_position_info_ack. */
export interface Imahjong_lc_send_ply_position_info_ack {

    /** mahjong_lc_send_ply_position_info_ack ret */
    ret: number;

    /** mahjong_lc_send_ply_position_info_ack plyGuid */
    plyGuid: (number|Long);
}

/** Represents a mahjong_lc_send_ply_position_info_ack. */
export class mahjong_lc_send_ply_position_info_ack implements Imahjong_lc_send_ply_position_info_ack {

    /**
     * Constructs a new mahjong_lc_send_ply_position_info_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_send_ply_position_info_ack);

    /** mahjong_lc_send_ply_position_info_ack ret. */
    public ret: number;

    /** mahjong_lc_send_ply_position_info_ack plyGuid. */
    public plyGuid: (number|Long);

    /**
     * Creates a new mahjong_lc_send_ply_position_info_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_send_ply_position_info_ack instance
     */
    public static create(properties?: Imahjong_lc_send_ply_position_info_ack): mahjong_lc_send_ply_position_info_ack;

    /**
     * Encodes the specified mahjong_lc_send_ply_position_info_ack message. Does not implicitly {@link mahjong_lc_send_ply_position_info_ack.verify|verify} messages.
     * @param message mahjong_lc_send_ply_position_info_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_send_ply_position_info_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_send_ply_position_info_ack message, length delimited. Does not implicitly {@link mahjong_lc_send_ply_position_info_ack.verify|verify} messages.
     * @param message mahjong_lc_send_ply_position_info_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_send_ply_position_info_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_send_ply_position_info_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_send_ply_position_info_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_send_ply_position_info_ack;

    /**
     * Decodes a mahjong_lc_send_ply_position_info_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_send_ply_position_info_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_send_ply_position_info_ack;

    /**
     * Verifies a mahjong_lc_send_ply_position_info_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_send_ply_position_info_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_send_ply_position_info_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_send_ply_position_info_ack;

    /**
     * Creates a plain object from a mahjong_lc_send_ply_position_info_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_send_ply_position_info_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_send_ply_position_info_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_send_ply_position_info_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_kickout_req. */
export interface Imahjong_cb_kickout_req {

    /** mahjong_cb_kickout_req dstPlyGuid */
    dstPlyGuid: (number|Long);

    /** mahjong_cb_kickout_req chairId */
    chairId: number;
}

/** Represents a mahjong_cb_kickout_req. */
export class mahjong_cb_kickout_req implements Imahjong_cb_kickout_req {

    /**
     * Constructs a new mahjong_cb_kickout_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_kickout_req);

    /** mahjong_cb_kickout_req dstPlyGuid. */
    public dstPlyGuid: (number|Long);

    /** mahjong_cb_kickout_req chairId. */
    public chairId: number;

    /**
     * Creates a new mahjong_cb_kickout_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_kickout_req instance
     */
    public static create(properties?: Imahjong_cb_kickout_req): mahjong_cb_kickout_req;

    /**
     * Encodes the specified mahjong_cb_kickout_req message. Does not implicitly {@link mahjong_cb_kickout_req.verify|verify} messages.
     * @param message mahjong_cb_kickout_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_kickout_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_kickout_req message, length delimited. Does not implicitly {@link mahjong_cb_kickout_req.verify|verify} messages.
     * @param message mahjong_cb_kickout_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_kickout_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_kickout_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_kickout_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_kickout_req;

    /**
     * Decodes a mahjong_cb_kickout_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_kickout_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_kickout_req;

    /**
     * Verifies a mahjong_cb_kickout_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_kickout_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_kickout_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_kickout_req;

    /**
     * Creates a plain object from a mahjong_cb_kickout_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_kickout_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_kickout_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_kickout_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_TableItemAttr2. */
export interface Imahjong_TableItemAttr2 {

    /** mahjong_TableItemAttr2 tableId */
    tableId: number;

    /** mahjong_TableItemAttr2 name */
    name: string;

    /** mahjong_TableItemAttr2 lock */
    lock: number;

    /** mahjong_TableItemAttr2 status */
    status: number;

    /** mahjong_TableItemAttr2 baseScore */
    baseScore: number;

    /** mahjong_TableItemAttr2 curPlyNum */
    curPlyNum: number;

    /** mahjong_TableItemAttr2 plyMinMoney */
    plyMinMoney: number;
}

/** Represents a mahjong_TableItemAttr2. */
export class mahjong_TableItemAttr2 implements Imahjong_TableItemAttr2 {

    /**
     * Constructs a new mahjong_TableItemAttr2.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_TableItemAttr2);

    /** mahjong_TableItemAttr2 tableId. */
    public tableId: number;

    /** mahjong_TableItemAttr2 name. */
    public name: string;

    /** mahjong_TableItemAttr2 lock. */
    public lock: number;

    /** mahjong_TableItemAttr2 status. */
    public status: number;

    /** mahjong_TableItemAttr2 baseScore. */
    public baseScore: number;

    /** mahjong_TableItemAttr2 curPlyNum. */
    public curPlyNum: number;

    /** mahjong_TableItemAttr2 plyMinMoney. */
    public plyMinMoney: number;

    /**
     * Creates a new mahjong_TableItemAttr2 instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_TableItemAttr2 instance
     */
    public static create(properties?: Imahjong_TableItemAttr2): mahjong_TableItemAttr2;

    /**
     * Encodes the specified mahjong_TableItemAttr2 message. Does not implicitly {@link mahjong_TableItemAttr2.verify|verify} messages.
     * @param message mahjong_TableItemAttr2 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_TableItemAttr2, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_TableItemAttr2 message, length delimited. Does not implicitly {@link mahjong_TableItemAttr2.verify|verify} messages.
     * @param message mahjong_TableItemAttr2 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_TableItemAttr2, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_TableItemAttr2 message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_TableItemAttr2
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_TableItemAttr2;

    /**
     * Decodes a mahjong_TableItemAttr2 message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_TableItemAttr2
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_TableItemAttr2;

    /**
     * Verifies a mahjong_TableItemAttr2 message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_TableItemAttr2 message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_TableItemAttr2
     */
    public static fromObject(object: { [k: string]: any }): mahjong_TableItemAttr2;

    /**
     * Creates a plain object from a mahjong_TableItemAttr2 message. Also converts values to other types if specified.
     * @param message mahjong_TableItemAttr2
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_TableItemAttr2, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_TableItemAttr2 to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_SigninAward. */
export interface Imahjong_SigninAward {

    /** mahjong_SigninAward days */
    days: number;

    /** mahjong_SigninAward money */
    money: number;

    /** mahjong_SigninAward gift */
    gift: number;

    /** mahjong_SigninAward count */
    count: number;

    /** mahjong_SigninAward state */
    state: number;

    /** mahjong_SigninAward index */
    index: number;

    /** mahjong_SigninAward name */
    name: string;
}

/** Represents a mahjong_SigninAward. */
export class mahjong_SigninAward implements Imahjong_SigninAward {

    /**
     * Constructs a new mahjong_SigninAward.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_SigninAward);

    /** mahjong_SigninAward days. */
    public days: number;

    /** mahjong_SigninAward money. */
    public money: number;

    /** mahjong_SigninAward gift. */
    public gift: number;

    /** mahjong_SigninAward count. */
    public count: number;

    /** mahjong_SigninAward state. */
    public state: number;

    /** mahjong_SigninAward index. */
    public index: number;

    /** mahjong_SigninAward name. */
    public name: string;

    /**
     * Creates a new mahjong_SigninAward instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_SigninAward instance
     */
    public static create(properties?: Imahjong_SigninAward): mahjong_SigninAward;

    /**
     * Encodes the specified mahjong_SigninAward message. Does not implicitly {@link mahjong_SigninAward.verify|verify} messages.
     * @param message mahjong_SigninAward message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_SigninAward, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_SigninAward message, length delimited. Does not implicitly {@link mahjong_SigninAward.verify|verify} messages.
     * @param message mahjong_SigninAward message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_SigninAward, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_SigninAward message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_SigninAward
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_SigninAward;

    /**
     * Decodes a mahjong_SigninAward message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_SigninAward
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_SigninAward;

    /**
     * Verifies a mahjong_SigninAward message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_SigninAward message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_SigninAward
     */
    public static fromObject(object: { [k: string]: any }): mahjong_SigninAward;

    /**
     * Creates a plain object from a mahjong_SigninAward message. Also converts values to other types if specified.
     * @param message mahjong_SigninAward
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_SigninAward, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_SigninAward to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_update_ply_data_not20121227. */
export interface Imahjong_bc_update_ply_data_not20121227 {

    /** mahjong_bc_update_ply_data_not20121227 plyGuid */
    plyGuid: (number|Long);

    /** mahjong_bc_update_ply_data_not20121227 uptReason */
    uptReason: number;

    /** mahjong_bc_update_ply_data_not20121227 uptType */
    uptType: number;

    /** mahjong_bc_update_ply_data_not20121227 variant */
    variant: number;

    /** mahjong_bc_update_ply_data_not20121227 amount */
    amount: number;
}

/** Represents a mahjong_bc_update_ply_data_not20121227. */
export class mahjong_bc_update_ply_data_not20121227 implements Imahjong_bc_update_ply_data_not20121227 {

    /**
     * Constructs a new mahjong_bc_update_ply_data_not20121227.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_update_ply_data_not20121227);

    /** mahjong_bc_update_ply_data_not20121227 plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_bc_update_ply_data_not20121227 uptReason. */
    public uptReason: number;

    /** mahjong_bc_update_ply_data_not20121227 uptType. */
    public uptType: number;

    /** mahjong_bc_update_ply_data_not20121227 variant. */
    public variant: number;

    /** mahjong_bc_update_ply_data_not20121227 amount. */
    public amount: number;

    /**
     * Creates a new mahjong_bc_update_ply_data_not20121227 instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_update_ply_data_not20121227 instance
     */
    public static create(properties?: Imahjong_bc_update_ply_data_not20121227): mahjong_bc_update_ply_data_not20121227;

    /**
     * Encodes the specified mahjong_bc_update_ply_data_not20121227 message. Does not implicitly {@link mahjong_bc_update_ply_data_not20121227.verify|verify} messages.
     * @param message mahjong_bc_update_ply_data_not20121227 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_update_ply_data_not20121227, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_update_ply_data_not20121227 message, length delimited. Does not implicitly {@link mahjong_bc_update_ply_data_not20121227.verify|verify} messages.
     * @param message mahjong_bc_update_ply_data_not20121227 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_update_ply_data_not20121227, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_update_ply_data_not20121227 message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_update_ply_data_not20121227
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_update_ply_data_not20121227;

    /**
     * Decodes a mahjong_bc_update_ply_data_not20121227 message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_update_ply_data_not20121227
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_update_ply_data_not20121227;

    /**
     * Verifies a mahjong_bc_update_ply_data_not20121227 message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_update_ply_data_not20121227 message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_update_ply_data_not20121227
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_update_ply_data_not20121227;

    /**
     * Creates a plain object from a mahjong_bc_update_ply_data_not20121227 message. Also converts values to other types if specified.
     * @param message mahjong_bc_update_ply_data_not20121227
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_update_ply_data_not20121227, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_update_ply_data_not20121227 to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_user_signin_award_ext_ack. */
export interface Imahjong_lc_get_user_signin_award_ext_ack {

    /** mahjong_lc_get_user_signin_award_ext_ack ret */
    ret: number;

    /** mahjong_lc_get_user_signin_award_ext_ack day */
    day: number;

    /** mahjong_lc_get_user_signin_award_ext_ack signinAward */
    signinAward: Imahjong_ExtSigninAward;
}

/** Represents a mahjong_lc_get_user_signin_award_ext_ack. */
export class mahjong_lc_get_user_signin_award_ext_ack implements Imahjong_lc_get_user_signin_award_ext_ack {

    /**
     * Constructs a new mahjong_lc_get_user_signin_award_ext_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_user_signin_award_ext_ack);

    /** mahjong_lc_get_user_signin_award_ext_ack ret. */
    public ret: number;

    /** mahjong_lc_get_user_signin_award_ext_ack day. */
    public day: number;

    /** mahjong_lc_get_user_signin_award_ext_ack signinAward. */
    public signinAward: Imahjong_ExtSigninAward;

    /**
     * Creates a new mahjong_lc_get_user_signin_award_ext_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_user_signin_award_ext_ack instance
     */
    public static create(properties?: Imahjong_lc_get_user_signin_award_ext_ack): mahjong_lc_get_user_signin_award_ext_ack;

    /**
     * Encodes the specified mahjong_lc_get_user_signin_award_ext_ack message. Does not implicitly {@link mahjong_lc_get_user_signin_award_ext_ack.verify|verify} messages.
     * @param message mahjong_lc_get_user_signin_award_ext_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_user_signin_award_ext_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_user_signin_award_ext_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_user_signin_award_ext_ack.verify|verify} messages.
     * @param message mahjong_lc_get_user_signin_award_ext_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_user_signin_award_ext_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_user_signin_award_ext_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_user_signin_award_ext_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_user_signin_award_ext_ack;

    /**
     * Decodes a mahjong_lc_get_user_signin_award_ext_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_user_signin_award_ext_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_user_signin_award_ext_ack;

    /**
     * Verifies a mahjong_lc_get_user_signin_award_ext_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_user_signin_award_ext_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_user_signin_award_ext_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_user_signin_award_ext_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_user_signin_award_ext_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_user_signin_award_ext_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_user_signin_award_ext_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_user_signin_award_ext_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_get_luck_draw_req. */
export interface Imahjong_cb_get_luck_draw_req {
}

/** Represents a mahjong_cb_get_luck_draw_req. */
export class mahjong_cb_get_luck_draw_req implements Imahjong_cb_get_luck_draw_req {

    /**
     * Constructs a new mahjong_cb_get_luck_draw_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_get_luck_draw_req);

    /**
     * Creates a new mahjong_cb_get_luck_draw_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_get_luck_draw_req instance
     */
    public static create(properties?: Imahjong_cb_get_luck_draw_req): mahjong_cb_get_luck_draw_req;

    /**
     * Encodes the specified mahjong_cb_get_luck_draw_req message. Does not implicitly {@link mahjong_cb_get_luck_draw_req.verify|verify} messages.
     * @param message mahjong_cb_get_luck_draw_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_get_luck_draw_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_get_luck_draw_req message, length delimited. Does not implicitly {@link mahjong_cb_get_luck_draw_req.verify|verify} messages.
     * @param message mahjong_cb_get_luck_draw_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_get_luck_draw_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_get_luck_draw_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_get_luck_draw_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_get_luck_draw_req;

    /**
     * Decodes a mahjong_cb_get_luck_draw_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_get_luck_draw_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_get_luck_draw_req;

    /**
     * Verifies a mahjong_cb_get_luck_draw_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_get_luck_draw_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_get_luck_draw_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_get_luck_draw_req;

    /**
     * Creates a plain object from a mahjong_cb_get_luck_draw_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_get_luck_draw_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_get_luck_draw_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_get_luck_draw_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_continuous_landing_reward_data_ack. */
export interface Imahjong_lc_continuous_landing_reward_data_ack {

    /** mahjong_lc_continuous_landing_reward_data_ack isGetAward */
    isGetAward: number;

    /** mahjong_lc_continuous_landing_reward_data_ack loginAward2 */
    loginAward2: Imahjong_LoginAward2;
}

/** Represents a mahjong_lc_continuous_landing_reward_data_ack. */
export class mahjong_lc_continuous_landing_reward_data_ack implements Imahjong_lc_continuous_landing_reward_data_ack {

    /**
     * Constructs a new mahjong_lc_continuous_landing_reward_data_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_continuous_landing_reward_data_ack);

    /** mahjong_lc_continuous_landing_reward_data_ack isGetAward. */
    public isGetAward: number;

    /** mahjong_lc_continuous_landing_reward_data_ack loginAward2. */
    public loginAward2: Imahjong_LoginAward2;

    /**
     * Creates a new mahjong_lc_continuous_landing_reward_data_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_continuous_landing_reward_data_ack instance
     */
    public static create(properties?: Imahjong_lc_continuous_landing_reward_data_ack): mahjong_lc_continuous_landing_reward_data_ack;

    /**
     * Encodes the specified mahjong_lc_continuous_landing_reward_data_ack message. Does not implicitly {@link mahjong_lc_continuous_landing_reward_data_ack.verify|verify} messages.
     * @param message mahjong_lc_continuous_landing_reward_data_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_continuous_landing_reward_data_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_continuous_landing_reward_data_ack message, length delimited. Does not implicitly {@link mahjong_lc_continuous_landing_reward_data_ack.verify|verify} messages.
     * @param message mahjong_lc_continuous_landing_reward_data_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_continuous_landing_reward_data_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_continuous_landing_reward_data_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_continuous_landing_reward_data_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_continuous_landing_reward_data_ack;

    /**
     * Decodes a mahjong_lc_continuous_landing_reward_data_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_continuous_landing_reward_data_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_continuous_landing_reward_data_ack;

    /**
     * Verifies a mahjong_lc_continuous_landing_reward_data_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_continuous_landing_reward_data_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_continuous_landing_reward_data_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_continuous_landing_reward_data_ack;

    /**
     * Creates a plain object from a mahjong_lc_continuous_landing_reward_data_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_continuous_landing_reward_data_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_continuous_landing_reward_data_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_continuous_landing_reward_data_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_ply_leave_not. */
export interface Imahjong_bc_ply_leave_not {

    /** mahjong_bc_ply_leave_not plyGuid */
    plyGuid: (number|Long);
}

/** Represents a mahjong_bc_ply_leave_not. */
export class mahjong_bc_ply_leave_not implements Imahjong_bc_ply_leave_not {

    /**
     * Constructs a new mahjong_bc_ply_leave_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_ply_leave_not);

    /** mahjong_bc_ply_leave_not plyGuid. */
    public plyGuid: (number|Long);

    /**
     * Creates a new mahjong_bc_ply_leave_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_ply_leave_not instance
     */
    public static create(properties?: Imahjong_bc_ply_leave_not): mahjong_bc_ply_leave_not;

    /**
     * Encodes the specified mahjong_bc_ply_leave_not message. Does not implicitly {@link mahjong_bc_ply_leave_not.verify|verify} messages.
     * @param message mahjong_bc_ply_leave_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_ply_leave_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_ply_leave_not message, length delimited. Does not implicitly {@link mahjong_bc_ply_leave_not.verify|verify} messages.
     * @param message mahjong_bc_ply_leave_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_ply_leave_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_ply_leave_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_ply_leave_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_ply_leave_not;

    /**
     * Decodes a mahjong_bc_ply_leave_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_ply_leave_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_ply_leave_not;

    /**
     * Verifies a mahjong_bc_ply_leave_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_ply_leave_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_ply_leave_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_ply_leave_not;

    /**
     * Creates a plain object from a mahjong_bc_ply_leave_not message. Also converts values to other types if specified.
     * @param message mahjong_bc_ply_leave_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_ply_leave_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_ply_leave_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_ply_status_ack20121227. */
export interface Imahjong_lc_get_ply_status_ack20121227 {

    /** mahjong_lc_get_ply_status_ack20121227 players */
    players?: (Imahjong_PlayerStatus20121227[]|null);
}

/** Represents a mahjong_lc_get_ply_status_ack20121227. */
export class mahjong_lc_get_ply_status_ack20121227 implements Imahjong_lc_get_ply_status_ack20121227 {

    /**
     * Constructs a new mahjong_lc_get_ply_status_ack20121227.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_ply_status_ack20121227);

    /** mahjong_lc_get_ply_status_ack20121227 players. */
    public players: Imahjong_PlayerStatus20121227[];

    /**
     * Creates a new mahjong_lc_get_ply_status_ack20121227 instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_ply_status_ack20121227 instance
     */
    public static create(properties?: Imahjong_lc_get_ply_status_ack20121227): mahjong_lc_get_ply_status_ack20121227;

    /**
     * Encodes the specified mahjong_lc_get_ply_status_ack20121227 message. Does not implicitly {@link mahjong_lc_get_ply_status_ack20121227.verify|verify} messages.
     * @param message mahjong_lc_get_ply_status_ack20121227 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_ply_status_ack20121227, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_ply_status_ack20121227 message, length delimited. Does not implicitly {@link mahjong_lc_get_ply_status_ack20121227.verify|verify} messages.
     * @param message mahjong_lc_get_ply_status_ack20121227 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_ply_status_ack20121227, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_ply_status_ack20121227 message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_ply_status_ack20121227
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_ply_status_ack20121227;

    /**
     * Decodes a mahjong_lc_get_ply_status_ack20121227 message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_ply_status_ack20121227
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_ply_status_ack20121227;

    /**
     * Verifies a mahjong_lc_get_ply_status_ack20121227 message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_ply_status_ack20121227 message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_ply_status_ack20121227
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_ply_status_ack20121227;

    /**
     * Creates a plain object from a mahjong_lc_get_ply_status_ack20121227 message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_ply_status_ack20121227
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_ply_status_ack20121227, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_ply_status_ack20121227 to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_join_table_ack20121227. */
export interface Imahjong_bc_join_table_ack20121227 {

    /** mahjong_bc_join_table_ack20121227 ret */
    ret: number;

    /** mahjong_bc_join_table_ack20121227 tableAttrs */
    tableAttrs: Imahjong_TableAttr20121227;
}

/** Represents a mahjong_bc_join_table_ack20121227. */
export class mahjong_bc_join_table_ack20121227 implements Imahjong_bc_join_table_ack20121227 {

    /**
     * Constructs a new mahjong_bc_join_table_ack20121227.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_join_table_ack20121227);

    /** mahjong_bc_join_table_ack20121227 ret. */
    public ret: number;

    /** mahjong_bc_join_table_ack20121227 tableAttrs. */
    public tableAttrs: Imahjong_TableAttr20121227;

    /**
     * Creates a new mahjong_bc_join_table_ack20121227 instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_join_table_ack20121227 instance
     */
    public static create(properties?: Imahjong_bc_join_table_ack20121227): mahjong_bc_join_table_ack20121227;

    /**
     * Encodes the specified mahjong_bc_join_table_ack20121227 message. Does not implicitly {@link mahjong_bc_join_table_ack20121227.verify|verify} messages.
     * @param message mahjong_bc_join_table_ack20121227 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_join_table_ack20121227, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_join_table_ack20121227 message, length delimited. Does not implicitly {@link mahjong_bc_join_table_ack20121227.verify|verify} messages.
     * @param message mahjong_bc_join_table_ack20121227 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_join_table_ack20121227, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_join_table_ack20121227 message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_join_table_ack20121227
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_join_table_ack20121227;

    /**
     * Decodes a mahjong_bc_join_table_ack20121227 message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_join_table_ack20121227
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_join_table_ack20121227;

    /**
     * Verifies a mahjong_bc_join_table_ack20121227 message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_join_table_ack20121227 message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_join_table_ack20121227
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_join_table_ack20121227;

    /**
     * Creates a plain object from a mahjong_bc_join_table_ack20121227 message. Also converts values to other types if specified.
     * @param message mahjong_bc_join_table_ack20121227
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_join_table_ack20121227, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_join_table_ack20121227 to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_extra_relief_list_req. */
export interface Imahjong_cl_get_extra_relief_list_req {
}

/** Represents a mahjong_cl_get_extra_relief_list_req. */
export class mahjong_cl_get_extra_relief_list_req implements Imahjong_cl_get_extra_relief_list_req {

    /**
     * Constructs a new mahjong_cl_get_extra_relief_list_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_extra_relief_list_req);

    /**
     * Creates a new mahjong_cl_get_extra_relief_list_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_extra_relief_list_req instance
     */
    public static create(properties?: Imahjong_cl_get_extra_relief_list_req): mahjong_cl_get_extra_relief_list_req;

    /**
     * Encodes the specified mahjong_cl_get_extra_relief_list_req message. Does not implicitly {@link mahjong_cl_get_extra_relief_list_req.verify|verify} messages.
     * @param message mahjong_cl_get_extra_relief_list_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_extra_relief_list_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_extra_relief_list_req message, length delimited. Does not implicitly {@link mahjong_cl_get_extra_relief_list_req.verify|verify} messages.
     * @param message mahjong_cl_get_extra_relief_list_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_extra_relief_list_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_extra_relief_list_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_extra_relief_list_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_extra_relief_list_req;

    /**
     * Decodes a mahjong_cl_get_extra_relief_list_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_extra_relief_list_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_extra_relief_list_req;

    /**
     * Verifies a mahjong_cl_get_extra_relief_list_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_extra_relief_list_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_extra_relief_list_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_extra_relief_list_req;

    /**
     * Creates a plain object from a mahjong_cl_get_extra_relief_list_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_extra_relief_list_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_extra_relief_list_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_extra_relief_list_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_do_tip_dila_ack. */
export interface Imahjong_bc_do_tip_dila_ack {

    /** mahjong_bc_do_tip_dila_ack ret */
    ret: number;

    /** mahjong_bc_do_tip_dila_ack data */
    data: Imahjong_DilaData;
}

/** Represents a mahjong_bc_do_tip_dila_ack. */
export class mahjong_bc_do_tip_dila_ack implements Imahjong_bc_do_tip_dila_ack {

    /**
     * Constructs a new mahjong_bc_do_tip_dila_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_do_tip_dila_ack);

    /** mahjong_bc_do_tip_dila_ack ret. */
    public ret: number;

    /** mahjong_bc_do_tip_dila_ack data. */
    public data: Imahjong_DilaData;

    /**
     * Creates a new mahjong_bc_do_tip_dila_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_do_tip_dila_ack instance
     */
    public static create(properties?: Imahjong_bc_do_tip_dila_ack): mahjong_bc_do_tip_dila_ack;

    /**
     * Encodes the specified mahjong_bc_do_tip_dila_ack message. Does not implicitly {@link mahjong_bc_do_tip_dila_ack.verify|verify} messages.
     * @param message mahjong_bc_do_tip_dila_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_do_tip_dila_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_do_tip_dila_ack message, length delimited. Does not implicitly {@link mahjong_bc_do_tip_dila_ack.verify|verify} messages.
     * @param message mahjong_bc_do_tip_dila_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_do_tip_dila_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_do_tip_dila_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_do_tip_dila_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_do_tip_dila_ack;

    /**
     * Decodes a mahjong_bc_do_tip_dila_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_do_tip_dila_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_do_tip_dila_ack;

    /**
     * Verifies a mahjong_bc_do_tip_dila_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_do_tip_dila_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_do_tip_dila_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_do_tip_dila_ack;

    /**
     * Creates a plain object from a mahjong_bc_do_tip_dila_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_do_tip_dila_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_do_tip_dila_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_do_tip_dila_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_ready_req. */
export interface Imahjong_cb_ready_req {
}

/** Represents a mahjong_cb_ready_req. */
export class mahjong_cb_ready_req implements Imahjong_cb_ready_req {

    /**
     * Constructs a new mahjong_cb_ready_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_ready_req);

    /**
     * Creates a new mahjong_cb_ready_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_ready_req instance
     */
    public static create(properties?: Imahjong_cb_ready_req): mahjong_cb_ready_req;

    /**
     * Encodes the specified mahjong_cb_ready_req message. Does not implicitly {@link mahjong_cb_ready_req.verify|verify} messages.
     * @param message mahjong_cb_ready_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_ready_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_ready_req message, length delimited. Does not implicitly {@link mahjong_cb_ready_req.verify|verify} messages.
     * @param message mahjong_cb_ready_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_ready_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_ready_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_ready_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_ready_req;

    /**
     * Decodes a mahjong_cb_ready_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_ready_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_ready_req;

    /**
     * Verifies a mahjong_cb_ready_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_ready_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_ready_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_ready_req;

    /**
     * Creates a plain object from a mahjong_cb_ready_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_ready_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_ready_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_ready_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_online_rank_list_mj_req. */
export interface Imahjong_cl_get_online_rank_list_mj_req {

    /** mahjong_cl_get_online_rank_list_mj_req flag */
    flag: number;

    /** mahjong_cl_get_online_rank_list_mj_req page */
    page: number;

    /** mahjong_cl_get_online_rank_list_mj_req type */
    type: number;
}

/** Represents a mahjong_cl_get_online_rank_list_mj_req. */
export class mahjong_cl_get_online_rank_list_mj_req implements Imahjong_cl_get_online_rank_list_mj_req {

    /**
     * Constructs a new mahjong_cl_get_online_rank_list_mj_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_online_rank_list_mj_req);

    /** mahjong_cl_get_online_rank_list_mj_req flag. */
    public flag: number;

    /** mahjong_cl_get_online_rank_list_mj_req page. */
    public page: number;

    /** mahjong_cl_get_online_rank_list_mj_req type. */
    public type: number;

    /**
     * Creates a new mahjong_cl_get_online_rank_list_mj_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_online_rank_list_mj_req instance
     */
    public static create(properties?: Imahjong_cl_get_online_rank_list_mj_req): mahjong_cl_get_online_rank_list_mj_req;

    /**
     * Encodes the specified mahjong_cl_get_online_rank_list_mj_req message. Does not implicitly {@link mahjong_cl_get_online_rank_list_mj_req.verify|verify} messages.
     * @param message mahjong_cl_get_online_rank_list_mj_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_online_rank_list_mj_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_online_rank_list_mj_req message, length delimited. Does not implicitly {@link mahjong_cl_get_online_rank_list_mj_req.verify|verify} messages.
     * @param message mahjong_cl_get_online_rank_list_mj_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_online_rank_list_mj_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_online_rank_list_mj_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_online_rank_list_mj_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_online_rank_list_mj_req;

    /**
     * Decodes a mahjong_cl_get_online_rank_list_mj_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_online_rank_list_mj_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_online_rank_list_mj_req;

    /**
     * Verifies a mahjong_cl_get_online_rank_list_mj_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_online_rank_list_mj_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_online_rank_list_mj_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_online_rank_list_mj_req;

    /**
     * Creates a plain object from a mahjong_cl_get_online_rank_list_mj_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_online_rank_list_mj_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_online_rank_list_mj_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_online_rank_list_mj_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_AccumulateSigninAward2. */
export interface Imahjong_AccumulateSigninAward2 {

    /** mahjong_AccumulateSigninAward2 days */
    days: number;

    /** mahjong_AccumulateSigninAward2 awardStrings */
    awardStrings: string;
}

/** Represents a mahjong_AccumulateSigninAward2. */
export class mahjong_AccumulateSigninAward2 implements Imahjong_AccumulateSigninAward2 {

    /**
     * Constructs a new mahjong_AccumulateSigninAward2.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_AccumulateSigninAward2);

    /** mahjong_AccumulateSigninAward2 days. */
    public days: number;

    /** mahjong_AccumulateSigninAward2 awardStrings. */
    public awardStrings: string;

    /**
     * Creates a new mahjong_AccumulateSigninAward2 instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_AccumulateSigninAward2 instance
     */
    public static create(properties?: Imahjong_AccumulateSigninAward2): mahjong_AccumulateSigninAward2;

    /**
     * Encodes the specified mahjong_AccumulateSigninAward2 message. Does not implicitly {@link mahjong_AccumulateSigninAward2.verify|verify} messages.
     * @param message mahjong_AccumulateSigninAward2 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_AccumulateSigninAward2, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_AccumulateSigninAward2 message, length delimited. Does not implicitly {@link mahjong_AccumulateSigninAward2.verify|verify} messages.
     * @param message mahjong_AccumulateSigninAward2 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_AccumulateSigninAward2, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_AccumulateSigninAward2 message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_AccumulateSigninAward2
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_AccumulateSigninAward2;

    /**
     * Decodes a mahjong_AccumulateSigninAward2 message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_AccumulateSigninAward2
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_AccumulateSigninAward2;

    /**
     * Verifies a mahjong_AccumulateSigninAward2 message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_AccumulateSigninAward2 message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_AccumulateSigninAward2
     */
    public static fromObject(object: { [k: string]: any }): mahjong_AccumulateSigninAward2;

    /**
     * Creates a plain object from a mahjong_AccumulateSigninAward2 message. Also converts values to other types if specified.
     * @param message mahjong_AccumulateSigninAward2
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_AccumulateSigninAward2, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_AccumulateSigninAward2 to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_ClubGroupMemMsg. */
export interface Imahjong_ClubGroupMemMsg {

    /** mahjong_ClubGroupMemMsg clubId */
    clubId: number;

    /** mahjong_ClubGroupMemMsg groupId */
    groupId: number;

    /** mahjong_ClubGroupMemMsg memberList */
    memberList?: ((number|Long)[]|null);
}

/** Represents a mahjong_ClubGroupMemMsg. */
export class mahjong_ClubGroupMemMsg implements Imahjong_ClubGroupMemMsg {

    /**
     * Constructs a new mahjong_ClubGroupMemMsg.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_ClubGroupMemMsg);

    /** mahjong_ClubGroupMemMsg clubId. */
    public clubId: number;

    /** mahjong_ClubGroupMemMsg groupId. */
    public groupId: number;

    /** mahjong_ClubGroupMemMsg memberList. */
    public memberList: (number|Long)[];

    /**
     * Creates a new mahjong_ClubGroupMemMsg instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_ClubGroupMemMsg instance
     */
    public static create(properties?: Imahjong_ClubGroupMemMsg): mahjong_ClubGroupMemMsg;

    /**
     * Encodes the specified mahjong_ClubGroupMemMsg message. Does not implicitly {@link mahjong_ClubGroupMemMsg.verify|verify} messages.
     * @param message mahjong_ClubGroupMemMsg message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_ClubGroupMemMsg, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_ClubGroupMemMsg message, length delimited. Does not implicitly {@link mahjong_ClubGroupMemMsg.verify|verify} messages.
     * @param message mahjong_ClubGroupMemMsg message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_ClubGroupMemMsg, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_ClubGroupMemMsg message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_ClubGroupMemMsg
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_ClubGroupMemMsg;

    /**
     * Decodes a mahjong_ClubGroupMemMsg message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_ClubGroupMemMsg
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_ClubGroupMemMsg;

    /**
     * Verifies a mahjong_ClubGroupMemMsg message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_ClubGroupMemMsg message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_ClubGroupMemMsg
     */
    public static fromObject(object: { [k: string]: any }): mahjong_ClubGroupMemMsg;

    /**
     * Creates a plain object from a mahjong_ClubGroupMemMsg message. Also converts values to other types if specified.
     * @param message mahjong_ClubGroupMemMsg
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_ClubGroupMemMsg, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_ClubGroupMemMsg to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_auto_add_frd_not. */
export interface Imahjong_lc_auto_add_frd_not {

    /** mahjong_lc_auto_add_frd_not ret */
    ret: number;

    /** mahjong_lc_auto_add_frd_not limitGuid */
    limitGuid: (number|Long);
}

/** Represents a mahjong_lc_auto_add_frd_not. */
export class mahjong_lc_auto_add_frd_not implements Imahjong_lc_auto_add_frd_not {

    /**
     * Constructs a new mahjong_lc_auto_add_frd_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_auto_add_frd_not);

    /** mahjong_lc_auto_add_frd_not ret. */
    public ret: number;

    /** mahjong_lc_auto_add_frd_not limitGuid. */
    public limitGuid: (number|Long);

    /**
     * Creates a new mahjong_lc_auto_add_frd_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_auto_add_frd_not instance
     */
    public static create(properties?: Imahjong_lc_auto_add_frd_not): mahjong_lc_auto_add_frd_not;

    /**
     * Encodes the specified mahjong_lc_auto_add_frd_not message. Does not implicitly {@link mahjong_lc_auto_add_frd_not.verify|verify} messages.
     * @param message mahjong_lc_auto_add_frd_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_auto_add_frd_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_auto_add_frd_not message, length delimited. Does not implicitly {@link mahjong_lc_auto_add_frd_not.verify|verify} messages.
     * @param message mahjong_lc_auto_add_frd_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_auto_add_frd_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_auto_add_frd_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_auto_add_frd_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_auto_add_frd_not;

    /**
     * Decodes a mahjong_lc_auto_add_frd_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_auto_add_frd_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_auto_add_frd_not;

    /**
     * Verifies a mahjong_lc_auto_add_frd_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_auto_add_frd_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_auto_add_frd_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_auto_add_frd_not;

    /**
     * Creates a plain object from a mahjong_lc_auto_add_frd_not message. Also converts values to other types if specified.
     * @param message mahjong_lc_auto_add_frd_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_auto_add_frd_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_auto_add_frd_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_ply_join_not20121227. */
export interface Imahjong_bc_ply_join_not20121227 {

    /** mahjong_bc_ply_join_not20121227 plyData */
    plyData: Imahjong_PlyBaseData20121227;
}

/** Represents a mahjong_bc_ply_join_not20121227. */
export class mahjong_bc_ply_join_not20121227 implements Imahjong_bc_ply_join_not20121227 {

    /**
     * Constructs a new mahjong_bc_ply_join_not20121227.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_ply_join_not20121227);

    /** mahjong_bc_ply_join_not20121227 plyData. */
    public plyData: Imahjong_PlyBaseData20121227;

    /**
     * Creates a new mahjong_bc_ply_join_not20121227 instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_ply_join_not20121227 instance
     */
    public static create(properties?: Imahjong_bc_ply_join_not20121227): mahjong_bc_ply_join_not20121227;

    /**
     * Encodes the specified mahjong_bc_ply_join_not20121227 message. Does not implicitly {@link mahjong_bc_ply_join_not20121227.verify|verify} messages.
     * @param message mahjong_bc_ply_join_not20121227 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_ply_join_not20121227, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_ply_join_not20121227 message, length delimited. Does not implicitly {@link mahjong_bc_ply_join_not20121227.verify|verify} messages.
     * @param message mahjong_bc_ply_join_not20121227 message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_ply_join_not20121227, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_ply_join_not20121227 message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_ply_join_not20121227
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_ply_join_not20121227;

    /**
     * Decodes a mahjong_bc_ply_join_not20121227 message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_ply_join_not20121227
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_ply_join_not20121227;

    /**
     * Verifies a mahjong_bc_ply_join_not20121227 message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_ply_join_not20121227 message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_ply_join_not20121227
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_ply_join_not20121227;

    /**
     * Creates a plain object from a mahjong_bc_ply_join_not20121227 message. Also converts values to other types if specified.
     * @param message mahjong_bc_ply_join_not20121227
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_ply_join_not20121227, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_ply_join_not20121227 to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_LuckDrawItemData. */
export interface Imahjong_LuckDrawItemData {

    /** mahjong_LuckDrawItemData index */
    index: number;

    /** mahjong_LuckDrawItemData number */
    number: number;
}

/** Represents a mahjong_LuckDrawItemData. */
export class mahjong_LuckDrawItemData implements Imahjong_LuckDrawItemData {

    /**
     * Constructs a new mahjong_LuckDrawItemData.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_LuckDrawItemData);

    /** mahjong_LuckDrawItemData index. */
    public index: number;

    /** mahjong_LuckDrawItemData number. */
    public number: number;

    /**
     * Creates a new mahjong_LuckDrawItemData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_LuckDrawItemData instance
     */
    public static create(properties?: Imahjong_LuckDrawItemData): mahjong_LuckDrawItemData;

    /**
     * Encodes the specified mahjong_LuckDrawItemData message. Does not implicitly {@link mahjong_LuckDrawItemData.verify|verify} messages.
     * @param message mahjong_LuckDrawItemData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_LuckDrawItemData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_LuckDrawItemData message, length delimited. Does not implicitly {@link mahjong_LuckDrawItemData.verify|verify} messages.
     * @param message mahjong_LuckDrawItemData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_LuckDrawItemData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_LuckDrawItemData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_LuckDrawItemData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_LuckDrawItemData;

    /**
     * Decodes a mahjong_LuckDrawItemData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_LuckDrawItemData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_LuckDrawItemData;

    /**
     * Verifies a mahjong_LuckDrawItemData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_LuckDrawItemData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_LuckDrawItemData
     */
    public static fromObject(object: { [k: string]: any }): mahjong_LuckDrawItemData;

    /**
     * Creates a plain object from a mahjong_LuckDrawItemData message. Also converts values to other types if specified.
     * @param message mahjong_LuckDrawItemData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_LuckDrawItemData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_LuckDrawItemData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_table_change_noti. */
export interface Imahjong_lc_table_change_noti {

    /** mahjong_lc_table_change_noti serverId */
    serverId: number;

    /** mahjong_lc_table_change_noti tableId */
    tableId: number;

    /** mahjong_lc_table_change_noti changeType */
    changeType: number;

    /** mahjong_lc_table_change_noti param */
    param: number;

    /** mahjong_lc_table_change_noti value */
    value: (number|Long);
}

/** Represents a mahjong_lc_table_change_noti. */
export class mahjong_lc_table_change_noti implements Imahjong_lc_table_change_noti {

    /**
     * Constructs a new mahjong_lc_table_change_noti.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_table_change_noti);

    /** mahjong_lc_table_change_noti serverId. */
    public serverId: number;

    /** mahjong_lc_table_change_noti tableId. */
    public tableId: number;

    /** mahjong_lc_table_change_noti changeType. */
    public changeType: number;

    /** mahjong_lc_table_change_noti param. */
    public param: number;

    /** mahjong_lc_table_change_noti value. */
    public value: (number|Long);

    /**
     * Creates a new mahjong_lc_table_change_noti instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_table_change_noti instance
     */
    public static create(properties?: Imahjong_lc_table_change_noti): mahjong_lc_table_change_noti;

    /**
     * Encodes the specified mahjong_lc_table_change_noti message. Does not implicitly {@link mahjong_lc_table_change_noti.verify|verify} messages.
     * @param message mahjong_lc_table_change_noti message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_table_change_noti, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_table_change_noti message, length delimited. Does not implicitly {@link mahjong_lc_table_change_noti.verify|verify} messages.
     * @param message mahjong_lc_table_change_noti message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_table_change_noti, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_table_change_noti message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_table_change_noti
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_table_change_noti;

    /**
     * Decodes a mahjong_lc_table_change_noti message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_table_change_noti
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_table_change_noti;

    /**
     * Verifies a mahjong_lc_table_change_noti message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_table_change_noti message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_table_change_noti
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_table_change_noti;

    /**
     * Creates a plain object from a mahjong_lc_table_change_noti message. Also converts values to other types if specified.
     * @param message mahjong_lc_table_change_noti
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_table_change_noti, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_table_change_noti to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_active_game_server_info_req. */
export interface Imahjong_cl_active_game_server_info_req {

    /** mahjong_cl_active_game_server_info_req gameId */
    gameId: number;

    /** mahjong_cl_active_game_server_info_req serverType */
    serverType: number;

    /** mahjong_cl_active_game_server_info_req serverId */
    serverId: number;
}

/** Represents a mahjong_cl_active_game_server_info_req. */
export class mahjong_cl_active_game_server_info_req implements Imahjong_cl_active_game_server_info_req {

    /**
     * Constructs a new mahjong_cl_active_game_server_info_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_active_game_server_info_req);

    /** mahjong_cl_active_game_server_info_req gameId. */
    public gameId: number;

    /** mahjong_cl_active_game_server_info_req serverType. */
    public serverType: number;

    /** mahjong_cl_active_game_server_info_req serverId. */
    public serverId: number;

    /**
     * Creates a new mahjong_cl_active_game_server_info_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_active_game_server_info_req instance
     */
    public static create(properties?: Imahjong_cl_active_game_server_info_req): mahjong_cl_active_game_server_info_req;

    /**
     * Encodes the specified mahjong_cl_active_game_server_info_req message. Does not implicitly {@link mahjong_cl_active_game_server_info_req.verify|verify} messages.
     * @param message mahjong_cl_active_game_server_info_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_active_game_server_info_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_active_game_server_info_req message, length delimited. Does not implicitly {@link mahjong_cl_active_game_server_info_req.verify|verify} messages.
     * @param message mahjong_cl_active_game_server_info_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_active_game_server_info_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_active_game_server_info_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_active_game_server_info_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_active_game_server_info_req;

    /**
     * Decodes a mahjong_cl_active_game_server_info_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_active_game_server_info_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_active_game_server_info_req;

    /**
     * Verifies a mahjong_cl_active_game_server_info_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_active_game_server_info_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_active_game_server_info_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_active_game_server_info_req;

    /**
     * Creates a plain object from a mahjong_cl_active_game_server_info_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_active_game_server_info_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_active_game_server_info_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_active_game_server_info_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_web_socket_shake_hand_ack. */
export interface Imahjong_bc_web_socket_shake_hand_ack {

    /** mahjong_bc_web_socket_shake_hand_ack webSocketKey */
    webSocketKey: string;
}

/** Represents a mahjong_bc_web_socket_shake_hand_ack. */
export class mahjong_bc_web_socket_shake_hand_ack implements Imahjong_bc_web_socket_shake_hand_ack {

    /**
     * Constructs a new mahjong_bc_web_socket_shake_hand_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_web_socket_shake_hand_ack);

    /** mahjong_bc_web_socket_shake_hand_ack webSocketKey. */
    public webSocketKey: string;

    /**
     * Creates a new mahjong_bc_web_socket_shake_hand_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_web_socket_shake_hand_ack instance
     */
    public static create(properties?: Imahjong_bc_web_socket_shake_hand_ack): mahjong_bc_web_socket_shake_hand_ack;

    /**
     * Encodes the specified mahjong_bc_web_socket_shake_hand_ack message. Does not implicitly {@link mahjong_bc_web_socket_shake_hand_ack.verify|verify} messages.
     * @param message mahjong_bc_web_socket_shake_hand_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_web_socket_shake_hand_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_web_socket_shake_hand_ack message, length delimited. Does not implicitly {@link mahjong_bc_web_socket_shake_hand_ack.verify|verify} messages.
     * @param message mahjong_bc_web_socket_shake_hand_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_web_socket_shake_hand_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_web_socket_shake_hand_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_web_socket_shake_hand_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_web_socket_shake_hand_ack;

    /**
     * Decodes a mahjong_bc_web_socket_shake_hand_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_web_socket_shake_hand_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_web_socket_shake_hand_ack;

    /**
     * Verifies a mahjong_bc_web_socket_shake_hand_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_web_socket_shake_hand_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_web_socket_shake_hand_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_web_socket_shake_hand_ack;

    /**
     * Creates a plain object from a mahjong_bc_web_socket_shake_hand_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_web_socket_shake_hand_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_web_socket_shake_hand_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_web_socket_shake_hand_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_daily_task_award_req. */
export interface Imahjong_cl_get_daily_task_award_req {

    /** mahjong_cl_get_daily_task_award_req index */
    index: number;
}

/** Represents a mahjong_cl_get_daily_task_award_req. */
export class mahjong_cl_get_daily_task_award_req implements Imahjong_cl_get_daily_task_award_req {

    /**
     * Constructs a new mahjong_cl_get_daily_task_award_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_daily_task_award_req);

    /** mahjong_cl_get_daily_task_award_req index. */
    public index: number;

    /**
     * Creates a new mahjong_cl_get_daily_task_award_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_daily_task_award_req instance
     */
    public static create(properties?: Imahjong_cl_get_daily_task_award_req): mahjong_cl_get_daily_task_award_req;

    /**
     * Encodes the specified mahjong_cl_get_daily_task_award_req message. Does not implicitly {@link mahjong_cl_get_daily_task_award_req.verify|verify} messages.
     * @param message mahjong_cl_get_daily_task_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_daily_task_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_daily_task_award_req message, length delimited. Does not implicitly {@link mahjong_cl_get_daily_task_award_req.verify|verify} messages.
     * @param message mahjong_cl_get_daily_task_award_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_daily_task_award_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_daily_task_award_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_daily_task_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_daily_task_award_req;

    /**
     * Decodes a mahjong_cl_get_daily_task_award_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_daily_task_award_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_daily_task_award_req;

    /**
     * Verifies a mahjong_cl_get_daily_task_award_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_daily_task_award_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_daily_task_award_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_daily_task_award_req;

    /**
     * Creates a plain object from a mahjong_cl_get_daily_task_award_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_daily_task_award_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_daily_task_award_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_daily_task_award_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_daily_task_list_ack. */
export interface Imahjong_lc_get_daily_task_list_ack {

    /** mahjong_lc_get_daily_task_list_ack items */
    items?: (Imahjong_AchieveData2[]|null);
}

/** Represents a mahjong_lc_get_daily_task_list_ack. */
export class mahjong_lc_get_daily_task_list_ack implements Imahjong_lc_get_daily_task_list_ack {

    /**
     * Constructs a new mahjong_lc_get_daily_task_list_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_daily_task_list_ack);

    /** mahjong_lc_get_daily_task_list_ack items. */
    public items: Imahjong_AchieveData2[];

    /**
     * Creates a new mahjong_lc_get_daily_task_list_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_daily_task_list_ack instance
     */
    public static create(properties?: Imahjong_lc_get_daily_task_list_ack): mahjong_lc_get_daily_task_list_ack;

    /**
     * Encodes the specified mahjong_lc_get_daily_task_list_ack message. Does not implicitly {@link mahjong_lc_get_daily_task_list_ack.verify|verify} messages.
     * @param message mahjong_lc_get_daily_task_list_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_daily_task_list_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_daily_task_list_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_daily_task_list_ack.verify|verify} messages.
     * @param message mahjong_lc_get_daily_task_list_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_daily_task_list_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_daily_task_list_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_daily_task_list_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_daily_task_list_ack;

    /**
     * Decodes a mahjong_lc_get_daily_task_list_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_daily_task_list_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_daily_task_list_ack;

    /**
     * Verifies a mahjong_lc_get_daily_task_list_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_daily_task_list_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_daily_task_list_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_daily_task_list_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_daily_task_list_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_daily_task_list_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_daily_task_list_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_daily_task_list_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_active_game_server_info_ack. */
export interface Imahjong_lc_active_game_server_info_ack {

    /** mahjong_lc_active_game_server_info_ack ret */
    ret: number;

    /** mahjong_lc_active_game_server_info_ack serverStatus */
    serverStatus: Imahjong_ServerData2;
}

/** Represents a mahjong_lc_active_game_server_info_ack. */
export class mahjong_lc_active_game_server_info_ack implements Imahjong_lc_active_game_server_info_ack {

    /**
     * Constructs a new mahjong_lc_active_game_server_info_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_active_game_server_info_ack);

    /** mahjong_lc_active_game_server_info_ack ret. */
    public ret: number;

    /** mahjong_lc_active_game_server_info_ack serverStatus. */
    public serverStatus: Imahjong_ServerData2;

    /**
     * Creates a new mahjong_lc_active_game_server_info_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_active_game_server_info_ack instance
     */
    public static create(properties?: Imahjong_lc_active_game_server_info_ack): mahjong_lc_active_game_server_info_ack;

    /**
     * Encodes the specified mahjong_lc_active_game_server_info_ack message. Does not implicitly {@link mahjong_lc_active_game_server_info_ack.verify|verify} messages.
     * @param message mahjong_lc_active_game_server_info_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_active_game_server_info_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_active_game_server_info_ack message, length delimited. Does not implicitly {@link mahjong_lc_active_game_server_info_ack.verify|verify} messages.
     * @param message mahjong_lc_active_game_server_info_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_active_game_server_info_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_active_game_server_info_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_active_game_server_info_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_active_game_server_info_ack;

    /**
     * Decodes a mahjong_lc_active_game_server_info_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_active_game_server_info_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_active_game_server_info_ack;

    /**
     * Verifies a mahjong_lc_active_game_server_info_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_active_game_server_info_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_active_game_server_info_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_active_game_server_info_ack;

    /**
     * Creates a plain object from a mahjong_lc_active_game_server_info_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_active_game_server_info_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_active_game_server_info_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_active_game_server_info_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_safe_data_ack. */
export interface Imahjong_lc_get_safe_data_ack {

    /** mahjong_lc_get_safe_data_ack ret */
    ret: number;

    /** mahjong_lc_get_safe_data_ack plyGuid */
    plyGuid: (number|Long);

    /** mahjong_lc_get_safe_data_ack amount */
    amount: (number|Long);

    /** mahjong_lc_get_safe_data_ack money */
    money: (number|Long);

    /** mahjong_lc_get_safe_data_ack isBindMobile */
    isBindMobile: number;
}

/** Represents a mahjong_lc_get_safe_data_ack. */
export class mahjong_lc_get_safe_data_ack implements Imahjong_lc_get_safe_data_ack {

    /**
     * Constructs a new mahjong_lc_get_safe_data_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_safe_data_ack);

    /** mahjong_lc_get_safe_data_ack ret. */
    public ret: number;

    /** mahjong_lc_get_safe_data_ack plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_lc_get_safe_data_ack amount. */
    public amount: (number|Long);

    /** mahjong_lc_get_safe_data_ack money. */
    public money: (number|Long);

    /** mahjong_lc_get_safe_data_ack isBindMobile. */
    public isBindMobile: number;

    /**
     * Creates a new mahjong_lc_get_safe_data_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_safe_data_ack instance
     */
    public static create(properties?: Imahjong_lc_get_safe_data_ack): mahjong_lc_get_safe_data_ack;

    /**
     * Encodes the specified mahjong_lc_get_safe_data_ack message. Does not implicitly {@link mahjong_lc_get_safe_data_ack.verify|verify} messages.
     * @param message mahjong_lc_get_safe_data_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_safe_data_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_safe_data_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_safe_data_ack.verify|verify} messages.
     * @param message mahjong_lc_get_safe_data_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_safe_data_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_safe_data_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_safe_data_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_safe_data_ack;

    /**
     * Decodes a mahjong_lc_get_safe_data_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_safe_data_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_safe_data_ack;

    /**
     * Verifies a mahjong_lc_get_safe_data_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_safe_data_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_safe_data_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_safe_data_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_safe_data_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_safe_data_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_safe_data_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_safe_data_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_zzyk_award_ack. */
export interface Imahjong_lc_get_zzyk_award_ack {

    /** mahjong_lc_get_zzyk_award_ack ret */
    ret: number;

    /** mahjong_lc_get_zzyk_award_ack money */
    money: number;

    /** mahjong_lc_get_zzyk_award_ack flag */
    flag: number;
}

/** Represents a mahjong_lc_get_zzyk_award_ack. */
export class mahjong_lc_get_zzyk_award_ack implements Imahjong_lc_get_zzyk_award_ack {

    /**
     * Constructs a new mahjong_lc_get_zzyk_award_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_zzyk_award_ack);

    /** mahjong_lc_get_zzyk_award_ack ret. */
    public ret: number;

    /** mahjong_lc_get_zzyk_award_ack money. */
    public money: number;

    /** mahjong_lc_get_zzyk_award_ack flag. */
    public flag: number;

    /**
     * Creates a new mahjong_lc_get_zzyk_award_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_zzyk_award_ack instance
     */
    public static create(properties?: Imahjong_lc_get_zzyk_award_ack): mahjong_lc_get_zzyk_award_ack;

    /**
     * Encodes the specified mahjong_lc_get_zzyk_award_ack message. Does not implicitly {@link mahjong_lc_get_zzyk_award_ack.verify|verify} messages.
     * @param message mahjong_lc_get_zzyk_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_zzyk_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_zzyk_award_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_zzyk_award_ack.verify|verify} messages.
     * @param message mahjong_lc_get_zzyk_award_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_zzyk_award_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_zzyk_award_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_zzyk_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_zzyk_award_ack;

    /**
     * Decodes a mahjong_lc_get_zzyk_award_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_zzyk_award_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_zzyk_award_ack;

    /**
     * Verifies a mahjong_lc_get_zzyk_award_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_zzyk_award_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_zzyk_award_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_zzyk_award_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_zzyk_award_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_zzyk_award_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_zzyk_award_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_zzyk_award_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_user_signin_days_ack. */
export interface Imahjong_lc_get_user_signin_days_ack {

    /** mahjong_lc_get_user_signin_days_ack ret */
    ret: number;

    /** mahjong_lc_get_user_signin_days_ack signinInfo */
    signinInfo: Imahjong_SigninInfo;
}

/** Represents a mahjong_lc_get_user_signin_days_ack. */
export class mahjong_lc_get_user_signin_days_ack implements Imahjong_lc_get_user_signin_days_ack {

    /**
     * Constructs a new mahjong_lc_get_user_signin_days_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_user_signin_days_ack);

    /** mahjong_lc_get_user_signin_days_ack ret. */
    public ret: number;

    /** mahjong_lc_get_user_signin_days_ack signinInfo. */
    public signinInfo: Imahjong_SigninInfo;

    /**
     * Creates a new mahjong_lc_get_user_signin_days_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_user_signin_days_ack instance
     */
    public static create(properties?: Imahjong_lc_get_user_signin_days_ack): mahjong_lc_get_user_signin_days_ack;

    /**
     * Encodes the specified mahjong_lc_get_user_signin_days_ack message. Does not implicitly {@link mahjong_lc_get_user_signin_days_ack.verify|verify} messages.
     * @param message mahjong_lc_get_user_signin_days_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_user_signin_days_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_user_signin_days_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_user_signin_days_ack.verify|verify} messages.
     * @param message mahjong_lc_get_user_signin_days_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_user_signin_days_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_user_signin_days_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_user_signin_days_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_user_signin_days_ack;

    /**
     * Decodes a mahjong_lc_get_user_signin_days_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_user_signin_days_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_user_signin_days_ack;

    /**
     * Verifies a mahjong_lc_get_user_signin_days_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_user_signin_days_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_user_signin_days_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_user_signin_days_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_user_signin_days_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_user_signin_days_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_user_signin_days_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_user_signin_days_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_PlyLobbyData. */
export interface Imahjong_PlyLobbyData {

    /** mahjong_PlyLobbyData plyGuid */
    plyGuid: (number|Long);

    /** mahjong_PlyLobbyData nickname */
    nickname: string;

    /** mahjong_PlyLobbyData sex */
    sex: number;

    /** mahjong_PlyLobbyData gift */
    gift: number;

    /** mahjong_PlyLobbyData money */
    money: (number|Long);

    /** mahjong_PlyLobbyData score */
    score: number;

    /** mahjong_PlyLobbyData won */
    won: number;

    /** mahjong_PlyLobbyData lost */
    lost: number;

    /** mahjong_PlyLobbyData moneyRank */
    moneyRank: number;

    /** mahjong_PlyLobbyData wonRank */
    wonRank: number;

    /** mahjong_PlyLobbyData param_1 */
    param_1: number;

    /** mahjong_PlyLobbyData param_2 */
    param_2: number;
}

/** Represents a mahjong_PlyLobbyData. */
export class mahjong_PlyLobbyData implements Imahjong_PlyLobbyData {

    /**
     * Constructs a new mahjong_PlyLobbyData.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_PlyLobbyData);

    /** mahjong_PlyLobbyData plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_PlyLobbyData nickname. */
    public nickname: string;

    /** mahjong_PlyLobbyData sex. */
    public sex: number;

    /** mahjong_PlyLobbyData gift. */
    public gift: number;

    /** mahjong_PlyLobbyData money. */
    public money: (number|Long);

    /** mahjong_PlyLobbyData score. */
    public score: number;

    /** mahjong_PlyLobbyData won. */
    public won: number;

    /** mahjong_PlyLobbyData lost. */
    public lost: number;

    /** mahjong_PlyLobbyData moneyRank. */
    public moneyRank: number;

    /** mahjong_PlyLobbyData wonRank. */
    public wonRank: number;

    /** mahjong_PlyLobbyData param_1. */
    public param_1: number;

    /** mahjong_PlyLobbyData param_2. */
    public param_2: number;

    /**
     * Creates a new mahjong_PlyLobbyData instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_PlyLobbyData instance
     */
    public static create(properties?: Imahjong_PlyLobbyData): mahjong_PlyLobbyData;

    /**
     * Encodes the specified mahjong_PlyLobbyData message. Does not implicitly {@link mahjong_PlyLobbyData.verify|verify} messages.
     * @param message mahjong_PlyLobbyData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_PlyLobbyData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_PlyLobbyData message, length delimited. Does not implicitly {@link mahjong_PlyLobbyData.verify|verify} messages.
     * @param message mahjong_PlyLobbyData message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_PlyLobbyData, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_PlyLobbyData message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_PlyLobbyData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_PlyLobbyData;

    /**
     * Decodes a mahjong_PlyLobbyData message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_PlyLobbyData
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_PlyLobbyData;

    /**
     * Verifies a mahjong_PlyLobbyData message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_PlyLobbyData message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_PlyLobbyData
     */
    public static fromObject(object: { [k: string]: any }): mahjong_PlyLobbyData;

    /**
     * Creates a plain object from a mahjong_PlyLobbyData message. Also converts values to other types if specified.
     * @param message mahjong_PlyLobbyData
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_PlyLobbyData, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_PlyLobbyData to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_store_safe_amount_req. */
export interface Imahjong_cl_store_safe_amount_req {

    /** mahjong_cl_store_safe_amount_req plyGuid */
    plyGuid: (number|Long);

    /** mahjong_cl_store_safe_amount_req amount */
    amount: (number|Long);
}

/** Represents a mahjong_cl_store_safe_amount_req. */
export class mahjong_cl_store_safe_amount_req implements Imahjong_cl_store_safe_amount_req {

    /**
     * Constructs a new mahjong_cl_store_safe_amount_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_store_safe_amount_req);

    /** mahjong_cl_store_safe_amount_req plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_cl_store_safe_amount_req amount. */
    public amount: (number|Long);

    /**
     * Creates a new mahjong_cl_store_safe_amount_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_store_safe_amount_req instance
     */
    public static create(properties?: Imahjong_cl_store_safe_amount_req): mahjong_cl_store_safe_amount_req;

    /**
     * Encodes the specified mahjong_cl_store_safe_amount_req message. Does not implicitly {@link mahjong_cl_store_safe_amount_req.verify|verify} messages.
     * @param message mahjong_cl_store_safe_amount_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_store_safe_amount_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_store_safe_amount_req message, length delimited. Does not implicitly {@link mahjong_cl_store_safe_amount_req.verify|verify} messages.
     * @param message mahjong_cl_store_safe_amount_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_store_safe_amount_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_store_safe_amount_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_store_safe_amount_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_store_safe_amount_req;

    /**
     * Decodes a mahjong_cl_store_safe_amount_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_store_safe_amount_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_store_safe_amount_req;

    /**
     * Verifies a mahjong_cl_store_safe_amount_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_store_safe_amount_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_store_safe_amount_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_store_safe_amount_req;

    /**
     * Creates a plain object from a mahjong_cl_store_safe_amount_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_store_safe_amount_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_store_safe_amount_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_store_safe_amount_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_three_draw_data_req. */
export interface Imahjong_cl_get_three_draw_data_req {
}

/** Represents a mahjong_cl_get_three_draw_data_req. */
export class mahjong_cl_get_three_draw_data_req implements Imahjong_cl_get_three_draw_data_req {

    /**
     * Constructs a new mahjong_cl_get_three_draw_data_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_three_draw_data_req);

    /**
     * Creates a new mahjong_cl_get_three_draw_data_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_three_draw_data_req instance
     */
    public static create(properties?: Imahjong_cl_get_three_draw_data_req): mahjong_cl_get_three_draw_data_req;

    /**
     * Encodes the specified mahjong_cl_get_three_draw_data_req message. Does not implicitly {@link mahjong_cl_get_three_draw_data_req.verify|verify} messages.
     * @param message mahjong_cl_get_three_draw_data_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_three_draw_data_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_three_draw_data_req message, length delimited. Does not implicitly {@link mahjong_cl_get_three_draw_data_req.verify|verify} messages.
     * @param message mahjong_cl_get_three_draw_data_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_three_draw_data_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_three_draw_data_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_three_draw_data_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_three_draw_data_req;

    /**
     * Decodes a mahjong_cl_get_three_draw_data_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_three_draw_data_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_three_draw_data_req;

    /**
     * Verifies a mahjong_cl_get_three_draw_data_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_three_draw_data_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_three_draw_data_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_three_draw_data_req;

    /**
     * Creates a plain object from a mahjong_cl_get_three_draw_data_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_three_draw_data_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_three_draw_data_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_three_draw_data_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_set_ply_city_data_ack. */
export interface Imahjong_lc_set_ply_city_data_ack {

    /** mahjong_lc_set_ply_city_data_ack ret */
    ret: number;

    /** mahjong_lc_set_ply_city_data_ack nProv */
    nProv: number;

    /** mahjong_lc_set_ply_city_data_ack nCity */
    nCity: number;

    /** mahjong_lc_set_ply_city_data_ack nCounty */
    nCounty: number;
}

/** Represents a mahjong_lc_set_ply_city_data_ack. */
export class mahjong_lc_set_ply_city_data_ack implements Imahjong_lc_set_ply_city_data_ack {

    /**
     * Constructs a new mahjong_lc_set_ply_city_data_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_set_ply_city_data_ack);

    /** mahjong_lc_set_ply_city_data_ack ret. */
    public ret: number;

    /** mahjong_lc_set_ply_city_data_ack nProv. */
    public nProv: number;

    /** mahjong_lc_set_ply_city_data_ack nCity. */
    public nCity: number;

    /** mahjong_lc_set_ply_city_data_ack nCounty. */
    public nCounty: number;

    /**
     * Creates a new mahjong_lc_set_ply_city_data_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_set_ply_city_data_ack instance
     */
    public static create(properties?: Imahjong_lc_set_ply_city_data_ack): mahjong_lc_set_ply_city_data_ack;

    /**
     * Encodes the specified mahjong_lc_set_ply_city_data_ack message. Does not implicitly {@link mahjong_lc_set_ply_city_data_ack.verify|verify} messages.
     * @param message mahjong_lc_set_ply_city_data_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_set_ply_city_data_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_set_ply_city_data_ack message, length delimited. Does not implicitly {@link mahjong_lc_set_ply_city_data_ack.verify|verify} messages.
     * @param message mahjong_lc_set_ply_city_data_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_set_ply_city_data_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_set_ply_city_data_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_set_ply_city_data_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_set_ply_city_data_ack;

    /**
     * Decodes a mahjong_lc_set_ply_city_data_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_set_ply_city_data_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_set_ply_city_data_ack;

    /**
     * Verifies a mahjong_lc_set_ply_city_data_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_set_ply_city_data_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_set_ply_city_data_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_set_ply_city_data_ack;

    /**
     * Creates a plain object from a mahjong_lc_set_ply_city_data_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_set_ply_city_data_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_set_ply_city_data_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_set_ply_city_data_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_private_invite_info_req. */
export interface Imahjong_cl_get_private_invite_info_req {

    /** mahjong_cl_get_private_invite_info_req inviteCode */
    inviteCode: number;
}

/** Represents a mahjong_cl_get_private_invite_info_req. */
export class mahjong_cl_get_private_invite_info_req implements Imahjong_cl_get_private_invite_info_req {

    /**
     * Constructs a new mahjong_cl_get_private_invite_info_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_private_invite_info_req);

    /** mahjong_cl_get_private_invite_info_req inviteCode. */
    public inviteCode: number;

    /**
     * Creates a new mahjong_cl_get_private_invite_info_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_private_invite_info_req instance
     */
    public static create(properties?: Imahjong_cl_get_private_invite_info_req): mahjong_cl_get_private_invite_info_req;

    /**
     * Encodes the specified mahjong_cl_get_private_invite_info_req message. Does not implicitly {@link mahjong_cl_get_private_invite_info_req.verify|verify} messages.
     * @param message mahjong_cl_get_private_invite_info_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_private_invite_info_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_private_invite_info_req message, length delimited. Does not implicitly {@link mahjong_cl_get_private_invite_info_req.verify|verify} messages.
     * @param message mahjong_cl_get_private_invite_info_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_private_invite_info_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_private_invite_info_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_private_invite_info_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_private_invite_info_req;

    /**
     * Decodes a mahjong_cl_get_private_invite_info_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_private_invite_info_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_private_invite_info_req;

    /**
     * Verifies a mahjong_cl_get_private_invite_info_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_private_invite_info_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_private_invite_info_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_private_invite_info_req;

    /**
     * Creates a plain object from a mahjong_cl_get_private_invite_info_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_private_invite_info_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_private_invite_info_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_private_invite_info_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_private_invite_info_ack. */
export interface Imahjong_lc_get_private_invite_info_ack {

    /** mahjong_lc_get_private_invite_info_ack ret */
    ret: number;

    /** mahjong_lc_get_private_invite_info_ack privateInvite */
    privateInvite: Imahjong_PrivateInvite;
}

/** Represents a mahjong_lc_get_private_invite_info_ack. */
export class mahjong_lc_get_private_invite_info_ack implements Imahjong_lc_get_private_invite_info_ack {

    /**
     * Constructs a new mahjong_lc_get_private_invite_info_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_private_invite_info_ack);

    /** mahjong_lc_get_private_invite_info_ack ret. */
    public ret: number;

    /** mahjong_lc_get_private_invite_info_ack privateInvite. */
    public privateInvite: Imahjong_PrivateInvite;

    /**
     * Creates a new mahjong_lc_get_private_invite_info_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_private_invite_info_ack instance
     */
    public static create(properties?: Imahjong_lc_get_private_invite_info_ack): mahjong_lc_get_private_invite_info_ack;

    /**
     * Encodes the specified mahjong_lc_get_private_invite_info_ack message. Does not implicitly {@link mahjong_lc_get_private_invite_info_ack.verify|verify} messages.
     * @param message mahjong_lc_get_private_invite_info_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_private_invite_info_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_private_invite_info_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_private_invite_info_ack.verify|verify} messages.
     * @param message mahjong_lc_get_private_invite_info_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_private_invite_info_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_private_invite_info_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_private_invite_info_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_private_invite_info_ack;

    /**
     * Decodes a mahjong_lc_get_private_invite_info_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_private_invite_info_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_private_invite_info_ack;

    /**
     * Verifies a mahjong_lc_get_private_invite_info_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_private_invite_info_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_private_invite_info_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_private_invite_info_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_private_invite_info_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_private_invite_info_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_private_invite_info_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_private_invite_info_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_PrivateInvite. */
export interface Imahjong_PrivateInvite {

    /** mahjong_PrivateInvite gameId */
    gameId: number;

    /** mahjong_PrivateInvite serverId */
    serverId: number;

    /** mahjong_PrivateInvite tableId */
    tableId: number;

    /** mahjong_PrivateInvite baseScore */
    baseScore: number;

    /** mahjong_PrivateInvite inviteCode */
    inviteCode: number;

    /** mahjong_PrivateInvite createTime */
    createTime: number;

    /** mahjong_PrivateInvite tableTime */
    tableTime: number;

    /** mahjong_PrivateInvite flag */
    flag: number;

    /** mahjong_PrivateInvite ownerGuid */
    ownerGuid: (number|Long);

    /** mahjong_PrivateInvite roomName */
    roomName: string;

    /** mahjong_PrivateInvite gameRule */
    gameRule: number;

    /** mahjong_PrivateInvite gameRuleGroup */
    gameRuleGroup?: (number[]|null);

    /** mahjong_PrivateInvite gameJson */
    gameJson: string;

    /** mahjong_PrivateInvite startGameTime */
    startGameTime: number;

    /** mahjong_PrivateInvite leftTime */
    leftTime: number;
}

/** Represents a mahjong_PrivateInvite. */
export class mahjong_PrivateInvite implements Imahjong_PrivateInvite {

    /**
     * Constructs a new mahjong_PrivateInvite.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_PrivateInvite);

    /** mahjong_PrivateInvite gameId. */
    public gameId: number;

    /** mahjong_PrivateInvite serverId. */
    public serverId: number;

    /** mahjong_PrivateInvite tableId. */
    public tableId: number;

    /** mahjong_PrivateInvite baseScore. */
    public baseScore: number;

    /** mahjong_PrivateInvite inviteCode. */
    public inviteCode: number;

    /** mahjong_PrivateInvite createTime. */
    public createTime: number;

    /** mahjong_PrivateInvite tableTime. */
    public tableTime: number;

    /** mahjong_PrivateInvite flag. */
    public flag: number;

    /** mahjong_PrivateInvite ownerGuid. */
    public ownerGuid: (number|Long);

    /** mahjong_PrivateInvite roomName. */
    public roomName: string;

    /** mahjong_PrivateInvite gameRule. */
    public gameRule: number;

    /** mahjong_PrivateInvite gameRuleGroup. */
    public gameRuleGroup: number[];

    /** mahjong_PrivateInvite gameJson. */
    public gameJson: string;

    /** mahjong_PrivateInvite startGameTime. */
    public startGameTime: number;

    /** mahjong_PrivateInvite leftTime. */
    public leftTime: number;

    /**
     * Creates a new mahjong_PrivateInvite instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_PrivateInvite instance
     */
    public static create(properties?: Imahjong_PrivateInvite): mahjong_PrivateInvite;

    /**
     * Encodes the specified mahjong_PrivateInvite message. Does not implicitly {@link mahjong_PrivateInvite.verify|verify} messages.
     * @param message mahjong_PrivateInvite message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_PrivateInvite, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_PrivateInvite message, length delimited. Does not implicitly {@link mahjong_PrivateInvite.verify|verify} messages.
     * @param message mahjong_PrivateInvite message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_PrivateInvite, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_PrivateInvite message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_PrivateInvite
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_PrivateInvite;

    /**
     * Decodes a mahjong_PrivateInvite message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_PrivateInvite
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_PrivateInvite;

    /**
     * Verifies a mahjong_PrivateInvite message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_PrivateInvite message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_PrivateInvite
     */
    public static fromObject(object: { [k: string]: any }): mahjong_PrivateInvite;

    /**
     * Creates a plain object from a mahjong_PrivateInvite message. Also converts values to other types if specified.
     * @param message mahjong_PrivateInvite
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_PrivateInvite, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_PrivateInvite to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_private_game_data_list_req. */
export interface Imahjong_cl_get_private_game_data_list_req {

    /** mahjong_cl_get_private_game_data_list_req time */
    time: number;
}

/** Represents a mahjong_cl_get_private_game_data_list_req. */
export class mahjong_cl_get_private_game_data_list_req implements Imahjong_cl_get_private_game_data_list_req {

    /**
     * Constructs a new mahjong_cl_get_private_game_data_list_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_private_game_data_list_req);

    /** mahjong_cl_get_private_game_data_list_req time. */
    public time: number;

    /**
     * Creates a new mahjong_cl_get_private_game_data_list_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_private_game_data_list_req instance
     */
    public static create(properties?: Imahjong_cl_get_private_game_data_list_req): mahjong_cl_get_private_game_data_list_req;

    /**
     * Encodes the specified mahjong_cl_get_private_game_data_list_req message. Does not implicitly {@link mahjong_cl_get_private_game_data_list_req.verify|verify} messages.
     * @param message mahjong_cl_get_private_game_data_list_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_private_game_data_list_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_private_game_data_list_req message, length delimited. Does not implicitly {@link mahjong_cl_get_private_game_data_list_req.verify|verify} messages.
     * @param message mahjong_cl_get_private_game_data_list_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_private_game_data_list_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_private_game_data_list_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_private_game_data_list_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_private_game_data_list_req;

    /**
     * Decodes a mahjong_cl_get_private_game_data_list_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_private_game_data_list_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_private_game_data_list_req;

    /**
     * Verifies a mahjong_cl_get_private_game_data_list_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_private_game_data_list_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_private_game_data_list_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_private_game_data_list_req;

    /**
     * Creates a plain object from a mahjong_cl_get_private_game_data_list_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_private_game_data_list_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_private_game_data_list_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_private_game_data_list_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_private_game_data_list_ack. */
export interface Imahjong_lc_get_private_game_data_list_ack {

    /** mahjong_lc_get_private_game_data_list_ack data */
    data?: (Imahjong_PrivateGameDataAll[]|null);

    /** mahjong_lc_get_private_game_data_list_ack types */
    types?: (number[]|null);

    /** mahjong_lc_get_private_game_data_list_ack itemIndexs */
    itemIndexs?: (number[]|null);
}

/** Represents a mahjong_lc_get_private_game_data_list_ack. */
export class mahjong_lc_get_private_game_data_list_ack implements Imahjong_lc_get_private_game_data_list_ack {

    /**
     * Constructs a new mahjong_lc_get_private_game_data_list_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_private_game_data_list_ack);

    /** mahjong_lc_get_private_game_data_list_ack data. */
    public data: Imahjong_PrivateGameDataAll[];

    /** mahjong_lc_get_private_game_data_list_ack types. */
    public types: number[];

    /** mahjong_lc_get_private_game_data_list_ack itemIndexs. */
    public itemIndexs: number[];

    /**
     * Creates a new mahjong_lc_get_private_game_data_list_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_private_game_data_list_ack instance
     */
    public static create(properties?: Imahjong_lc_get_private_game_data_list_ack): mahjong_lc_get_private_game_data_list_ack;

    /**
     * Encodes the specified mahjong_lc_get_private_game_data_list_ack message. Does not implicitly {@link mahjong_lc_get_private_game_data_list_ack.verify|verify} messages.
     * @param message mahjong_lc_get_private_game_data_list_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_private_game_data_list_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_private_game_data_list_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_private_game_data_list_ack.verify|verify} messages.
     * @param message mahjong_lc_get_private_game_data_list_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_private_game_data_list_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_private_game_data_list_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_private_game_data_list_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_private_game_data_list_ack;

    /**
     * Decodes a mahjong_lc_get_private_game_data_list_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_private_game_data_list_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_private_game_data_list_ack;

    /**
     * Verifies a mahjong_lc_get_private_game_data_list_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_private_game_data_list_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_private_game_data_list_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_private_game_data_list_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_private_game_data_list_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_private_game_data_list_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_private_game_data_list_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_private_game_data_list_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_PrivateGameDataAll. */
export interface Imahjong_PrivateGameDataAll {

    /** mahjong_PrivateGameDataAll gameId */
    gameId: number;

    /** mahjong_PrivateGameDataAll createTime */
    createTime: number;

    /** mahjong_PrivateGameDataAll pastTime */
    pastTime: number;

    /** mahjong_PrivateGameDataAll inviteCode */
    inviteCode: number;

    /** mahjong_PrivateGameDataAll itemIndex */
    itemIndex: number;

    /** mahjong_PrivateGameDataAll roomStatus */
    roomStatus: number;

    /** mahjong_PrivateGameDataAll ownerGuid */
    ownerGuid: (number|Long);

    /** mahjong_PrivateGameDataAll costRoomCard */
    costRoomCard: number;

    /** mahjong_PrivateGameDataAll playerNum */
    playerNum: number;

    /** mahjong_PrivateGameDataAll playerMax */
    playerMax: number;

    /** mahjong_PrivateGameDataAll gameName */
    gameName: string;

    /** mahjong_PrivateGameDataAll ownerNickName */
    ownerNickName: string;

    /** mahjong_PrivateGameDataAll plyDatas */
    plyDatas?: (Imahjong_PrivateGameDataSelf[]|null);
}

/** Represents a mahjong_PrivateGameDataAll. */
export class mahjong_PrivateGameDataAll implements Imahjong_PrivateGameDataAll {

    /**
     * Constructs a new mahjong_PrivateGameDataAll.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_PrivateGameDataAll);

    /** mahjong_PrivateGameDataAll gameId. */
    public gameId: number;

    /** mahjong_PrivateGameDataAll createTime. */
    public createTime: number;

    /** mahjong_PrivateGameDataAll pastTime. */
    public pastTime: number;

    /** mahjong_PrivateGameDataAll inviteCode. */
    public inviteCode: number;

    /** mahjong_PrivateGameDataAll itemIndex. */
    public itemIndex: number;

    /** mahjong_PrivateGameDataAll roomStatus. */
    public roomStatus: number;

    /** mahjong_PrivateGameDataAll ownerGuid. */
    public ownerGuid: (number|Long);

    /** mahjong_PrivateGameDataAll costRoomCard. */
    public costRoomCard: number;

    /** mahjong_PrivateGameDataAll playerNum. */
    public playerNum: number;

    /** mahjong_PrivateGameDataAll playerMax. */
    public playerMax: number;

    /** mahjong_PrivateGameDataAll gameName. */
    public gameName: string;

    /** mahjong_PrivateGameDataAll ownerNickName. */
    public ownerNickName: string;

    /** mahjong_PrivateGameDataAll plyDatas. */
    public plyDatas: Imahjong_PrivateGameDataSelf[];

    /**
     * Creates a new mahjong_PrivateGameDataAll instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_PrivateGameDataAll instance
     */
    public static create(properties?: Imahjong_PrivateGameDataAll): mahjong_PrivateGameDataAll;

    /**
     * Encodes the specified mahjong_PrivateGameDataAll message. Does not implicitly {@link mahjong_PrivateGameDataAll.verify|verify} messages.
     * @param message mahjong_PrivateGameDataAll message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_PrivateGameDataAll, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_PrivateGameDataAll message, length delimited. Does not implicitly {@link mahjong_PrivateGameDataAll.verify|verify} messages.
     * @param message mahjong_PrivateGameDataAll message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_PrivateGameDataAll, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_PrivateGameDataAll message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_PrivateGameDataAll
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_PrivateGameDataAll;

    /**
     * Decodes a mahjong_PrivateGameDataAll message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_PrivateGameDataAll
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_PrivateGameDataAll;

    /**
     * Verifies a mahjong_PrivateGameDataAll message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_PrivateGameDataAll message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_PrivateGameDataAll
     */
    public static fromObject(object: { [k: string]: any }): mahjong_PrivateGameDataAll;

    /**
     * Creates a plain object from a mahjong_PrivateGameDataAll message. Also converts values to other types if specified.
     * @param message mahjong_PrivateGameDataAll
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_PrivateGameDataAll, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_PrivateGameDataAll to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_PrivateGameDataSelf. */
export interface Imahjong_PrivateGameDataSelf {

    /** mahjong_PrivateGameDataSelf plyGuid */
    plyGuid: (number|Long);

    /** mahjong_PrivateGameDataSelf itemNum */
    itemNum: (number|Long);

    /** mahjong_PrivateGameDataSelf nickName */
    nickName: string;

    /** mahjong_PrivateGameDataSelf plyStatus */
    plyStatus: number;
}

/** Represents a mahjong_PrivateGameDataSelf. */
export class mahjong_PrivateGameDataSelf implements Imahjong_PrivateGameDataSelf {

    /**
     * Constructs a new mahjong_PrivateGameDataSelf.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_PrivateGameDataSelf);

    /** mahjong_PrivateGameDataSelf plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_PrivateGameDataSelf itemNum. */
    public itemNum: (number|Long);

    /** mahjong_PrivateGameDataSelf nickName. */
    public nickName: string;

    /** mahjong_PrivateGameDataSelf plyStatus. */
    public plyStatus: number;

    /**
     * Creates a new mahjong_PrivateGameDataSelf instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_PrivateGameDataSelf instance
     */
    public static create(properties?: Imahjong_PrivateGameDataSelf): mahjong_PrivateGameDataSelf;

    /**
     * Encodes the specified mahjong_PrivateGameDataSelf message. Does not implicitly {@link mahjong_PrivateGameDataSelf.verify|verify} messages.
     * @param message mahjong_PrivateGameDataSelf message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_PrivateGameDataSelf, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_PrivateGameDataSelf message, length delimited. Does not implicitly {@link mahjong_PrivateGameDataSelf.verify|verify} messages.
     * @param message mahjong_PrivateGameDataSelf message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_PrivateGameDataSelf, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_PrivateGameDataSelf message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_PrivateGameDataSelf
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_PrivateGameDataSelf;

    /**
     * Decodes a mahjong_PrivateGameDataSelf message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_PrivateGameDataSelf
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_PrivateGameDataSelf;

    /**
     * Verifies a mahjong_PrivateGameDataSelf message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_PrivateGameDataSelf message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_PrivateGameDataSelf
     */
    public static fromObject(object: { [k: string]: any }): mahjong_PrivateGameDataSelf;

    /**
     * Creates a plain object from a mahjong_PrivateGameDataSelf message. Also converts values to other types if specified.
     * @param message mahjong_PrivateGameDataSelf
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_PrivateGameDataSelf, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_PrivateGameDataSelf to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_private_invite_code_not. */
export interface Imahjong_bc_private_invite_code_not {

    /** mahjong_bc_private_invite_code_not tableScores */
    tableScores?: ((number|Long)[]|null);

    /** mahjong_bc_private_invite_code_not privateInvite */
    privateInvite: Imahjong_PrivateInvite;
}

/** Represents a mahjong_bc_private_invite_code_not. */
export class mahjong_bc_private_invite_code_not implements Imahjong_bc_private_invite_code_not {

    /**
     * Constructs a new mahjong_bc_private_invite_code_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_private_invite_code_not);

    /** mahjong_bc_private_invite_code_not tableScores. */
    public tableScores: (number|Long)[];

    /** mahjong_bc_private_invite_code_not privateInvite. */
    public privateInvite: Imahjong_PrivateInvite;

    /**
     * Creates a new mahjong_bc_private_invite_code_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_private_invite_code_not instance
     */
    public static create(properties?: Imahjong_bc_private_invite_code_not): mahjong_bc_private_invite_code_not;

    /**
     * Encodes the specified mahjong_bc_private_invite_code_not message. Does not implicitly {@link mahjong_bc_private_invite_code_not.verify|verify} messages.
     * @param message mahjong_bc_private_invite_code_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_private_invite_code_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_private_invite_code_not message, length delimited. Does not implicitly {@link mahjong_bc_private_invite_code_not.verify|verify} messages.
     * @param message mahjong_bc_private_invite_code_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_private_invite_code_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_private_invite_code_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_private_invite_code_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_private_invite_code_not;

    /**
     * Decodes a mahjong_bc_private_invite_code_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_private_invite_code_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_private_invite_code_not;

    /**
     * Verifies a mahjong_bc_private_invite_code_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_private_invite_code_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_private_invite_code_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_private_invite_code_not;

    /**
     * Creates a plain object from a mahjong_bc_private_invite_code_not message. Also converts values to other types if specified.
     * @param message mahjong_bc_private_invite_code_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_private_invite_code_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_private_invite_code_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_lc_get_private_game_replay_ack. */
export interface Imahjong_lc_get_private_game_replay_ack {

    /** mahjong_lc_get_private_game_replay_ack data */
    data?: (Imahjong_PrivateReplay[]|null);
}

/** Represents a mahjong_lc_get_private_game_replay_ack. */
export class mahjong_lc_get_private_game_replay_ack implements Imahjong_lc_get_private_game_replay_ack {

    /**
     * Constructs a new mahjong_lc_get_private_game_replay_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_lc_get_private_game_replay_ack);

    /** mahjong_lc_get_private_game_replay_ack data. */
    public data: Imahjong_PrivateReplay[];

    /**
     * Creates a new mahjong_lc_get_private_game_replay_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_lc_get_private_game_replay_ack instance
     */
    public static create(properties?: Imahjong_lc_get_private_game_replay_ack): mahjong_lc_get_private_game_replay_ack;

    /**
     * Encodes the specified mahjong_lc_get_private_game_replay_ack message. Does not implicitly {@link mahjong_lc_get_private_game_replay_ack.verify|verify} messages.
     * @param message mahjong_lc_get_private_game_replay_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_lc_get_private_game_replay_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_lc_get_private_game_replay_ack message, length delimited. Does not implicitly {@link mahjong_lc_get_private_game_replay_ack.verify|verify} messages.
     * @param message mahjong_lc_get_private_game_replay_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_lc_get_private_game_replay_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_lc_get_private_game_replay_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_lc_get_private_game_replay_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_lc_get_private_game_replay_ack;

    /**
     * Decodes a mahjong_lc_get_private_game_replay_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_lc_get_private_game_replay_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_lc_get_private_game_replay_ack;

    /**
     * Verifies a mahjong_lc_get_private_game_replay_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_lc_get_private_game_replay_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_lc_get_private_game_replay_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_lc_get_private_game_replay_ack;

    /**
     * Creates a plain object from a mahjong_lc_get_private_game_replay_ack message. Also converts values to other types if specified.
     * @param message mahjong_lc_get_private_game_replay_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_lc_get_private_game_replay_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_lc_get_private_game_replay_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_PrivateReplay. */
export interface Imahjong_PrivateReplay {

    /** mahjong_PrivateReplay index */
    index: number;

    /** mahjong_PrivateReplay inviteCode */
    inviteCode: number;

    /** mahjong_PrivateReplay createTime */
    createTime: number;

    /** mahjong_PrivateReplay endTime */
    endTime: number;

    /** mahjong_PrivateReplay plyDatas */
    plyDatas?: (Imahjong_PrivateReplaySelf[]|null);
}

/** Represents a mahjong_PrivateReplay. */
export class mahjong_PrivateReplay implements Imahjong_PrivateReplay {

    /**
     * Constructs a new mahjong_PrivateReplay.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_PrivateReplay);

    /** mahjong_PrivateReplay index. */
    public index: number;

    /** mahjong_PrivateReplay inviteCode. */
    public inviteCode: number;

    /** mahjong_PrivateReplay createTime. */
    public createTime: number;

    /** mahjong_PrivateReplay endTime. */
    public endTime: number;

    /** mahjong_PrivateReplay plyDatas. */
    public plyDatas: Imahjong_PrivateReplaySelf[];

    /**
     * Creates a new mahjong_PrivateReplay instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_PrivateReplay instance
     */
    public static create(properties?: Imahjong_PrivateReplay): mahjong_PrivateReplay;

    /**
     * Encodes the specified mahjong_PrivateReplay message. Does not implicitly {@link mahjong_PrivateReplay.verify|verify} messages.
     * @param message mahjong_PrivateReplay message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_PrivateReplay, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_PrivateReplay message, length delimited. Does not implicitly {@link mahjong_PrivateReplay.verify|verify} messages.
     * @param message mahjong_PrivateReplay message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_PrivateReplay, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_PrivateReplay message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_PrivateReplay
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_PrivateReplay;

    /**
     * Decodes a mahjong_PrivateReplay message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_PrivateReplay
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_PrivateReplay;

    /**
     * Verifies a mahjong_PrivateReplay message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_PrivateReplay message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_PrivateReplay
     */
    public static fromObject(object: { [k: string]: any }): mahjong_PrivateReplay;

    /**
     * Creates a plain object from a mahjong_PrivateReplay message. Also converts values to other types if specified.
     * @param message mahjong_PrivateReplay
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_PrivateReplay, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_PrivateReplay to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_PrivateReplaySelf. */
export interface Imahjong_PrivateReplaySelf {

    /** mahjong_PrivateReplaySelf plyGuid */
    plyGuid: (number|Long);

    /** mahjong_PrivateReplaySelf nickName */
    nickName: string;

    /** mahjong_PrivateReplaySelf winLose */
    winLose: (number|Long);
}

/** Represents a mahjong_PrivateReplaySelf. */
export class mahjong_PrivateReplaySelf implements Imahjong_PrivateReplaySelf {

    /**
     * Constructs a new mahjong_PrivateReplaySelf.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_PrivateReplaySelf);

    /** mahjong_PrivateReplaySelf plyGuid. */
    public plyGuid: (number|Long);

    /** mahjong_PrivateReplaySelf nickName. */
    public nickName: string;

    /** mahjong_PrivateReplaySelf winLose. */
    public winLose: (number|Long);

    /**
     * Creates a new mahjong_PrivateReplaySelf instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_PrivateReplaySelf instance
     */
    public static create(properties?: Imahjong_PrivateReplaySelf): mahjong_PrivateReplaySelf;

    /**
     * Encodes the specified mahjong_PrivateReplaySelf message. Does not implicitly {@link mahjong_PrivateReplaySelf.verify|verify} messages.
     * @param message mahjong_PrivateReplaySelf message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_PrivateReplaySelf, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_PrivateReplaySelf message, length delimited. Does not implicitly {@link mahjong_PrivateReplaySelf.verify|verify} messages.
     * @param message mahjong_PrivateReplaySelf message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_PrivateReplaySelf, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_PrivateReplaySelf message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_PrivateReplaySelf
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_PrivateReplaySelf;

    /**
     * Decodes a mahjong_PrivateReplaySelf message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_PrivateReplaySelf
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_PrivateReplaySelf;

    /**
     * Verifies a mahjong_PrivateReplaySelf message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_PrivateReplaySelf message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_PrivateReplaySelf
     */
    public static fromObject(object: { [k: string]: any }): mahjong_PrivateReplaySelf;

    /**
     * Creates a plain object from a mahjong_PrivateReplaySelf message. Also converts values to other types if specified.
     * @param message mahjong_PrivateReplaySelf
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_PrivateReplaySelf, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_PrivateReplaySelf to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cl_get_private_game_replay_req. */
export interface Imahjong_cl_get_private_game_replay_req {

    /** mahjong_cl_get_private_game_replay_req inviteCode */
    inviteCode: number;

    /** mahjong_cl_get_private_game_replay_req createTime */
    createTime: number;

    /** mahjong_cl_get_private_game_replay_req lastEndTime */
    lastEndTime: number;
}

/** Represents a mahjong_cl_get_private_game_replay_req. */
export class mahjong_cl_get_private_game_replay_req implements Imahjong_cl_get_private_game_replay_req {

    /**
     * Constructs a new mahjong_cl_get_private_game_replay_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cl_get_private_game_replay_req);

    /** mahjong_cl_get_private_game_replay_req inviteCode. */
    public inviteCode: number;

    /** mahjong_cl_get_private_game_replay_req createTime. */
    public createTime: number;

    /** mahjong_cl_get_private_game_replay_req lastEndTime. */
    public lastEndTime: number;

    /**
     * Creates a new mahjong_cl_get_private_game_replay_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cl_get_private_game_replay_req instance
     */
    public static create(properties?: Imahjong_cl_get_private_game_replay_req): mahjong_cl_get_private_game_replay_req;

    /**
     * Encodes the specified mahjong_cl_get_private_game_replay_req message. Does not implicitly {@link mahjong_cl_get_private_game_replay_req.verify|verify} messages.
     * @param message mahjong_cl_get_private_game_replay_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cl_get_private_game_replay_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cl_get_private_game_replay_req message, length delimited. Does not implicitly {@link mahjong_cl_get_private_game_replay_req.verify|verify} messages.
     * @param message mahjong_cl_get_private_game_replay_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cl_get_private_game_replay_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cl_get_private_game_replay_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cl_get_private_game_replay_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cl_get_private_game_replay_req;

    /**
     * Decodes a mahjong_cl_get_private_game_replay_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cl_get_private_game_replay_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cl_get_private_game_replay_req;

    /**
     * Verifies a mahjong_cl_get_private_game_replay_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cl_get_private_game_replay_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cl_get_private_game_replay_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cl_get_private_game_replay_req;

    /**
     * Creates a plain object from a mahjong_cl_get_private_game_replay_req message. Also converts values to other types if specified.
     * @param message mahjong_cl_get_private_game_replay_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cl_get_private_game_replay_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cl_get_private_game_replay_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_dismiss_private_table_req. */
export interface Imahjong_cb_dismiss_private_table_req {
}

/** Represents a mahjong_cb_dismiss_private_table_req. */
export class mahjong_cb_dismiss_private_table_req implements Imahjong_cb_dismiss_private_table_req {

    /**
     * Constructs a new mahjong_cb_dismiss_private_table_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_dismiss_private_table_req);

    /**
     * Creates a new mahjong_cb_dismiss_private_table_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_dismiss_private_table_req instance
     */
    public static create(properties?: Imahjong_cb_dismiss_private_table_req): mahjong_cb_dismiss_private_table_req;

    /**
     * Encodes the specified mahjong_cb_dismiss_private_table_req message. Does not implicitly {@link mahjong_cb_dismiss_private_table_req.verify|verify} messages.
     * @param message mahjong_cb_dismiss_private_table_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_dismiss_private_table_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_dismiss_private_table_req message, length delimited. Does not implicitly {@link mahjong_cb_dismiss_private_table_req.verify|verify} messages.
     * @param message mahjong_cb_dismiss_private_table_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_dismiss_private_table_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_dismiss_private_table_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_dismiss_private_table_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_dismiss_private_table_req;

    /**
     * Decodes a mahjong_cb_dismiss_private_table_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_dismiss_private_table_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_dismiss_private_table_req;

    /**
     * Verifies a mahjong_cb_dismiss_private_table_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_dismiss_private_table_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_dismiss_private_table_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_dismiss_private_table_req;

    /**
     * Creates a plain object from a mahjong_cb_dismiss_private_table_req message. Also converts values to other types if specified.
     * @param message mahjong_cb_dismiss_private_table_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_dismiss_private_table_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_dismiss_private_table_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_dismiss_private_table_ack. */
export interface Imahjong_bc_dismiss_private_table_ack {

    /** mahjong_bc_dismiss_private_table_ack ret */
    ret: number;
}

/** Represents a mahjong_bc_dismiss_private_table_ack. */
export class mahjong_bc_dismiss_private_table_ack implements Imahjong_bc_dismiss_private_table_ack {

    /**
     * Constructs a new mahjong_bc_dismiss_private_table_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_dismiss_private_table_ack);

    /** mahjong_bc_dismiss_private_table_ack ret. */
    public ret: number;

    /**
     * Creates a new mahjong_bc_dismiss_private_table_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_dismiss_private_table_ack instance
     */
    public static create(properties?: Imahjong_bc_dismiss_private_table_ack): mahjong_bc_dismiss_private_table_ack;

    /**
     * Encodes the specified mahjong_bc_dismiss_private_table_ack message. Does not implicitly {@link mahjong_bc_dismiss_private_table_ack.verify|verify} messages.
     * @param message mahjong_bc_dismiss_private_table_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_dismiss_private_table_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_dismiss_private_table_ack message, length delimited. Does not implicitly {@link mahjong_bc_dismiss_private_table_ack.verify|verify} messages.
     * @param message mahjong_bc_dismiss_private_table_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_dismiss_private_table_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_dismiss_private_table_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_dismiss_private_table_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_dismiss_private_table_ack;

    /**
     * Decodes a mahjong_bc_dismiss_private_table_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_dismiss_private_table_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_dismiss_private_table_ack;

    /**
     * Verifies a mahjong_bc_dismiss_private_table_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_dismiss_private_table_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_dismiss_private_table_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_dismiss_private_table_ack;

    /**
     * Creates a plain object from a mahjong_bc_dismiss_private_table_ack message. Also converts values to other types if specified.
     * @param message mahjong_bc_dismiss_private_table_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_dismiss_private_table_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_dismiss_private_table_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_force_dismiss_private_table_req. */
export interface Imahjong_bc_force_dismiss_private_table_req {

    /** mahjong_bc_force_dismiss_private_table_req chairId */
    chairId: number;

    /** mahjong_bc_force_dismiss_private_table_req time */
    time: number;

    /** mahjong_bc_force_dismiss_private_table_req userName */
    userName: string;
}

/** Represents a mahjong_bc_force_dismiss_private_table_req. */
export class mahjong_bc_force_dismiss_private_table_req implements Imahjong_bc_force_dismiss_private_table_req {

    /**
     * Constructs a new mahjong_bc_force_dismiss_private_table_req.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_force_dismiss_private_table_req);

    /** mahjong_bc_force_dismiss_private_table_req chairId. */
    public chairId: number;

    /** mahjong_bc_force_dismiss_private_table_req time. */
    public time: number;

    /** mahjong_bc_force_dismiss_private_table_req userName. */
    public userName: string;

    /**
     * Creates a new mahjong_bc_force_dismiss_private_table_req instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_force_dismiss_private_table_req instance
     */
    public static create(properties?: Imahjong_bc_force_dismiss_private_table_req): mahjong_bc_force_dismiss_private_table_req;

    /**
     * Encodes the specified mahjong_bc_force_dismiss_private_table_req message. Does not implicitly {@link mahjong_bc_force_dismiss_private_table_req.verify|verify} messages.
     * @param message mahjong_bc_force_dismiss_private_table_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_force_dismiss_private_table_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_force_dismiss_private_table_req message, length delimited. Does not implicitly {@link mahjong_bc_force_dismiss_private_table_req.verify|verify} messages.
     * @param message mahjong_bc_force_dismiss_private_table_req message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_force_dismiss_private_table_req, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_force_dismiss_private_table_req message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_force_dismiss_private_table_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_force_dismiss_private_table_req;

    /**
     * Decodes a mahjong_bc_force_dismiss_private_table_req message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_force_dismiss_private_table_req
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_force_dismiss_private_table_req;

    /**
     * Verifies a mahjong_bc_force_dismiss_private_table_req message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_force_dismiss_private_table_req message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_force_dismiss_private_table_req
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_force_dismiss_private_table_req;

    /**
     * Creates a plain object from a mahjong_bc_force_dismiss_private_table_req message. Also converts values to other types if specified.
     * @param message mahjong_bc_force_dismiss_private_table_req
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_force_dismiss_private_table_req, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_force_dismiss_private_table_req to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_cb_force_dismiss_private_table_ack. */
export interface Imahjong_cb_force_dismiss_private_table_ack {

    /** mahjong_cb_force_dismiss_private_table_ack accept */
    accept: number;
}

/** Represents a mahjong_cb_force_dismiss_private_table_ack. */
export class mahjong_cb_force_dismiss_private_table_ack implements Imahjong_cb_force_dismiss_private_table_ack {

    /**
     * Constructs a new mahjong_cb_force_dismiss_private_table_ack.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_cb_force_dismiss_private_table_ack);

    /** mahjong_cb_force_dismiss_private_table_ack accept. */
    public accept: number;

    /**
     * Creates a new mahjong_cb_force_dismiss_private_table_ack instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_cb_force_dismiss_private_table_ack instance
     */
    public static create(properties?: Imahjong_cb_force_dismiss_private_table_ack): mahjong_cb_force_dismiss_private_table_ack;

    /**
     * Encodes the specified mahjong_cb_force_dismiss_private_table_ack message. Does not implicitly {@link mahjong_cb_force_dismiss_private_table_ack.verify|verify} messages.
     * @param message mahjong_cb_force_dismiss_private_table_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_cb_force_dismiss_private_table_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_cb_force_dismiss_private_table_ack message, length delimited. Does not implicitly {@link mahjong_cb_force_dismiss_private_table_ack.verify|verify} messages.
     * @param message mahjong_cb_force_dismiss_private_table_ack message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_cb_force_dismiss_private_table_ack, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_cb_force_dismiss_private_table_ack message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_cb_force_dismiss_private_table_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_cb_force_dismiss_private_table_ack;

    /**
     * Decodes a mahjong_cb_force_dismiss_private_table_ack message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_cb_force_dismiss_private_table_ack
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_cb_force_dismiss_private_table_ack;

    /**
     * Verifies a mahjong_cb_force_dismiss_private_table_ack message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_cb_force_dismiss_private_table_ack message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_cb_force_dismiss_private_table_ack
     */
    public static fromObject(object: { [k: string]: any }): mahjong_cb_force_dismiss_private_table_ack;

    /**
     * Creates a plain object from a mahjong_cb_force_dismiss_private_table_ack message. Also converts values to other types if specified.
     * @param message mahjong_cb_force_dismiss_private_table_ack
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_cb_force_dismiss_private_table_ack, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_cb_force_dismiss_private_table_ack to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_force_dismiss_private_table_not. */
export interface Imahjong_bc_force_dismiss_private_table_not {

    /** mahjong_bc_force_dismiss_private_table_not chairId */
    chairId: number;

    /** mahjong_bc_force_dismiss_private_table_not accept */
    accept: number;

    /** mahjong_bc_force_dismiss_private_table_not userName */
    userName: string;
}

/** Represents a mahjong_bc_force_dismiss_private_table_not. */
export class mahjong_bc_force_dismiss_private_table_not implements Imahjong_bc_force_dismiss_private_table_not {

    /**
     * Constructs a new mahjong_bc_force_dismiss_private_table_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_force_dismiss_private_table_not);

    /** mahjong_bc_force_dismiss_private_table_not chairId. */
    public chairId: number;

    /** mahjong_bc_force_dismiss_private_table_not accept. */
    public accept: number;

    /** mahjong_bc_force_dismiss_private_table_not userName. */
    public userName: string;

    /**
     * Creates a new mahjong_bc_force_dismiss_private_table_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_force_dismiss_private_table_not instance
     */
    public static create(properties?: Imahjong_bc_force_dismiss_private_table_not): mahjong_bc_force_dismiss_private_table_not;

    /**
     * Encodes the specified mahjong_bc_force_dismiss_private_table_not message. Does not implicitly {@link mahjong_bc_force_dismiss_private_table_not.verify|verify} messages.
     * @param message mahjong_bc_force_dismiss_private_table_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_force_dismiss_private_table_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_force_dismiss_private_table_not message, length delimited. Does not implicitly {@link mahjong_bc_force_dismiss_private_table_not.verify|verify} messages.
     * @param message mahjong_bc_force_dismiss_private_table_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_force_dismiss_private_table_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_force_dismiss_private_table_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_force_dismiss_private_table_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_force_dismiss_private_table_not;

    /**
     * Decodes a mahjong_bc_force_dismiss_private_table_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_force_dismiss_private_table_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_force_dismiss_private_table_not;

    /**
     * Verifies a mahjong_bc_force_dismiss_private_table_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_force_dismiss_private_table_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_force_dismiss_private_table_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_force_dismiss_private_table_not;

    /**
     * Creates a plain object from a mahjong_bc_force_dismiss_private_table_not message. Also converts values to other types if specified.
     * @param message mahjong_bc_force_dismiss_private_table_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_force_dismiss_private_table_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_force_dismiss_private_table_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}

/** Properties of a mahjong_bc_dismiss_private_result_not. */
export interface Imahjong_bc_dismiss_private_result_not {

    /** mahjong_bc_dismiss_private_result_not ret */
    ret: number;
}

/** Represents a mahjong_bc_dismiss_private_result_not. */
export class mahjong_bc_dismiss_private_result_not implements Imahjong_bc_dismiss_private_result_not {

    /**
     * Constructs a new mahjong_bc_dismiss_private_result_not.
     * @param [properties] Properties to set
     */
    constructor(properties?: Imahjong_bc_dismiss_private_result_not);

    /** mahjong_bc_dismiss_private_result_not ret. */
    public ret: number;

    /**
     * Creates a new mahjong_bc_dismiss_private_result_not instance using the specified properties.
     * @param [properties] Properties to set
     * @returns mahjong_bc_dismiss_private_result_not instance
     */
    public static create(properties?: Imahjong_bc_dismiss_private_result_not): mahjong_bc_dismiss_private_result_not;

    /**
     * Encodes the specified mahjong_bc_dismiss_private_result_not message. Does not implicitly {@link mahjong_bc_dismiss_private_result_not.verify|verify} messages.
     * @param message mahjong_bc_dismiss_private_result_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: Imahjong_bc_dismiss_private_result_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified mahjong_bc_dismiss_private_result_not message, length delimited. Does not implicitly {@link mahjong_bc_dismiss_private_result_not.verify|verify} messages.
     * @param message mahjong_bc_dismiss_private_result_not message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: Imahjong_bc_dismiss_private_result_not, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a mahjong_bc_dismiss_private_result_not message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns mahjong_bc_dismiss_private_result_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): mahjong_bc_dismiss_private_result_not;

    /**
     * Decodes a mahjong_bc_dismiss_private_result_not message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns mahjong_bc_dismiss_private_result_not
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): mahjong_bc_dismiss_private_result_not;

    /**
     * Verifies a mahjong_bc_dismiss_private_result_not message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a mahjong_bc_dismiss_private_result_not message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns mahjong_bc_dismiss_private_result_not
     */
    public static fromObject(object: { [k: string]: any }): mahjong_bc_dismiss_private_result_not;

    /**
     * Creates a plain object from a mahjong_bc_dismiss_private_result_not message. Also converts values to other types if specified.
     * @param message mahjong_bc_dismiss_private_result_not
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: mahjong_bc_dismiss_private_result_not, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this mahjong_bc_dismiss_private_result_not to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };
}
