message mahjong_mj_completedata_not_v1_1_0{

	required	int32	nDiZhu	=	1;
	required	int32	nTaifei	=	2;
	required	int32	nLeftCards	=	3;
	required	int32	cBanker	=	4;
	required	int32	cCurrPly	=	5;
	required	int32	cAutoState	=	6;
	required	int32	cAutoType	=	7;
	required	int32	sSerialID	=	8;
	repeated	mahjong_mj_changecard_not	vecPlyData	=	9;
	repeated	int64	vecFakeScores	=	10;
}
message mahjong_mj_tingfan_not{

	required	int32	sSerialID	=	1;
	repeated	mahjong_tingfan_data	vecTingFan	=	2;
}
message mahjong_mj_wait_game_not{

	required	int32	nTimer	=	1;
	repeated	int32	vecChairid	=	2;
	repeated	int32	vecType	=	3;
}
message mahjong_mj_hudouble_req{

}
message mahjong_gc_task_not{

	required	mahjong_TaskItem	task_item	=	1;
}
message mahjong_cg_get_redpackets_88yuan_award_req{

	required	int32	type	=	1;
}
message mahjong_scmj_gc_expression_not{

	required	int32	expression_type	=	1;
	required	int32	expression_num	=	2;
}
message mahjong_mj_robot_not{

	required	int32	nType	=	1;
	required	int32	cChairId	=	2;
	repeated	int32	vecCards	=	3;
}
message mahjong_Cli_Auto_Req{

	required	int32	cAuto	=	1;
	required	int32	iAutoType	=	2;
}
message mahjong_st_gameresult_v2_1_4{

	required	int32	cChairID	=	1;
	required	int32	cWonLose	=	2;
	required	int64	nScore	=	3;
	required	int32	nHuType	=	4;
	required	int32	cMingGangNum	=	5;
	required	int32	cAnGangNum	=	6;
	required	int32	cBuGangNum	=	7;
	required	int32	cChaJiao	=	8;
	required	int32	bGangHua	=	9;
	required	int32	cGenNum	=	10;
	required	int32	nTax	=	11;
	repeated	mahjong_gang_data	vecGangData	=	12;
	repeated	mahjong_fan_data	vecHu	=	13;
	repeated	mahjong_fan_data	vecHued	=	14;
	repeated	mahjong_fan_data	vecGangPao	=	15;
	repeated	mahjong_fan_data	vecChaJiao	=	16;
	repeated	mahjong_fan_data	vecWuJiaoGang	=	17;
	repeated	mahjong_fan_data	vecHuaZhu	=	18;
}
message mahjong_Cli_leave_game_req{

}
message mahjong_mj_dice_not{

	required	int32	cBanker	=	1;
	repeated	int32	vecDice	=	2;
	required	int32	cWallEndChair	=	3;
	required	int32	cWallEndPos	=	4;
}
message mahjong_svr_choose_ratio_rsp{

	required	int32	nRatio	=	1;
	required	int32	sSerialID	=	2;
}
message mahjong_mj_huedcards_not{

	required	int32	cChairID	=	1;
	repeated	int32	vecCards	=	2;
}
message mahjong_st_gameresult_v2_2_0{

	required	int32	cChairID	=	1;
	required	int32	cWonLose	=	2;
	required	int64	nScore	=	3;
	required	int32	cChaJiao	=	4;
	required	int32	nTax	=	5;
	repeated	mahjong_gang_data	vecGangData	=	6;
	repeated	mahjong_fan_data_v2_2_0	vecHu	=	7;
	repeated	mahjong_fan_data_v2_2_0	vecHued	=	8;
	repeated	mahjong_fan_data_v2_2_0	vecGangPao	=	9;
	repeated	mahjong_fan_data_v2_2_0	vecChaJiao	=	10;
	repeated	mahjong_fan_data_v2_2_0	vecWuJiaoGang	=	11;
	repeated	mahjong_fan_data_v2_2_0	vecHuaZhu	=	12;
}
message mahjong_svr_fake_score_not{

	repeated	int64	scores	=	1;
}
message mahjong_get_mj_private_room_result_req{

}
message mahjong_mj_dingque_req{

	required	int32	nTimer	=	1;
	required	int32	sSerialID	=	2;
	required	int32	cQueType	=	3;
}
message mahjong_mj_playcard_req{

	required	int32	chairId	=	1;
	required	int32	nOpcode	=	2;
	required	int32	cPrevCard	=	3;
	repeated	int32	vecTingPutCards	=	4;
	repeated	int32	vecTingHuCards	=	5;
	repeated	int32	vecGangCards	=	6;
	required	int32	sSerialID	=	7;
}
message mahjong_cg_get_redpackets_award_req{

	required	int32	type	=	1;
}
message mahjong_mj_gameresult_not_v1_1_0{

	repeated	mahjong_st_gameresult_v1_1_0	vecGameResult	=	1;
}
message mahjong_mj_private_room_result_not{

	repeated	mahjong_GameStatisc	vecGameStatiscs	=	1;
}
message mahjong_tingfan_data{

	required	int32	cPutCard	=	1;
	required	int32	cHuCard	=	2;
	required	int32	nFan	=	3;
	required	int32	nLeftNum	=	4;
}
message mahjong_mj_gangresult_not{

	repeated	int32	vecGangFen	=	1;
}
message mahjong_mj_seat_dice_not{

	required	int32	cChairID	=	1;
	repeated	int32	vecDice	=	2;
}
message mahjong_fan_data{

	required	int32	cChairId	=	1;
	required	int32	nScore	=	2;
	required	int32	cType	=	3;
}
message mahjong_GameStatisc{

	required	int32	nBankerNum	=	1;
	required	int32	nLianBankerNum	=	2;
	required	int32	nHuNum	=	3;
	required	int32	nDianPaoNum	=	4;
	required	int32	nMoBaoNum	=	5;
	required	int32	nBaoZhongBaoNum	=	6;
	required	int64	nAmount	=	7;
}
message mahjong_animate_ok_req{

}
message mahjong_mj_rount_count_not{

	required	int32	nMaJiangQuan	=	1;
	required	int32	nMaJiangJu	=	2;
	required	int32	nMaJiangCount	=	3;
}
message mahjong_player_itemInfo{

	required	int32	nItemIndex	=	1;
	required	int32	nItemNum	=	2;
}
message mahjong_st_gameresult{

	required	int32	cChairID	=	1;
	required	int32	cWonLose	=	2;
	required	int32	cResult	=	3;
	required	int64	nScore	=	4;
	required	int32	nHuType	=	5;
	required	int32	cMingGangNum	=	6;
	required	int32	cAnGangNum	=	7;
	required	int32	cBuGangNum	=	8;
	required	int32	cDianPaoChair	=	9;
	required	int32	cChaJiao	=	10;
	required	int32	bQiangGang	=	11;
	required	int32	bGangHua	=	12;
	required	int32	bGangPao	=	13;
	required	int32	cGenNum	=	14;
}
message mahjong_mj_userdata_not{

	required	int32	cChairid	=	1;
	required	int32	nType	=	2;
	required	int64	nAmount	=	3;
	required	string	strParam	=	4;
}
message mahjong_mj_completedata_not{

	required	int32	nDiZhu	=	1;
	required	int32	nLeftCards	=	2;
	required	int32	cBanker	=	3;
	required	int32	cCurrPly	=	4;
	required	int32	cAutoState	=	5;
	required	int32	cAutoType	=	6;
	required	int32	sSerialID	=	7;
	repeated	mahjong_mj_changecard_not	vecPlyData	=	8;
}
message mahjong_TaskItem{

	required	int32	task_id	=	1;
	required	string	task_desc	=	2;
	required	string	task_mission	=	3;
	required	int32	task_money_type	=	4;
	required	int32	task_money	=	5;
	required	int32	task_rate	=	6;
}
message mahjong_gang_data{

	required	int32	cNum	=	1;
	required	int32	nScore	=	2;
}
message mahjong_gc_get_redpackets_award_ack{

	required	int32	ret	=	1;
	required	int32	cur_rounds	=	2;
	required	int32	limit_rounds	=	3;
	required	int32	nAmount	=	4;
	required	int32	cItemtype	=	5;
	required	int32	task_id	=	6;
	repeated	mahjong_player_itemInfo	fakeItem	=	7;
}
message mahjong_mj_charged_ack{

	required	int32	cRet	=	1;
	required	int32	sSerialID	=	2;
}
message mahjong_mj_visi_compdata_req{

}
message mahjong_fan_data_v2_2_0{

	required	int32	cChairId	=	1;
	required	int32	nScore	=	2;
	required	int32	cType	=	3;
	required	int32	nIndex	=	4;
}
message mahjong_gc_get_redpackets_88yuan_award_ack{

	required	int32	ret	=	1;
	required	int32	cur_rounds	=	2;
	required	int32	limit_rounds	=	3;
	required	int32	nAmount	=	4;
	required	int32	cItemtype	=	5;
	required	int32	task_id	=	6;
}
message mahjong_mj_gang_score_not{

	required	int32	chairId	=	1;
	required	int32	type	=	2;
	required	int32	score	=	3;
}
message mahjong_mj_pause_game_not{

	required	int32	nFlag	=	1;
	required	int32	nWaitTime	=	2;
	required	int32	nLeftTime	=	3;
	required	int32	cChairId	=	4;
	required	string	sNickName	=	5;
}
message mahjong_mj_dingque_not{

	required	int32	cChairid	=	1;
	required	int32	cCardType	=	2;
	required	int32	cResend	=	3;
}
message mahjong_mj_changecard_not{

	required	int32	cChairID	=	1;
	required	int32	cHuPai	=	2;
	required	int32	cCurrCards	=	3;
	repeated	int32	vecDisplayCards	=	4;
	repeated	int32	vecLeftCards	=	5;
	repeated	int32	vecHandCards	=	6;
}
message mahjong_get_mj_private_room_result_ack{

	repeated	mahjong_GameStatisc	vecGameStatiscs	=	1;
}
message mahjong_mj_gameresult_not{

	repeated	mahjong_st_gameresult	vecGameResult	=	1;
}
message mahjong_Svr_Auto_Not{

	required	int32	cChairID	=	1;
	required	int32	cAuto	=	2;
	required	int32	iAutoType	=	3;
}
message mahjong_mj_hudouble_ack{

	required	int32	cDoubleStyle	=	1;
}
message mahjong_mj_operate_not{

	required	int32	cChairID	=	1;
	required	int32	nOpcode	=	2;
	required	int32	cCard	=	3;
	required	int32	cWallCardNum	=	4;
}
message mahjong_gc_clienttimer_not{

	required	int32	cChairId	=	1;
	required	int32	cNextChairId	=	2;
	required	int32	nPeriod	=	3;
	required	int32	nOpcode	=	4;
}
message mahjong_Cli_TingType_req{

	required	int32	cAutoGang	=	1;
	required	int32	cZimoOnly	=	2;
}
message mahjong_mj_need_charge_req{

	required	int32	nTimer	=	1;
	required	int32	nType	=	2;
	required	int32	sSerialID	=	3;
}
message mahjong_mj_hudouble_not{

	required	int32	cChairID	=	1;
	required	int32	sDoubleNum	=	2;
}
message mahjong_gc_update_player_tokenmoney_not{

	required	int32	ply_chairid	=	1;
	repeated	mahjong_player_itemInfo	itemInfo	=	2;
}
message mahjong_svr_dizhu_not{

	required	int32	nDiZhu	=	1;
}
message mahjong_svr_portrait_req{

}
message mahjong_mj_completedata_req{

}
message mahjong_svr_leave_enable_not{

}
message mahjong_mj_visi_compdata_not{

	required	int32	cBanker	=	1;
	required	int32	nLeftCards	=	2;
	required	int32	nDizhu	=	3;
	required	int32	nTaifei	=	4;
	required	int32	cCurrPly	=	5;
	required	int32	cPrioPly	=	6;
	required	int32	cAdminPly	=	7;
	required	int32	cInvitePly	=	8;
	repeated	int64	vecFakeScores	=	9;
	repeated	mahjong_mj_changecard_not	vecPlyData	=	10;
	required	int32	nParam1	=	11;
	required	int32	nParam2	=	12;
	required	string	strParam1	=	13;
	required	string	strParam2	=	14;
}
message mahjong_svr_fake_score_not_v1_1_0{

	repeated	int64	scores	=	1;
}
message mahjong_mj_gameresult_not_v2_2_0{

	repeated	mahjong_st_gameresult_v2_2_0	vecGameResult	=	1;
}
message mahjong_mj_dingque_rsp{

	required	int32	cCardType	=	1;
	required	int32	sSerialID	=	2;
}
message mahjong_mj_giveup_not{

	repeated	int32	vecChairid	=	1;
}
message mahjong_svr_taifei_not{

	required	int32	nTaifei	=	1;
}
message mahjong_mj_playcard_ack{

	required	int32	nOpcode	=	1;
	required	int32	cOpCard	=	2;
	required	int32	sSerialID	=	3;
}
message mahjong_mj_need_charge_rsp{

	required	int32	cRet	=	1;
	required	int32	sSerialID	=	2;
}
message mahjong_svr_choose_ratio_not{

	required	int32	cChairID	=	1;
	required	int32	nRatio	=	2;
	required	int32	nCurRatio	=	3;
}
message mahjong_svr_choose_ratio_req{

	required	int32	nMin	=	1;
	required	int32	nPeriod	=	2;
	required	int32	sSerialID	=	3;
}
message mahjong_st_gameresult_v1_1_0{

	required	int32	cChairID	=	1;
	required	int32	cWonLose	=	2;
	required	int32	cResult	=	3;
	required	int64	nScore	=	4;
	required	int32	nHuType	=	5;
	required	int32	cMingGangNum	=	6;
	required	int32	cAnGangNum	=	7;
	required	int32	cBuGangNum	=	8;
	required	int32	cDianPaoChair	=	9;
	required	int32	cChaJiao	=	10;
	required	int32	bQiangGang	=	11;
	required	int32	bGangHua	=	12;
	required	int32	bGangPao	=	13;
	required	int32	cGenNum	=	14;
	required	int32	nTax	=	15;
	repeated	mahjong_gang_data	vecGangData	=	16;
	repeated	mahjong_fan_data	vecHu	=	17;
	repeated	mahjong_fan_data	vecHued	=	18;
	repeated	mahjong_fan_data	vecGangPao	=	19;
	repeated	mahjong_fan_data	vecChaJiao	=	20;
	repeated	mahjong_fan_data	vecWuJiaoGang	=	21;
	repeated	mahjong_fan_data	vecHuaZhu	=	22;
}
message mahjong_svr_portrait_rsp{

	repeated	int32	chairId	=	1;
	repeated	int32	portraitId	=	2;
}
message mahjong_mj_gameresult_not_v2_1_4{

	repeated	mahjong_st_gameresult_v2_1_4	vecGameResult	=	1;
}
message mahjong_mj_banker_dice_not{

	required	int32	cBanker	=	1;
	repeated	int32	vecDice	=	2;
}
message mahjong_gc_task_complete_not{

	required	int32	chair_id	=	1;
	required	int32	task_status	=	2;
	required	int32	money	=	3;
	required	int32	gift	=	4;
}
